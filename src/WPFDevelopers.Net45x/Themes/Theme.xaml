<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:po="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options" po:Freeze="True" xmlns:sys="clr-namespace:System;assembly=mscorlib" xmlns:converts="clr-namespace:WPFDevelopers.Converts" xmlns:controls="clr-namespace:WPFDevelopers.Controls" xmlns:helpers="clr-namespace:WPFDevelopers.Helpers" xmlns:resx="clr-namespace:WPFDevelopers" xmlns:wd="clr-namespace:WPFDevelopers.Net45x" xmlns:shapes="clr-namespace:Microsoft.Expression.Drawing.Shapes" xmlns:ec="clr-namespace:Microsoft.Expression.Controls" xmlns:drawingControls="clr-namespace:Microsoft.Expression.Drawing.Controls" xmlns:input="clr-namespace:System.Windows.Input;assembly=PresentationCore">
	<SolidColorBrush x:Key="WD.ButtonFocusVisualColor" po:Freeze="True" Color="#60000000" />
	<Color x:Key="WD.ShadowDepthColor" po:Freeze="True">#AA000000</Color>
	<Color x:Key="WD.PrimaryTextColor" po:Freeze="True">#909399</Color>
	<Color x:Key="WD.PlaceholderTextColor" po:Freeze="True">#C0C4CC</Color>
	<Color x:Key="WD.NormalColor" po:Freeze="True">#409EFF</Color>
	<Color x:Key="WD.SuccessBorderBrushColor" po:Freeze="True">#99FA68</Color>
	<Color x:Key="WD.SuccessBackgroundColor" po:Freeze="True">#EFFCE9</Color>
	<Color x:Key="WD.SuccessColor" po:Freeze="True">#67C23A</Color>
	<Color x:Key="WD.SuccessMouseOverColor" po:Freeze="True">#85CE61</Color>
	<Color x:Key="WD.SuccessPressedColor" po:Freeze="True">#5DAF34</Color>
	<Color x:Key="WD.WarningBorderBrushColor" po:Freeze="True">#F8DBAF</Color>
	<Color x:Key="WD.WarningBackgroundColor" po:Freeze="True">#FAF2E5</Color>
	<Color x:Key="WD.WarningColor" po:Freeze="True">#E6A23C</Color>
	<Color x:Key="WD.WarningMouseOverColor" po:Freeze="True">#EBB563</Color>
	<Color x:Key="WD.WarningPressedColor" po:Freeze="True">#CF9236</Color>
	<Color x:Key="WD.DangerBorderBrushColor" po:Freeze="True">#F88C8C</Color>
	<Color x:Key="WD.DangerBackgroundColor" po:Freeze="True">#FCE5E5</Color>
	<Color x:Key="WD.DangerColor" po:Freeze="True">#F56C6C</Color>
	<Color x:Key="WD.DangerMouseOverColor" po:Freeze="True">#F78989</Color>
	<Color x:Key="WD.DangerPressedColor" po:Freeze="True">#DD6161</Color>
	<Color x:Key="WD.InfoColor" po:Freeze="True">#909399</Color>
	<Color x:Key="WD.InfoMouseOverColor" po:Freeze="True">#A6A9AD</Color>
	<Color x:Key="WD.InfoPressedColor" po:Freeze="True">#82848A</Color>
	<Color x:Key="WD.ExtralightColor" po:Freeze="True">#F2F6FC</Color>
	<Color x:Key="WD.BlackColor" po:Freeze="True">#000000</Color>
	<Color x:Key="WD.CircularSingularColor" po:Freeze="True">#BAE766</Color>
	<Color x:Key="WD.CircularDualColor" po:Freeze="True">#B0D440</Color>
	<RadialGradientBrush x:Key="WD.StarrySkyRadialGradientBrush" po:Freeze="True" Center="0.5,0.3" GradientOrigin="0.5,0" RadiusX="0.7">
		<GradientStop Offset="0" Color="#FF04040E" />
		<GradientStop Offset="1" Color="#FF24315D" />
	</RadialGradientBrush>
	<sys:Double x:Key="WD.NormalFontSize">13</sys:Double>
	<sys:Double x:Key="WD.MediumFontSize">14</sys:Double>
	<sys:Double x:Key="WD.TitleFontSize">16</sys:Double>
	<FontFamily x:Key="WD.NormalFontFamily">
        Helvetica Neue For Number, 
        -apple-system, 
        BlinkMacSystemFont, 
        Segoe UI,
        Roboto, 
        PingFang SC, 
        Hiragino Sans GB, 
        Microsoft YaHei, 
        Helvetica Neue, 
        Helvetica, Arial, 
        sans-serif
    </FontFamily>
	<FontStretch x:Key="WD.NormalFontStretch">Normal</FontStretch>
	<FontStyle x:Key="WD.NormalFontStyle">Normal</FontStyle>
	<FontWeight x:Key="WD.NormalFontWeight">Normal</FontWeight>
	<Geometry x:Key="WD.CheckMarkGeometry" po:Freeze="True">M384 690l452-452 60 60-512 512-238-238 60-60z</Geometry>
	<Geometry x:Key="WD.ChevronDownGeometry" po:Freeze="True">M998 352c0 -8 -4 -17 -10 -23l-50 -50c-6 -6 -14 -10 -23 -10c-8 0 -17 4 -23 10l-393 393l-393 -393c-6 -6 -15 -10 -23 -10s-17 4 -23 10l-50 50c-6 6 -10 15 -10 23s4 17 10 23l466 466c6 6 15 10 23 10s17 -4 23 -10l466 -466c6 -6 10 -15 10 -23z</Geometry>
	<Geometry x:Key="WD.BlackoutGeometry" po:Freeze="True">
        M8.1772461,11.029181 L10.433105,
        11.029181 L11.700684,12.801641 L12.973633,
        11.029181 L15.191895,11.029181 L12.844727,
        13.999395 L15.21875,17.060919 L12.962891,
        17.060919 L11.673828,15.256231 L10.352539,
        17.060919 L8.1396484,17.060919 L10.519043,
        14.042364 z
    </Geometry>
	<Geometry x:Key="WD.PreviousGeometry" po:Freeze="True">M658 316l-196 196 196 196-60 60-256-256 256-256z</Geometry>
	<Geometry x:Key="WD.NextGeometry" po:Freeze="True">M426 256l256 256-256 256-60-60 196-196-196-196z</Geometry>
	<Geometry x:Key="WD.DatePickerGeometry" po:Freeze="True">
        M11.426758,8.4305077 L11.749023,8.4305077
        L11.749023,16.331387 L10.674805,16.331387
        L10.674805,10.299648 L9.0742188,11.298672
        L9.0742188,10.294277 C9.4788408,10.090176
        9.9094238,9.8090878 10.365967,9.4510155
        C10.82251,9.0929432 11.176106,8.7527733
        11.426758,8.4305077 z M14.65086,8.4305077
        L18.566387,8.4305077 L18.566387,9.3435936
        L15.671368,9.3435936 L15.671368,11.255703
        C15.936341,11.058764 16.27293,10.960293
        16.681133,10.960293 C17.411602,10.960293
        17.969301,11.178717 18.354229,11.615566
        C18.739157,12.052416 18.931622,12.673672
        18.931622,13.479336 C18.931622,15.452317
        18.052553,16.438808 16.294415,16.438808
        C15.560365,16.438808 14.951641,16.234707
        14.468243,15.826504 L14.881817,14.929531
        C15.368796,15.326992 15.837872,15.525723
        16.289043,15.525723 C17.298809,15.525723
        17.803692,14.895514 17.803692,13.635098
        C17.803692,12.460618 17.305971,11.873379
        16.310528,11.873379 C15.83071,11.873379
        15.399232,12.079271 15.016094,12.491055
        L14.65086,12.238613 z
    </Geometry>
	<Geometry x:Key="WD.ChevronRightGeometry" po:Freeze="True">M678.4 512l-365.619-379.904c-13.722-13.824-13.722-36.198 0-50.125 13.722-13.824 35.891-13.824 49.613 0l400.896 404.89c13.722 13.875 13.722 36.301 0 50.125l-400.896 404.89c-13.722 13.875-35.891 13.824-49.613 0-13.722-13.773-13.722-36.198 0-50.125l365.619-379.75z</Geometry>
	<Geometry x:Key="WD.SortArrowGeometry" po:Freeze="True">M854 512l-342 342-342-342 62-60 238 238v-520h84v520l240-238z</Geometry>
	<Geometry x:Key="WD.WindowMaximizeGeometry" po:Freeze="True">M0.99999994,0.99999994 L0.99999994,9 9,9 9,0.99999994 z M0,0 L10,0 10,10 0,10 z</Geometry>
	<Geometry x:Key="WD.WindowRestoreGeometry" po:Freeze="True">M1,3 L1,9 7,9 7,3 z M3,0.99999994 L3,2 8,2 8,7 9,7 9,0.99999994 z M2,0 L10,0 10,8 8,8 8,10 0,10 0,2 2,2 z</Geometry>
	<Geometry x:Key="WD.WindowCloseGeometry" po:Freeze="True">M 1301 69.6875 L 1305.3049 74 L 1300.9375 78.5313 L 1301.6324 79.2263 L 1306 74.735 L 1310.4263 79.2613 L 1311.1563 78.5313 L 1306.7 74 L 1310.9375 69.6875 L 1310.2075 68.9575 L 1306 73.265 L 1301.6949 68.9925 L 1301 69.6875 Z</Geometry>
	<Geometry x:Key="WD.InformationGeometry" po:Freeze="True">M426 726l384-384-60-62-324 324-152-152-60 60zM512 86c236 0 426 190 426 426s-190 426-426 426-426-190-426-426 190-426 426-426z</Geometry>
	<Geometry x:Key="WD.WarningGeometry" po:Freeze="True">M512 960c-281.6 0-512-230.4-512-512s230.4-512 512-512 512 230.4 512 512-230.4 512-512 512zM576 128h-128v448h128v-448zM576 640h-128v128h128v-128z</Geometry>
	<Geometry x:Key="WD.QuestionGeometry" po:Freeze="True">M10 20a10 10 0 1 1 0-20 10 10 0 0 1 0 20zm2-13c0 .28-.21.8-.42 1L10 9.58c-.57.58-1 1.6-1 2.42v1h2v-1c0-.29.21-.8.42-1L13 9.42c.57-.58 1-1.6 1-2.42a4 4 0 1 0-8 0h2a2 2 0 1 1 4 0zm-3 8v2h2v-2H9z</Geometry>
	<Geometry x:Key="WD.ErrorGeometry" po:Freeze="True">M264 456Q210 456 164 429 118 402 91 356 64 310 64 256 64 202 91 156 118 110 164 83 210 56 264 56 318 56 364 83 410 110 437 156 464 202 464 256 464 310 437 356 410 402 364 429 318 456 264 456ZM264 288L328 352 360 320 296 256 360 192 328 160 264 224 200 160 168 192 232 256 168 320 200 352 264 288Z</Geometry>
	<Geometry x:Key="WD.SmileyOutlineGeometry" po:Freeze="True">M14.36,14.23a3.76,3.76,0,0,1-4.72,0,1,1,0,0,0-1.28,1.54,5.68,5.68,0,0,0,7.28,0,1,1,0,1,0-1.28-1.54ZM9,11a1,1,0,1,0-1-1A1,1,0,0,0,9,11Zm6-2a1,1,0,1,0,1,1A1,1,0,0,0,15,9ZM12,2A10,10,0,1,0,22,12,10,10,0,0,0,12,2Zm0,18a8,8,0,1,1,8-8A8,8,0,0,1,12,20Z</Geometry>
	<Geometry x:Key="WD.BusGeometry" po:Freeze="True">M18,11H6V6H18M16.5,17A1.5,1.5 0 0,1 15,15.5A1.5,1.5 0 0,1 16.5,14A1.5,1.5 0 0,1 18,15.5A1.5,1.5 0 0,1 16.5,17M7.5,17A1.5,1.5 0 0,1 6,15.5A1.5,1.5 0 0,1 7.5,14A1.5,1.5 0 0,1 9,15.5A1.5,1.5 0 0,1 7.5,17M4,16C4,16.88 4.39,17.67 5,18.22V20A1,1 0 0,0 6,21H7A1,1 0 0,0 8,20V19H16V20A1,1 0 0,0 17,21H18A1,1 0 0,0 19,20V18.22C19.61,17.67 20,16.88 20,16V6C20,2.5 16.42,2 12,2C7.58,2 4,2.5 4,6V16Z</Geometry>
	<Geometry x:Key="WD.FriendGeometry" po:Freeze="True">M12.3,12.22A4.92,4.92,0,0,0,14,8.5a5,5,0,0,0-10,0,4.92,4.92,0,0,0,1.7,3.72A8,8,0,0,0,1,19.5a1,1,0,0,0,2,0,6,6,0,0,1,12,0,1,1,0,0,0,2,0A8,8,0,0,0,12.3,12.22ZM9,11.5a3,3,0,1,1,3-3A3,3,0,0,1,9,11.5Zm9.74.32A5,5,0,0,0,15,3.5a1,1,0,0,0,0,2,3,3,0,0,1,3,3,3,3,0,0,1-1.5,2.59,1,1,0,0,0-.5.84,1,1,0,0,0,.45.86l.39.26.13.07a7,7,0,0,1,4,6.38,1,1,0,0,0,2,0A9,9,0,0,0,18.74,11.82Z</Geometry>
	<Geometry x:Key="WD.BuildingRegularGeometry" po:Freeze="True">M128 148v-40c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v40c0 6.6-5.4 12-12 12h-40c-6.6 0-12-5.4-12-12zm140 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-128 96h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm128 0h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm-76 84v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12h40c6.6 0 12-5.4 12-12zm76 12h40c6.6 0 12-5.4 12-12v-40c0-6.6-5.4-12-12-12h-40c-6.6 0-12 5.4-12 12v40c0 6.6 5.4 12 12 12zm180 124v36H0v-36c0-6.6 5.4-12 12-12h19.5V24c0-13.3 10.7-24 24-24h337c13.3 0 24 10.7 24 24v440H436c6.6 0 12 5.4 12 12zM79.5 463H192v-67c0-6.6 5.4-12 12-12h40c6.6 0 12 5.4 12 12v67h112.5V49L80 48l-.5 415z</Geometry>
	<Geometry x:Key="WD.AlarmClockGeometry" po:Freeze="True">M470 124.837l-98.443-81.78-27.814 32.931 98.442 81.769L470 124.837zM167.192 74.919L139.366 42 42 124.837l27.814 32.919 97.378-82.837zm99.509 97.709H234.6v127.446l101.649 60.539L352.3 334.06l-85.6-49.917V172.628zM256 87.665c-107 0-192.601 86.021-192.601 191.166C63.399 383.98 149 470 256 470c105.936 0 192.601-86.02 192.601-191.169 0-105.144-86.665-191.166-192.601-191.166zm0 339.855c-82.393 0-149.8-66.906-149.8-148.688 0-81.777 67.407-148.684 149.8-148.684 82.394 0 149.8 66.906 149.8 148.684 0 82.839-67.406 148.688-149.8 148.688z</Geometry>
	<Geometry x:Key="WD.FlagGeometry" po:Freeze="True">M687.5 125C500 125 375 13.7 187.5 62.5V31.3C187.5 31.3 187.5 0 156.3 0C125 0 125 31.3 125 31.3V1000H187.5V625C375 562.5 500 687.5 687.5 687.5C875 687.5 937.5 625 937.5 625V62.5C937.5 62.5 875 125 687.5 125Z</Geometry>
	<Geometry x:Key="WD.CircularGeometry" po:Freeze="True">M 200,200 0,200 A 200,200 0 0 1 58.6,58.6z</Geometry>
	<Geometry x:Key="WD.AddGeometry" po:Freeze="True">M810 554h-256v256h-84v-256h-256v-84h256v-256h84v256h256v84z</Geometry>
	<Geometry x:Key="WD.ChatLeftGeometry" po:Freeze="True">M365.714 256v512q0 14.857-10.857 25.714t-25.714 10.857-25.714-10.857l-256-256q-10.857-10.857-10.857-25.714t10.857-25.714l256-256q10.857-10.857 25.714-10.857t25.714 10.857 10.857 25.714z</Geometry>
	<Geometry x:Key="WD.ChatRightGeometry" po:Freeze="True">M329.143 512q0 14.857-10.857 25.714l-256 256q-10.857 10.857-25.714 10.857t-25.714-10.857-10.857-25.714v-512q0-14.857 10.857-25.714t25.714-10.857 25.714 10.857l256 256q10.857 10.857 10.857 25.714z</Geometry>
	<Geometry x:Key="WD.StarGeometry" po:Freeze="True">M649.714 573.714l174.857-169.714-241.143-35.429-108-218.286-108 218.286-241.143 35.429 174.857 169.714-41.714 240.571 216-113.714 215.429 113.714zM950.857 369.714q0 12.571-14.857 27.429l-207.429 202.286 49.143 285.714q0.571 4 0.571 11.429 0 28.571-23.429 28.571-10.857 0-22.857-6.857l-256.571-134.857-256.571 134.857q-12.571 6.857-22.857 6.857-12 0-18-8.286t-6-20.286q0-3.429 1.143-11.429l49.143-285.714-208-202.286q-14.286-15.429-14.286-27.429 0-21.143 32-26.286l286.857-41.714 128.571-260q10.857-23.429 28-23.429t28 23.429l128.571 260 286.857 41.714q32 5.143 32 26.286z</Geometry>
	<Geometry x:Key="WD.CompleteGeometry" po:Freeze="True">M384 690l452-452 60 60-512 512-238-238 60-60z</Geometry>
	<Geometry x:Key="WD.CancelGeometry" po:Freeze="True">M810.667 170.667q18.333 0 30.5 12.167t12.167 30.5q0 18-12.333 30.333l-268.667 268.333 268.667 268.333q12.333 12.333 12.333 30.333 0 18.333-12.167 30.5t-30.5 12.167q-18 0-30.333-12.333l-268.333-268.667-268.333 268.667q-12.333 12.333-30.333 12.333-18.333 0-30.5-12.167t-12.167-30.5q0-18 12.333-30.333l268.667-268.333-268.667-268.333q-12.333-12.333-12.333-30.333 0-18.333 12.167-30.5t30.5-12.167q18 0 30.333 12.333l268.333 268.667 268.333-268.667q12.333-12.333 30.333-12.333z</Geometry>
	<Geometry x:Key="WD.SaveGeometry" po:Freeze="True">M512 42.667q17.667 0 30.167 12.5t12.5 30.167v494.333l140.333-140.667q12.333-12.333 30.333-12.333 18.333 0 30.5 12.167t12.167 30.5q0 18-12.333 30.333l-213.333 213.333q-12.333 12.333-30.333 12.333t-30.333-12.333l-213.333-213.333q-12.333-13-12.333-30.333 0-17.667 12.5-30.167t30.167-12.5q18 0 30.333 12.333l140.333 140.667v-494.333q0-17.667 12.5-30.167t30.167-12.5zM938.667 640q17.667 0 30.167 12.5t12.5 30.167v170.667q0 53.333-37 90.333-37.667 37.667-90 37.667h-683.667q-52.333 0-90.667-37.333-37.333-38.333-37.333-90.667v-170.667q0-17.667 12.5-30.167t30.167-12.5 30.167 12.5 12.5 30.167v170.667q0 17.667 12.5 30.167t30.167 12.5h683.667q17.333 0 29.5-12.5t12.167-30.167v-170.667q0-17.667 12.5-30.167t30.167-12.5z</Geometry>
	<Geometry x:Key="WD.MenuGeometry" po:Freeze="True">M2,15.5L22,15.5 22,17.5 2,17.5 2,15.5z M2,10.5L22,10.5 22,12.5 2,12.5 2,10.5z M2,5.5L22,5.5 22,7.5 2,7.5 2,5.5z</Geometry>
	<Geometry x:Key="WD.SectorGeometry" po:Freeze="True">M 200,200 0,200 A 200,200 0 0 1 58.6,58.6z</Geometry>
	<Geometry x:Key="WD.ReplaceGeometry" po:Freeze="True">M282.419 728.269c-115.814-124.518-113.766-319.693 6.554-440.883 49.254-49.613 110.797-79.206 174.797-88.883l-3.533-106.342c-89.856 10.906-176.742 50.995-245.606 120.371-161.229 162.304-163.174 424.397-6.298 590.387l-89.139 89.702 282.112 15.411-0.768-298.701-118.118 118.938zM622.746 115.968l0.768 298.701 118.118-118.886c115.814 124.621 113.766 319.795-6.554 440.883-49.203 49.613-110.797 79.206-174.797 88.883l3.533 106.291c89.856-10.906 176.742-50.995 245.658-120.32 161.178-162.406 163.123-424.499 6.246-590.387l89.139-89.805-282.112-15.36z</Geometry>
	<Geometry x:Key="WD.AudioOneGeometry" po:Freeze="True">M344.96 362.647l-146.526 150.83L347.89 664.314c79.122-82.808 79.122-218.856-2.93-301.667z</Geometry>
	<Geometry x:Key="WD.AudioTwoGeometry" po:Freeze="True">M494.413 214.765l-73.263 73.941c123.083 124.215 123.083 325.328 0 449.546l73.263 73.938c164.11-165.625 164.11-431.797 0-597.425z</Geometry>
	<Geometry x:Key="WD.AudioThreeGeometry" po:Freeze="True">M640.944 63.934l-73.266 73.941c205.138 207.023 205.138 541.221 0 748.256l73.266 73.935c246.163-245.478 246.163-647.699 0-896.132z</Geometry>
	<Geometry x:Key="WD.RectangleGeometry" po:Freeze="True">M640 146.286h-475.429q-37.714 0-64.571 26.857t-26.857 64.571v475.429q0 37.714 26.857 64.571t64.571 26.857h475.429q37.714 0 64.571-26.857t26.857-64.571v-475.429q0-37.714-26.857-64.571t-64.571-26.857zM804.571 237.714v475.429q0 68-48.286 116.286t-116.286 48.286h-475.429q-68 0-116.286-48.286t-48.286-116.286v-475.429q0-68 48.286-116.286t116.286-48.286h475.429q68 0 116.286 48.286t48.286 116.286z</Geometry>
	<Geometry x:Key="WD.EllipseGeometry" po:Freeze="True">M438.857 201.143q-84.571 0-156 41.714t-113.143 113.143-41.714 156 41.714 156 113.143 113.143 156 41.714 156-41.714 113.143-113.143 41.714-156-41.714-156-113.143-113.143-156-41.714zM877.714 512q0 119.429-58.857 220.286t-159.714 159.714-220.286 58.857-220.286-58.857-159.714-159.714-58.857-220.286 58.857-220.286 159.714-159.714 220.286-58.857 220.286 58.857 159.714 159.714 58.857 220.286z</Geometry>
	<Geometry x:Key="WD.UpperTriangleGeometry" po:Freeze="True">M768 716.8h-512l256-460.8 256 460.8z</Geometry>
	<Geometry x:Key="WD.ArrowGeometry" po:Freeze="True">M2.8421711E-14,30 L30,15 2.8421711E-14,3.5527137E-15 5.3751788,15 z</Geometry>
	<Geometry x:Key="WD.ArrowRightTopGeometry" po:Freeze="True">M384 214h426v426h-84v-282l-496 496-60-60 496-496h-282v-84z</Geometry>
	<Geometry x:Key="WD.ArrowBranchesGeometry" po:Freeze="True">M458.361,207.01328 L574.12778,224.42874 574,184 458.361,204.52536</Geometry>
	<Geometry x:Key="WD.TextGeometry" po:Freeze="True">M8.394,7.3850001 L18,7.3850001 18,8.9495381 14.071471,8.9495381 14.071471,21 12.304952,21 12.304952,8.9495381 8.394,8.9495381 z M5.2364039,2.4000326 C4.4364113,2.4000326 3.7515685,2.6937805 3.1818757,3.2812766 2.612183,3.8687721 2.3273365,4.5750159 2.3273365,5.4000081 L2.3273365,20.999992 C2.3273365,21.824983 2.612183,22.531227 3.1818757,23.118723 3.7515685,23.706219 4.4364113,23.999966 5.2364039,23.999966 L20.363661,23.999966 C21.163652,23.999966 21.848495,23.706219 22.418188,23.118723 22.987883,22.531227 23.272728,21.824983 23.272728,20.999992 L23.272728,5.4000081 C23.272728,4.5750159 22.987883,3.8687721 22.418188,3.2812766 21.848495,2.6937805 21.163652,2.4000326 20.363661,2.4000326 z M5.2363719,0 L20.36363,0 C21.806051,0 23.039387,0.52812719 24.063631,1.5843812 25.087877,2.6406356 25.6,3.912511 25.6,5.4000081 L25.6,20.999992 C25.6,22.487488 25.087877,23.759365 24.063631,24.815618 23.039387,25.871874 21.806051,26.399999 20.36363,26.399999 L5.2363719,26.399999 C3.7939503,26.399999 2.5606164,25.871874 1.5363699,24.815618 0.51212323,23.759365 -5.3697355E-08,22.487488 3.5527137E-15,20.999992 L3.5527137E-15,5.4000081 C-5.3697355E-08,3.912511 0.51212323,2.6406356 1.5363699,1.5843812 2.5606164,0.52812719 3.7939503,0 5.2363719,0 z</Geometry>
	<Geometry x:Key="WD.InkGeometry" po:Freeze="True">M986.466 37.502c-49.982-49.982-131.004-49.982-180.986 0l-483.984 484.144c43.262 11.264 83.262 32.99 115.74 65.502 32.99 32.99 54.014 73.246 65.246 115.484l483.984-484.144c50.014-49.982 50.014-131.002 0-180.986zM346.742 858.63c49.982-49.982 49.982-131.004 0-180.986s-131.004-49.982-180.986 0l-165.756 346.356 346.742-165.37z</Geometry>
	<Geometry x:Key="WD.StarSkyGeometry" po:Freeze="True">M16.001007,0L20.944,10.533997 32,12.223022 23.998993,20.421997 25.889008,32 16.001007,26.533997 6.1109924,32 8,20.421997 0,12.223022 11.057007,10.533997z</Geometry>
	<Geometry x:Key="WD.ReturnGeometry" po:Freeze="True">M356.667 155q17.333 0 30 12.5t12.667 30.167-12.667 30.333l-198.667 198.667h409.333q78 0 149.167 30.333t122.5 81.833 81.833 122.5 30.5 149.333v42.667q0 17.667-12.5 30.167t-30.167 12.5q-17.333 0-30-12.667t-12.667-30v-42.667q0-60.667-23.667-116t-63.667-95.333-95.333-63.667-116-23.667h-409.333l198.667 199q12.667 12.667 12.667 30 0 17.667-12.5 30.333t-30.167 12.667-30.333-12.667l-271.333-271.667q-12.333-12.333-12.333-30.333 0-17.667 12.333-30l271.333-271.667q12.667-12.667 30.333-12.667z</Geometry>
	<Geometry x:Key="WD.HomeGeometry" po:Freeze="True">M804.571 566.857v274.286q0 14.857-10.857 25.714t-25.714 10.857h-219.429v-219.429h-146.286v219.429h-219.429q-14.857 0-25.714-10.857t-10.857-25.714v-274.286q0-0.571 0.286-1.714t0.286-1.714l328.571-270.857 328.571 270.857q0.571 1.143 0.571 3.429zM932 527.429l-35.429 42.286q-4.571 5.143-12 6.286h-1.714q-7.429 0-12-4l-395.429-329.714-395.429 329.714q-6.857 4.571-13.714 4-7.429-1.143-12-6.286l-35.429-42.286q-4.571-5.714-4-13.429t6.286-12.286l410.857-342.286q18.286-14.857 43.429-14.857t43.429 14.857l139.429 116.571v-111.429q0-8 5.143-13.143t13.143-5.143h109.714q8 0 13.143 5.143t5.143 13.143v233.143l125.143 104q5.714 4.571 6.286 12.286t-4 13.429z</Geometry>
	<Geometry x:Key="WD.ChevronUpGeometry" po:Freeze="True">M336.998 621.619c-13.875 13.722-36.301 13.722-50.074 0s-13.926-35.891 0-49.613l200.090-196.096c13.824-13.722 36.198-13.722 50.125 0l200.090 196.096c13.824 13.67 13.824 35.891 0 49.613-13.875 13.722-36.301 13.722-50.125 0l-175.104-160.819-175.002 160.819z</Geometry>
	<Geometry x:Key="WD.UnfoldMoreGeometry" po:Freeze="True">M512 776l136-136 60 60-196 196-196-196 60-60zM512 248l-136 136-60-60 196-196 196 196-60 60z</Geometry>
	<Geometry x:Key="WD.TimeGeometry" po:Freeze="True">M512 112c-229.792 0-416 186.24-416 416s186.208 416 416 416c229.728 0 416-186.24 416-416s-186.24-416-416-416zM508.64 864.864c-185.568 0-336-150.432-336-336s150.432-336 336-336c185.536 0 336 150.432 336 336 0 185.568-150.464 336-336 336zM605.76 548.192h-95.36v-161.024c0-17.472-14.176-31.68-31.648-31.68-17.504 0-31.68 14.176-31.68 31.68v192.672c0 17.504 14.176 31.648 31.68 31.648h127.008c17.504 0 31.68-14.144 31.68-31.648 0-17.472-14.176-31.648-31.68-31.648z</Geometry>
	<Geometry x:Key="WD.DateRangeRightGeometry" po:Freeze="True">M873.1 596.2l-164-208A32 32 0 00684 376h-64.8c-6.7 0-10.4 7.7-6.3 13l144.3 183H152c-4.4 0-8 3.6-8 8v60c0 4.4 3.6 8 8 8h695.9c26.8 0 41.7-30.8 25.2-51.8z</Geometry>
	<Geometry x:Key="WD.DateGeometry" po:Freeze="True">M13 2h-1v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H6v1.5c0 .28-.22.5-.5.5h-2c-.28 0-.5-.22-.5-.5V2H2c-.55 0-1 .45-1 1v11c0 .55.45 1 1 1h11c.55 0 1-.45 1-1V3c0-.55-.45-1-1-1zm0 12H2V5h11v9zM5 3H4V1h1v2zm6 0h-1V1h1v2zM6 7H5V6h1v1zm2 0H7V6h1v1zm2 0H9V6h1v1zm2 0h-1V6h1v1zM4 9H3V8h1v1zm2 0H5V8h1v1zm2 0H7V8h1v1zm2 0H9V8h1v1zm2 0h-1V8h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1zm2 0h-1v-1h1v1zm-8 2H3v-1h1v1zm2 0H5v-1h1v1zm2 0H7v-1h1v1zm2 0H9v-1h1v1z</Geometry>
	<CubicEase x:Key="WD.CubicEaseInOut" EasingMode="EaseInOut" />
	<PowerEase x:Key="WD.PowerEaseInOut" EasingMode="EaseInOut" />
	<ExponentialEase x:Key="WD.ExponentialEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="WD.SineEaseOut" EasingMode="EaseOut" />
	<SineEase x:Key="WD.SineEaseInOut" EasingMode="EaseInOut" />
	<BackEase x:Key="WD.BackEaseEaseInOut" EasingMode="EaseInOut" />
	<sys:Double x:Key="WD.EnabledOpacity">0.7</sys:Double>
	<sys:Double x:Key="WD.DefaultCornerRadius">4</sys:Double>
	<sys:Double x:Key="WD.DefaultHeight">32</sys:Double>
	<sys:Double x:Key="WD.ThumbWidth">16</sys:Double>
	<sys:Double x:Key="WD.ThumbCornerRadius">8</sys:Double>
	<sys:Double x:Key="WD.RepeatButtonSize">6</sys:Double>
	<Thickness x:Key="WD.DefaultPadding">6</Thickness>
	<BooleanToVisibilityConverter x:Key="WD.Bool2VisibilityConverter" />
	<converts:CornerRadiusToSurroundConverter x:Key="WD.CornerRadiusToSurroundConverter" />
	<converts:WidthHeightToRectConverter x:Key="WD.WidthHeightToRectConverter" />
	<Thickness x:Key="WD.TabItemBorderThickness">0,0,0,2</Thickness>
	<Style TargetType="ToolTip">
		<Setter Property="Visibility" Value="Visible" />
		<Style.Triggers>
			<DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
				<Setter Property="Visibility" Value="Collapsed" />
			</DataTrigger>
			<DataTrigger Binding="{Binding Content, RelativeSource={RelativeSource Self}}" Value="">
				<Setter Property="Visibility" Value="Collapsed" />
			</DataTrigger>
		</Style.Triggers>
	</Style>
	<converts:WidthHeightEqualValueConverter x:Key="WD.WidthHeightEqualValueConverter" />
	<converts:HalfValueConverter x:Key="WD.HalfValueConverter" />
	<converts:ObjectNullToVisibilityConverter x:Key="ObjectNullToVisibilityConverter" />
	<ControlTemplate x:Key="WD.ComboBoxTextBox" TargetType="{x:Type TextBox}">
		<Border Background="{TemplateBinding Background}" Focusable="False">
			<ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
		</Border>
	</ControlTemplate>
	<converts:DatePickerToCurrentConverter x:Key="WD.DatePickerToCurrentConverter" />
	<converts:DoubleMinConverter x:Key="WD.DoubleMinConverter" />
	<ec:IsArrangedToScaleConverter x:Key="IsArrangedToScaleConverter" />
	<ControlTemplate x:Key="ValidationToolTipTemplate">
		<Grid Name="Root" Margin="5,0" Opacity="0" RenderTransformOrigin="0,0">
			<UIElement.RenderTransform>
				<TranslateTransform x:Name="xform" X="-25" />
			</UIElement.RenderTransform>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="OpenStates">
					<VisualStateGroup.Transitions>
						<VisualTransition GeneratedDuration="0" />
						<VisualTransition GeneratedDuration="0:0:0.2" To="Open">
							<Storyboard>
								<DoubleAnimation Duration="0:0:0.2" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform">
									<DoubleAnimation.EasingFunction>
										<BackEase Amplitude=".3" EasingMode="EaseOut" />
									</DoubleAnimation.EasingFunction>
								</DoubleAnimation>
								<DoubleAnimation Duration="0:0:0.2" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
							</Storyboard>
						</VisualTransition>
					</VisualStateGroup.Transitions>
					<VisualState x:Name="Closed">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Open">
						<Storyboard>
							<DoubleAnimation Duration="0" To="0" Storyboard.TargetProperty="X" Storyboard.TargetName="xform" />
							<DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="Root" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
			<Border Background="#052A2E31" CornerRadius="5" Margin="4,4,-4,-4" />
			<Border Background="#152A2E31" CornerRadius="4" Margin="3,3,-3,-3" />
			<Border Background="#252A2E31" CornerRadius="3" Margin="2,2,-2,-2" />
			<Border Background="#352A2E31" CornerRadius="2" Margin="1,1,-1,-1" />
			<Border Background="#FFDC000C" CornerRadius="2" />
			<Border CornerRadius="2">
				<TextBlock Foreground="#FFFFFFFF" MaxWidth="250" Margin="8,4,8,4" TextWrapping="Wrap" UseLayoutRounding="False" Text="{Binding (Validation.Errors)[0].ErrorContent}" />
			</Border>
		</Grid>
	</ControlTemplate>
	<Style TargetType="{x:Type ec:PathListBoxItem}" x:Key="{x:Type ec:PathListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Background" Value="#00FFFFFF" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ec:PathListBoxItem}">
					<Grid Background="{TemplateBinding Background}" RenderTransformOrigin="0.5,0.5">
						<UIElement.RenderTransform>
							<TransformGroup>
								<ScaleTransform ScaleX="{Binding IsArranged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IsArrangedToScaleConverter}}" ScaleY="{Binding IsArranged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource IsArrangedToScaleConverter}}" />
								<SkewTransform />
								<RotateTransform Angle="{Binding OrientationAngle, RelativeSource={RelativeSource TemplatedParent}}" />
								<TranslateTransform />
							</TransformGroup>
						</UIElement.RenderTransform>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".35" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".55" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="contentPresenter" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected">
									<Storyboard>
										<DoubleAnimation Duration="0" To=".75" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="fillColor2" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Duration="0" Storyboard.TargetProperty="Visibility" Storyboard.TargetName="FocusVisualElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Rectangle Name="fillColor" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" />
						<Rectangle Name="fillColor2" Fill="#FFBADDE9" IsHitTestVisible="False" Opacity="0" RadiusY="1" RadiusX="1" />
						<ContentPresenter Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" />
						<Rectangle Name="FocusVisualElement" RadiusY="1" RadiusX="1" Stroke="#FF6DBDD1" StrokeThickness="1" Visibility="Collapsed" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type drawingControls:Callout}" x:Key="{x:Type drawingControls:Callout}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type drawingControls:Callout}">
					<Grid>
						<Path Name="PART_Path" Fill="{TemplateBinding Fill}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" StrokeDashCap="{TemplateBinding StrokeDashCap}" StrokeDashOffset="{TemplateBinding StrokeDashOffset}" StrokeLineJoin="{TemplateBinding StrokeLineJoin}" StrokeMiterLimit="{TemplateBinding StrokeMiterLimit}" StrokeStartLineCap="{TemplateBinding StrokeStartLineCap}" StrokeEndLineCap="{TemplateBinding StrokeEndLineCap}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" />
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding InternalContent}" Margin="{TemplateBinding Padding}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type drawingControls:LineArrow}" x:Key="{x:Type drawingControls:LineArrow}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type drawingControls:LineArrow}">
					<Path Name="PART_Path" Fill="{TemplateBinding Stroke}" Stroke="{TemplateBinding Stroke}" StrokeThickness="{TemplateBinding StrokeThickness}" StrokeDashArray="{TemplateBinding StrokeDashArray}" StrokeDashCap="{TemplateBinding StrokeDashCap}" StrokeDashOffset="{TemplateBinding StrokeDashOffset}" StrokeLineJoin="{TemplateBinding StrokeLineJoin}" StrokeMiterLimit="{TemplateBinding StrokeMiterLimit}" StrokeStartLineCap="{TemplateBinding StrokeStartLineCap}" StrokeEndLineCap="{TemplateBinding StrokeEndLineCap}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill" UseLayoutRounding="False" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="WD.LampEffectStreamer" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampContainer" Background="Transparent" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
						<Border.BorderBrush>
							<LinearGradientBrush>
								<LinearGradientBrush.GradientStops>
									<GradientStop Offset="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GradientStopColor1}" />
									<GradientStop Offset="0.3" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=GradientStopColor2}" />
									<GradientStop Offset="1" Color="Transparent" />
								</LinearGradientBrush.GradientStops>
							</LinearGradientBrush>
						</Border.BorderBrush>
					</Border>
				</controls:SmallPanel>
			</Viewbox>
			<Border Padding="{TemplateBinding BorderThickness}">
				<ContentPresenter Margin="{TemplateBinding BorderThickness}" />
			</Border>
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard x:Name="PART_LampStoryboard">
						<Storyboard RepeatBehavior="Forever">
							<PointAnimationUsingKeyFrames Storyboard.TargetName="PART_LampContainer" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.StartPoint)">
								<EasingPointKeyFrame KeyTime="0:0:0.0" Value="0,1" />
								<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.855,0.148" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.852,0.855" />
								<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.148,0.855" />
								<EasingPointKeyFrame KeyTime="0:0:2" Value="0.144,0.149" />
								<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,0" />
							</PointAnimationUsingKeyFrames>
							<PointAnimationUsingKeyFrames Storyboard.TargetName="PART_LampContainer" Storyboard.TargetProperty="(Border.BorderBrush).(LinearGradientBrush.EndPoint)">
								<EasingPointKeyFrame KeyTime="0:0:0.0" Value="0,1" />
								<EasingPointKeyFrame KeyTime="0:0:0.5" Value="0.145,0.852" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.148,0.145" />
								<EasingPointKeyFrame KeyTime="0:0:1.5" Value="0.852,0.145" />
								<EasingPointKeyFrame KeyTime="0:0:2" Value="0.856,0.851" />
								<EasingPointKeyFrame KeyTime="0:0:2.5" Value="0,1" />
							</PointAnimationUsingKeyFrames>
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<StopStoryboard BeginStoryboardName="PART_LampStoryboard" />
				</Trigger.ExitActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<converts:IndexToColor x:Key="WD.IndexToColor" />
	<converts:AngleToPointConverter x:Key="WD.PrConverter" />
	<converts:AngleToIsLargeConverter x:Key="WD.IsLargeConverter" />
	<converts:StepIndexConverter x:Key="WD.StepIndexConverter" />
	<converts:OrientationConverter x:Key="WD.OrientationConverter" />
	<converts:BreadCrumbBarConvertr x:Key="WD.BreadCrumbBarConvertr" />
	<Style x:Key="WD.MessageListBox" TargetType="{x:Type controls:MessageListBox}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
	</Style>
	<converts:ColorToBrushConverter x:Key="WD.ColorToBrushConverter" />
	<converts:ColorToRedConverter x:Key="WD.ColorToRedConverter" />
	<converts:ColorToGreenConverter x:Key="WD.ColorToGreenConverter" />
	<converts:ColorToBlueConverter x:Key="WD.ColorToBlueConverter" />
	<converts:ColorTypeToVisibilityConverter x:Key="WD.ColorTypeToVisibilityConverter" />
	<converts:ColorToStringConverter x:Key="WD.ColorToStringConverter" />
	<converts:HToColorConverter x:Key="WD.HToColorConverter" />
	<converts:SToColorConverter x:Key="WD.SToColorConverter" />
	<converts:LToColorConverter x:Key="WD.LToColorConverter" />
	<LinearGradientBrush x:Key="WD.ColorPickerRainbowBrush" po:Freeze="True">
		<GradientStop Color="#FF0000" />
		<GradientStop Offset="0.167" Color="#FF00FF" />
		<GradientStop Offset="0.334" Color="#0000FF" />
		<GradientStop Offset="0.501" Color="#00FFFF" />
		<GradientStop Offset="0.668" Color="#00FF00" />
		<GradientStop Offset="0.835" Color="#FFFF00" />
		<GradientStop Offset="1" Color="#FF0000" />
	</LinearGradientBrush>
	<ControlTemplate x:Key="WD.ColorPickerSliderThumbTemplate" TargetType="Thumb">
		<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="Transparent" BorderBrush="White" BorderThickness="3" CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource WD.HalfValueConverter}}" />
	</ControlTemplate>
	<Style x:Key="WD.ColorPickerSliderRepeatButtonBaseStyle" TargetType="RepeatButton">
		<Setter Property="OverridesDefaultStyle" Value="true" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="false" />
		<Setter Property="IsTabStop" Value="false" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="RepeatButton">
					<Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush x:Key="WD.SecondaryTextSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.PrimaryTextColor}" />
	<SolidColorBrush x:Key="WD.PlaceholderTextSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.PlaceholderTextColor}" />
	<SolidColorBrush x:Key="WD.NormalSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.NormalColor}" />
	<SolidColorBrush x:Key="WD.SuccessBorderBrushSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.SuccessBorderBrushColor}" />
	<SolidColorBrush x:Key="WD.SuccessBackgroundSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.SuccessBackgroundColor}" />
	<SolidColorBrush x:Key="WD.SuccessSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.SuccessColor}" />
	<SolidColorBrush x:Key="WD.SuccessMouseOverSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.SuccessMouseOverColor}" />
	<SolidColorBrush x:Key="WD.SuccessPressedSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.SuccessPressedColor}" />
	<SolidColorBrush x:Key="WD.WarningBorderBrushSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.WarningBorderBrushColor}" />
	<SolidColorBrush x:Key="WD.WarningBackgroundSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.WarningBackgroundColor}" />
	<SolidColorBrush x:Key="WD.WarningSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.WarningColor}" />
	<SolidColorBrush x:Key="WD.WarningMouseOverSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.WarningMouseOverColor}" />
	<SolidColorBrush x:Key="WD.WarningPressedSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.WarningPressedColor}" />
	<SolidColorBrush x:Key="WD.DangerBorderBrushSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.DangerBorderBrushColor}" />
	<SolidColorBrush x:Key="WD.DangerBackgroundSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.DangerBackgroundColor}" />
	<SolidColorBrush x:Key="WD.DangerSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.DangerColor}" />
	<SolidColorBrush x:Key="WD.DangerMouseOverSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.DangerMouseOverColor}" />
	<SolidColorBrush x:Key="WD.DangerPressedSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.DangerPressedColor}" />
	<SolidColorBrush x:Key="WD.InfoSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.InfoColor}" />
	<SolidColorBrush x:Key="WD.InfoMouseOverSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.InfoMouseOverColor}" />
	<SolidColorBrush x:Key="WD.InfoPressedSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.InfoPressedColor}" />
	<SolidColorBrush x:Key="WD.ExtralightSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.ExtralightColor}" />
	<SolidColorBrush x:Key="WD.BlackSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.BlackColor}" />
	<SolidColorBrush x:Key="WD.CircularSingularSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.CircularSingularColor}" />
	<SolidColorBrush x:Key="WD.CircularDualSolidColorBrush" po:Freeze="True" Color="{StaticResource WD.CircularDualColor}" />
	<Style x:Key="WD.ControlBasicStyle" TargetType="Control">
		<Setter Property="FontSize" Value="{StaticResource WD.NormalFontSize}" />
		<Setter Property="FontFamily" Value="{StaticResource WD.NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{StaticResource WD.NormalFontStyle}" />
		<Setter Property="FontWeight" Value="{StaticResource WD.NormalFontWeight}" />
		<Setter Property="FontStretch" Value="{StaticResource WD.NormalFontStretch}" />
		<Setter Property="TextElement.FontSize" Value="{StaticResource WD.NormalFontSize}" />
		<Setter Property="TextElement.FontFamily" Value="{StaticResource WD.NormalFontFamily}" />
		<Setter Property="TextElement.FontStyle" Value="{StaticResource WD.NormalFontStyle}" />
		<Setter Property="TextElement.FontWeight" Value="{StaticResource WD.NormalFontWeight}" />
		<Setter Property="TextElement.FontStretch" Value="{StaticResource WD.NormalFontStretch}" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="TextBlock.FontSize" Value="{StaticResource WD.NormalFontSize}" />
		<Setter Property="TextBlock.FontFamily" Value="{StaticResource WD.NormalFontFamily}" />
		<Setter Property="TextBlock.FontStyle" Value="{StaticResource WD.NormalFontStyle}" />
		<Setter Property="TextBlock.FontWeight" Value="{StaticResource WD.NormalFontWeight}" />
		<Setter Property="TextBlock.FontStretch" Value="{StaticResource WD.NormalFontStretch}" />
		<Setter Property="TextBlock.Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Style.Triggers>
			<Trigger Property="IsEnabled" Value="False">
				<Setter Property="Opacity" Value="{StaticResource WD.EnabledOpacity}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<DropShadowEffect x:Key="WD.NormalShadowDepth" BlurRadius="5" Direction="270" Opacity=".42" RenderingBias="Performance" ShadowDepth="1" Color="{StaticResource WD.ShadowDepthColor}" />
	<DropShadowEffect x:Key="WD.PopupShadowDepth" BlurRadius="12" Opacity="0.1" ShadowDepth="2" Color="{StaticResource WD.BlackColor}" />
	<Style x:Key="WD.BaseButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ButtonBase}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<!--<Setter Property="helpers:ElementHelper.CornerRadius" Value="3" />-->
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
	</Style>
	<Style x:Key="WD.NormalButton" BasedOn="{StaticResource WD.BaseButton}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel>
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Opacity=".4" SnapsToDevicePixels="True" />
						<ContentPresenter Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="UIElement.IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.ButtonFocusVisualColor}" />
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsRound" Value="True">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource WD.HalfValueConverter}}" />
							<Setter TargetName="PART_Border" Property="Width">
								<Setter.Value>
									<MultiBinding Converter="{StaticResource WD.WidthHeightEqualValueConverter}">
										<Binding ElementName="PART_Border" Path="ActualWidth" />
										<Binding ElementName="PART_Border" Path="ActualHeight" />
									</MultiBinding>
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Border" Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.PrimaryButton" BasedOn="{StaticResource WD.BaseButton}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel>
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryPressedSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryPressedSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsRound" Value="True">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource WD.HalfValueConverter}}" />
							<Setter TargetName="PART_Border" Property="Width">
								<Setter.Value>
									<MultiBinding Converter="{StaticResource WD.WidthHeightEqualValueConverter}">
										<Binding ElementName="PART_Border" Path="ActualWidth" />
										<Binding ElementName="PART_Border" Path="ActualHeight" />
									</MultiBinding>
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Border" Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultButton" BasedOn="{StaticResource WD.BaseButton}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel>
						<Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBackgroundPressedSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.DefaultBackgroundPressedSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsRound" Value="True">
							<Setter Property="Padding" Value="0" />
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource WD.HalfValueConverter}}" />
							<Setter TargetName="PART_Border" Property="Width">
								<Setter.Value>
									<MultiBinding Converter="{StaticResource WD.WidthHeightEqualValueConverter}">
										<Binding ElementName="PART_Border" Path="ActualWidth" />
										<Binding ElementName="PART_Border" Path="ActualHeight" />
									</MultiBinding>
								</Setter.Value>
							</Setter>
							<Setter TargetName="PART_Border" Property="Height" Value="{Binding Width, RelativeSource={RelativeSource Self}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.SuccessPrimaryButton" BasedOn="{StaticResource WD.PrimaryButton}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.SuccessMouseOverSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.SuccessDefaultButton" BasedOn="{StaticResource WD.DefaultButton}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.SuccessPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.SuccessBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.SuccessBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.SuccessSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.WarningPrimaryButton" BasedOn="{StaticResource WD.PrimaryButton}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.WarningSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.WarningMouseOverSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.WarningDefaultButton" BasedOn="{StaticResource WD.DefaultButton}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.WarningBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.WarningSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.WarningPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.WarningBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.WarningBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.WarningSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.DangerPrimaryButton" BasedOn="{StaticResource WD.PrimaryButton}" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.DangerSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.DangerMouseOverSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.DangerDefaultButton" BasedOn="{StaticResource WD.DefaultButton}" TargetType="{x:Type Button}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Style.Triggers>
			<Trigger Property="IsFocused" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.DangerBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.DangerSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsPressed" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.DangerPressedSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.DangerBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.DangerBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.DangerSolidColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.PathButton" BasedOn="{StaticResource WD.BaseButton}" TargetType="{x:Type Button}">
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="Transparent">
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity=".8" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.WindowButtonStyle" TargetType="{x:Type Button}">
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="MinWidth" Value="30" />
		<Setter Property="MinHeight" Value="28" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<controls:SmallPanel Background="Transparent">
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" Opacity="0.7" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Pressed">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Disabled">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ContentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.3" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Focused" />
								<VisualState x:Name="Unfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultButton}" TargetType="{x:Type Button}" />
	<Style x:Key="WPFDevelopersWindow" BasedOn="{x:Null}" TargetType="{x:Type wd:Window}">
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
		<Setter Property="TitleBackground" Value="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="MaxHeight" Value="{x:Static SystemParameters.MaximizedPrimaryScreenHeight}" />
		<Setter Property="MaxWidth" Value="{x:Static SystemParameters.MaximizedPrimaryScreenWidth}" />
		<Setter Property="FontFamily" Value="{DynamicResource WD.NormalFontFamily}" />
		<Setter Property="WindowChrome.WindowChrome">
			<Setter.Value>
				<WindowChrome CaptionHeight="{Binding TitleHeight, RelativeSource={RelativeSource AncestorType=wd:Window}}" GlassFrameThickness="0,0,0,.1" UseAeroCaptionButtons="False" />
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type wd:Window}">
					<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<Grid x:Name="LayoutRoot">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<controls:SmallPanel Grid.Row="0" Background="{TemplateBinding TitleBackground}">
								<Grid x:Name="PART_GridChrome" Height="{TemplateBinding TitleHeight}">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="*" />
										<ColumnDefinition Width="Auto" MinWidth="30" />
									</Grid.ColumnDefinitions>
									<Image Width="30" Height="30" Margin="14,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RenderOptions.BitmapScalingMode="HighQuality" Source="{TemplateBinding Icon}" Stretch="Fill" Visibility="{TemplateBinding Icon,&#xD;&#xA;                                                                     Converter={StaticResource ObjectNullToVisibilityConverter}}" />
									<TextBlock x:Name="PART_Title" Grid.Column="1" Margin="6,0" VerticalAlignment="Center" FontSize="{DynamicResource WD.TitleFontSize}" Foreground="{DynamicResource WD.WindowForegroundColorBrush}" Text="{TemplateBinding Title}" />
									<WrapPanel Grid.Column="2" Margin="0,6" WindowChrome.IsHitTestVisibleInChrome="True">
										<WrapPanel x:Name="PART_MinAndMax">
											<Button Name="PART_MinimizeButton" Padding="0" Command="SystemCommands.MinimizeWindowCommand" IsTabStop="False" Style="{DynamicResource WD.WindowButtonStyle}" ToolTip="{Binding [Minimize], Source={x:Static resx:LanguageManager.Instance}}">
												<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
													<Rectangle x:Name="MinimizeGlyph" Width="10" Height="1" Margin="0,7,0,0" VerticalAlignment="Bottom" Fill="{DynamicResource WD.WindowForegroundColorBrush}" />
												</Grid>
											</Button>
											<Button Name="PART_MaximizeButton" Padding="0" Command="SystemCommands.MaximizeWindowCommand" IsTabStop="False" Style="{DynamicResource WD.WindowButtonStyle}" ToolTip="{Binding [Maximize], Source={x:Static resx:LanguageManager.Instance}}">
												<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
													<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource WD.WindowMaximizeGeometry}" Fill="{DynamicResource WD.WindowForegroundColorBrush}" Stretch="Uniform" UseLayoutRounding="False" />
												</Grid>
											</Button>
											<Button Name="PART_RestoreButton" Padding="0" Command="SystemCommands.RestoreWindowCommand" IsTabStop="False" Style="{DynamicResource WD.WindowButtonStyle}" ToolTip="{Binding [Restore], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed">
												<Grid HorizontalAlignment="Center" VerticalAlignment="Center">
													<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource WD.WindowRestoreGeometry}" Fill="{DynamicResource WD.WindowForegroundColorBrush}" Stretch="Uniform" UseLayoutRounding="False" />
												</Grid>
											</Button>
										</WrapPanel>
										<Button Name="PART_CloseButton" Command="SystemCommands.CloseWindowCommand" IsTabStop="False" Style="{DynamicResource WD.WindowButtonStyle}" ToolTip="{Binding [Close], Source={x:Static resx:LanguageManager.Instance}}">
											<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{DynamicResource WD.WindowCloseGeometry}" Fill="{DynamicResource WD.WindowForegroundColorBrush}" Stretch="Uniform" />
										</Button>
									</WrapPanel>
								</Grid>
								<ContentPresenter x:Name="PART_TitleToolBar" Content="{Binding TitleBar, RelativeSource={RelativeSource TemplatedParent}, Mode=OneWay}" Focusable="False" Visibility="Collapsed" WindowChrome.IsHitTestVisibleInChrome="True" />
							</controls:SmallPanel>
							<AdornerDecorator Grid.Row="1" KeyboardNavigation.IsTabStop="False">
								<ContentPresenter x:Name="MainContentPresenter" ClipToBounds="True" />
							</AdornerDecorator>
							<ResizeGrip x:Name="ResizeGrip" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" IsTabStop="False" Visibility="Collapsed" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="WindowState" Value="Maximized">
							<Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_Border" Property="Margin" Value="7" />
						</Trigger>
						<Trigger Property="WindowStyle" Value="ToolWindow">
							<Setter TargetName="PART_MinAndMax" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="NoChrome" Value="True">
							<Setter TargetName="PART_GridChrome" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_TitleToolBar" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="ResizeMode" Value="CanResizeWithGrip" />
								<Condition Property="WindowState" Value="Normal" />
							</MultiTrigger.Conditions>
							<Setter TargetName="ResizeGrip" Property="Visibility" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultMenu" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Menu}">
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.SeparatorStyleKey" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Separator}">
		<Setter Property="Height" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Margin" Value="0,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="WD.TopLevelHeaderTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" SnapsToDevicePixels="True">
			<controls:SmallPanel Background="Transparent">
				<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
				<Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" IsOpen="{TemplateBinding IsSubmenuOpen}" Placement="Bottom" PlacementTarget="{Binding ElementName=Border}">
					<Grid Margin="10,0,10,10">
						<Border x:Name="SubmenuBorder" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="1" CornerRadius="0,0,3,3" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True">
							<ScrollViewer Margin="0,4" CanContentScroll="True">
								<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
							</ScrollViewer>
						</Border>
						<Border Width="{Binding ElementName=Border, Path=ActualWidth}" Height="1.2" HorizontalAlignment="Left" VerticalAlignment="Top" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderThickness="1,0,0,0" />
					</Grid>
				</Popup>
			</controls:SmallPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="True">
				<Setter TargetName="Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsSubmenuOpen" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.TopLevelItemTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<controls:SmallPanel Background="Transparent">
				<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
			</controls:SmallPanel>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.SubmenuItemTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="4" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="30" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="1" VerticalAlignment="Center" ContentSource="Icon" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Path x:Name="CheckMark" Width="12" Height="10" Data="{StaticResource WD.CheckMarkGeometry}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Stretch="Uniform" Visibility="Hidden" />
				<ContentPresenter x:Name="HeaderHost" Grid.Column="2" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText" Grid.Column="4" Margin="5,2,0,2" DockPanel.Dock="Right" Text="{TemplateBinding InputGestureText}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="ButtonBase.Command" Value="{x:Null}" />
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.SubmenuHeaderTemplateKey" TargetType="{x:Type MenuItem}">
		<Border x:Name="Border" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" MinWidth="24" SharedSizeGroup="Icon" />
					<ColumnDefinition Width="4" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon" Margin="3,0,0,0" VerticalAlignment="Center" ContentSource="Icon" />
				<Path x:Name="CheckMark" Width="12" Height="10" Margin="3,0,0,0" Data="{StaticResource WD.CheckMarkGeometry}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Stretch="Uniform" Visibility="Hidden" />
				<ContentPresenter x:Name="HeaderHost" Grid.Column="2" Margin="{TemplateBinding Padding}" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText" Grid.Column="3" Margin="5,2,2,2" DockPanel.Dock="Right" Text="{TemplateBinding InputGestureText}" />
				<Path x:Name="PART_Path" Grid.Column="4" Width="10" Height="12" VerticalAlignment="Center" Data="{StaticResource WD.ChevronRightGeometry}" Fill="{TemplateBinding Foreground}" FlowDirection="LeftToRight" Stretch="Uniform" />
				<Popup x:Name="Popup" AllowsTransparency="True" Focusable="False" HorizontalOffset="2" IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" PopupAnimation="Fade" VerticalOffset="-4">
					<Border x:Name="SubmenuBorder" Margin="10,0,10,10" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="1" CornerRadius="0,0,3,3" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True">
						<ScrollViewer Margin="0,4" CanContentScroll="True">
							<VirtualizingStackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
						</ScrollViewer>
					</Border>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="WD.DefaultMenuItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type MenuItem}">
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="MinWidth" Value="44" />
				<Setter Property="Template" Value="{StaticResource WD.TopLevelHeaderTemplateKey}" />
				<Setter Property="Grid.IsSharedSizeScope" Value="True" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource WD.TopLevelItemTemplateKey}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="MinWidth" Value="240" />
				<Setter Property="Template" Value="{StaticResource WD.SubmenuHeaderTemplateKey}" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuItem">
				<Setter Property="MinWidth" Value="240" />
				<Setter Property="Template" Value="{StaticResource WD.SubmenuItemTemplateKey}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.SeparatorStyleKey}" TargetType="{x:Type Separator}" />
	<Style BasedOn="{StaticResource WD.DefaultMenuItem}" TargetType="{x:Type MenuItem}" />
	<Style BasedOn="{StaticResource WD.DefaultMenu}" TargetType="{x:Type Menu}" />
	<Style x:Key="WD.DefaultContextMenu" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ContextMenu}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Margin" Value="10" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ContextMenu">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}">
						<ScrollViewer Padding="0,6">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultContextMenu}" TargetType="{x:Type ContextMenu}" />
	<Style x:Key="WD.DefaultRadioButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<BulletDecorator Margin="{TemplateBinding Margin}" Background="Transparent">
						<BulletDecorator.Bullet>
							<Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
								<controls:SmallPanel MinWidth="16" MinHeight="16">
									<Ellipse x:Name="PART_Border" Fill="{TemplateBinding Background}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" />
									<Ellipse x:Name="PART_Ellipse" MinWidth="6" MinHeight="6" Fill="{DynamicResource WD.WindowForegroundColorBrush}" RenderTransformOrigin=".5,.5">
										<Ellipse.RenderTransform>
											<ScaleTransform ScaleX="0" ScaleY="0" />
										</Ellipse.RenderTransform>
									</Ellipse>
								</controls:SmallPanel>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleX)" To=".4" Duration="00:00:.3" />
										<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(ScaleTransform.ScaleY)" To=".4" Duration="00:00:.3" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="PART_Border" Property="Fill" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_Border" Property="Stroke" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Stroke" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.PathRadioButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border Background="Transparent">
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity=".8" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_ContentPresenter" Property="Opacity" Value="1" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ColorRadioButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="8" />
		<Setter Property="Width" Value="15" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="7">
						<Ellipse x:Name="PART_Ellipse" Width="7" Height="7" Fill="{DynamicResource WD.BackgroundSolidColorBrush}" Visibility="Collapsed" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.Visibility)">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Opacity" Value=".8" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultRadioButton}" TargetType="{x:Type RadioButton}" />
	<Style x:Key="WD.RepeatButtonTransparent" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type RepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<Rectangle Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ScrollBarThumbVertical" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource WD.InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ScrollBarThumbHorizontal" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border x:Name="PART_Thumbborder">
						<Rectangle x:Name="PART_Rectangle" Height="{TemplateBinding Height}" Fill="{DynamicResource WD.InfoPressedSolidColorBrush}" RadiusX="1" RadiusY="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultScrollBar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ScrollBar}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width" To="2" Duration="00:00:0.1" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width" To="10" Duration="00:00:0.1" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="12" />
		<Setter Property="MinWidth" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<controls:SmallPanel x:Name="Bg" Width="{TemplateBinding Width}" Background="Transparent" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Width="2" Margin="0,0,1,0" HorizontalAlignment="Right" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource WD.ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="12" />
				<Setter Property="MinHeight" Value="8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height" To="2" Duration="00:00:0.1" />
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height" To="10" Duration="00:00:0.1" />
								</Storyboard>
							</ControlTemplate.Resources>
							<controls:SmallPanel Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Height="2" Margin="0,0,0,1" VerticalAlignment="Bottom" IsEnabled="{TemplateBinding IsMouseOver}" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource WD.ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</controls:SmallPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.ScrollBarHideStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ScrollBar}">
		<Style.Resources>
			<Storyboard x:Key="ScrollMouseOut">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width" To="2" Duration="00:00:0.1" />
			</Storyboard>
			<Storyboard x:Key="ScrollMouseOver">
				<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Width" To="10" Duration="00:00:0.1" />
			</Storyboard>
		</Style.Resources>
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Width" Value="12" />
		<Setter Property="MinWidth" Value="8" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollBar}">
					<controls:SmallPanel Width="{TemplateBinding Width}" Background="Transparent" SnapsToDevicePixels="True">
						<Track x:Name="PART_Track" Width="2" Margin="0,0,1,0" HorizontalAlignment="Right" IsDirectionReversed="True" IsEnabled="{TemplateBinding IsMouseOver}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb Style="{StaticResource WD.ScrollBarThumbVertical}" />
							</Track.Thumb>
						</Track>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOut}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard Storyboard="{StaticResource ScrollMouseOver}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Horizontal">
				<Setter Property="Width" Value="Auto" />
				<Setter Property="MinWidth" Value="0" />
				<Setter Property="Height" Value="12" />
				<Setter Property="MinHeight" Value="8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ScrollBar}">
							<ControlTemplate.Resources>
								<Storyboard x:Key="ScrollMouseOutHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height" To="2" Duration="00:00:0.1" />
								</Storyboard>
								<Storyboard x:Key="ScrollMouseOverHeight">
									<DoubleAnimation Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="Height" To="10" Duration="00:00:0.1" />
								</Storyboard>
							</ControlTemplate.Resources>
							<controls:SmallPanel Height="{TemplateBinding Height}" Background="Transparent" SnapsToDevicePixels="True">
								<Track x:Name="PART_Track" Height="2" Margin="0,0,0,1" VerticalAlignment="Bottom" IsEnabled="{TemplateBinding IsMouseOver}" Visibility="Hidden">
									<Track.DecreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
									</Track.DecreaseRepeatButton>
									<Track.IncreaseRepeatButton>
										<RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource WD.RepeatButtonTransparent}" />
									</Track.IncreaseRepeatButton>
									<Track.Thumb>
										<Thumb Style="{StaticResource WD.ScrollBarThumbHorizontal}" />
									</Track.Thumb>
								</Track>
							</controls:SmallPanel>
							<ControlTemplate.Triggers>
								<Trigger Property="IsMouseOver" Value="True">
									<Trigger.ExitActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOutHeight}" />
									</Trigger.ExitActions>
									<Trigger.EnterActions>
										<BeginStoryboard Storyboard="{StaticResource ScrollMouseOverHeight}" />
									</Trigger.EnterActions>
								</Trigger>
							</ControlTemplate.Triggers>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.DefaultScrollViewer" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<Grid Background="{TemplateBinding Background}">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
							<ColumnDefinition Width="Auto" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="2" Margin="{TemplateBinding Padding}" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" />
						<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="0" Grid.Column="1" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
						<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultScrollBar}" TargetType="{x:Type ScrollBar}" />
	<Style BasedOn="{StaticResource WD.DefaultScrollViewer}" TargetType="{x:Type ScrollViewer}" />
	<Style x:Key="WD.SliderThumbStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="12" />
		<Setter Property="Height" Value="12" />
		<Setter Property="Background" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1.5" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="WD.ThumbMouseOver">
							<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1.2" To="1.4" Duration="00:00:0.1" />
							<DoubleAnimation Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1.2" To="1.4" Duration="00:00:0.1" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="6" RenderTransformOrigin=".5,.5" SnapsToDevicePixels="True">
						<Border.RenderTransform>
							<ScaleTransform ScaleX="1.2" ScaleY="1.2" />
						</Border.RenderTransform>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboard" Storyboard="{StaticResource WD.ThumbMouseOver}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.SliderRepeatButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:SliderRepeatButton}">
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SliderRepeatButton}">
					<Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" />
					<ControlTemplate.Triggers>
						<Trigger Property="RadiusOrientation" Value="Right">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Right}" />
						</Trigger>
						<Trigger Property="RadiusOrientation" Value="Left">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Left}" />
						</Trigger>
						<Trigger Property="RadiusOrientation" Value="Down">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Down}" />
						</Trigger>
						<Trigger Property="RadiusOrientation" Value="Up">
							<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Up}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="WD.SliderHorizontal" TargetType="{x:Type Slider}">
		<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True" SnapsToDevicePixels="True">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}" />
					<RowDefinition Height="Auto" />
				</Grid.RowDefinitions>
				<TickBar x:Name="TopTick" Grid.Row="0" Height="4" Margin="0,0,0,2" Fill="{TemplateBinding Foreground}" Placement="Top" Visibility="Collapsed" />
				<TickBar x:Name="BottomTick" Grid.Row="2" Height="4" Margin="0,2,0,0" Fill="{TemplateBinding Foreground}" Placement="Bottom" Visibility="Collapsed" />
				<Track x:Name="PART_Track" Grid.Row="1">
					<Track.DecreaseRepeatButton>
						<controls:SliderRepeatButton Height="{StaticResource WD.RepeatButtonSize}" Margin="0,2,0,0" Background="{DynamicResource WD.PrimaryNormalSolidColorBrush}" Command="{x:Static Slider.DecreaseLarge}" RadiusOrientation="Right" Style="{DynamicResource WD.SliderRepeatButtonStyle}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<controls:SliderRepeatButton Height="{StaticResource WD.RepeatButtonSize}" Margin="0,2,0,0" Background="{DynamicResource WD.BaseSolidColorBrush}" Command="{x:Static Slider.IncreaseLarge}" RadiusOrientation="Left" Style="{StaticResource WD.SliderRepeatButtonStyle}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource WD.SliderThumbStyle}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.SliderVertical" TargetType="{x:Type Slider}">
		<Border Padding="{TemplateBinding Padding}" HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type Slider}}}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" ClipToBounds="True" SnapsToDevicePixels="True">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" MinWidth="{TemplateBinding MinWidth}" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TickBar x:Name="TopTick" Grid.Column="0" Width="4" Margin="0,0,2,0" Fill="{TemplateBinding Foreground}" Placement="Left" Visibility="Collapsed" />
				<TickBar x:Name="BottomTick" Grid.Column="2" Width="4" Margin="2,0,0,0" Fill="{TemplateBinding Foreground}" Placement="Right" Visibility="Collapsed" />
				<Track x:Name="PART_Track" Grid.Column="1">
					<Track.DecreaseRepeatButton>
						<controls:SliderRepeatButton Width="{StaticResource WD.RepeatButtonSize}" Background="{DynamicResource WD.PrimaryNormalSolidColorBrush}" Command="{x:Static Slider.DecreaseLarge}" RadiusOrientation="Up" Style="{StaticResource WD.SliderRepeatButtonStyle}" />
					</Track.DecreaseRepeatButton>
					<Track.IncreaseRepeatButton>
						<controls:SliderRepeatButton Width="{StaticResource WD.RepeatButtonSize}" Background="{DynamicResource WD.LightSolidColorBrush}" Command="{x:Static Slider.IncreaseLarge}" RadiusOrientation="Down" Style="{StaticResource WD.SliderRepeatButtonStyle}" />
					</Track.IncreaseRepeatButton>
					<Track.Thumb>
						<Thumb Style="{StaticResource WD.SliderThumbStyle}" />
					</Track.Thumb>
				</Track>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="TickPlacement" Value="TopLeft">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="BottomRight">
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
			<Trigger Property="TickPlacement" Value="Both">
				<Setter TargetName="TopTick" Property="Visibility" Value="Visible" />
				<Setter TargetName="BottomTick" Property="Visibility" Value="Visible" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="WD.DefaultSlider" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Slider}">
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="False" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="SelectionEnd" Value="{Binding RelativeSource={RelativeSource Self}, Path=Value}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template" Value="{StaticResource WD.SliderHorizontal}" />
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="Template" Value="{StaticResource WD.SliderVertical}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultSlider}" TargetType="{x:Type Slider}" />
	<Style x:Key="WD.DefaultHyperlink" TargetType="{x:Type Hyperlink}">
		<Setter Property="FontSize" Value="{StaticResource WD.NormalFontSize}" />
		<Setter Property="FontFamily" Value="{StaticResource WD.NormalFontFamily}" />
		<Setter Property="FontStyle" Value="{StaticResource WD.NormalFontStyle}" />
		<Setter Property="FontWeight" Value="{StaticResource WD.NormalFontWeight}" />
		<Setter Property="FontStretch" Value="{StaticResource WD.NormalFontStretch}" />
		<Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
		<Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="TextBlock.TextDecorations">
					<Setter.Value>
						<TextDecorationCollection>
							<TextDecoration Location="Underline" />
						</TextDecorationCollection>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultHyperlink}" TargetType="{x:Type Hyperlink}" />
	<Style x:Key="WD.DefaultCheckBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type CheckBox}">
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CheckBox}">
					<BulletDecorator Margin="{TemplateBinding Margin}" Background="Transparent">
						<BulletDecorator.Bullet>
							<Border HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" CornerRadius="{Binding ElementName=PART_Border, Path=CornerRadius}">
								<Border x:Name="PART_Border" Width="16" Height="16" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
									<controls:SmallPanel>
										<Path x:Name="PART_CheckMark" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource WD.CheckMarkGeometry}" Fill="{DynamicResource WD.WindowForegroundColorBrush}" RenderTransformOrigin=".5,.5" SnapsToDevicePixels="False" Stretch="Fill">
											<Path.RenderTransform>
												<ScaleTransform ScaleX="0" ScaleY="0" />
											</Path.RenderTransform>
										</Path>
										<Rectangle x:Name="PART_InderminateMark" Width="6" Height="2" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" RenderTransformOrigin=".5,.5">
											<Rectangle.RenderTransform>
												<ScaleTransform ScaleX="0" />
											</Rectangle.RenderTransform>
										</Rectangle>
									</controls:SmallPanel>
								</Border>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To=".7" Duration="00:00:.2" />
										<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_CheckMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleY)" To=".5" Duration="00:00:.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked" />
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboardIsCheckedNull">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_InderminateMark" Storyboard.TargetProperty="(Path.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<RemoveStoryboard BeginStoryboardName="PART_BeginStoryboardIsCheckedNull" />
							</Trigger.ExitActions>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultCheckBox}" TargetType="{x:Type CheckBox}" />
	<Style x:Key="WD.DefaultTextBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type TextBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="SelectionBrush" Value="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TextBox}">
					<Border Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<controls:SmallPanel>
							<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{StaticResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}" Visibility="Collapsed" />
							<ScrollViewer x:Name="PART_ContentHost" />
							<Button x:Name="PART_CloseButton" Width="20" Height="20" Margin="0,0,4,0" HorizontalAlignment="Right" helpers:ElementHelper.IsClear="{Binding Path=(helpers:ElementHelper.IsClear), RelativeSource={RelativeSource TemplatedParent}}" helpers:ElementHelper.IsRound="True" Style="{StaticResource WD.NormalButton}" ToolTip="{Binding [Clear], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed">
								<controls:PathIcon Width="10" Height="10" Foreground="{DynamicResource WD.SecondaryTextSolidColorBrush}" Kind="WindowClose" />
							</Button>
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Text" Value="">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="Text" Value="{x:Null}">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsClear" Value="True">
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="helpers:ElementHelper.IsClear" Value="True" />
								<Condition Property="Text" Value="{x:Null}" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="helpers:ElementHelper.IsClear" Value="True" />
								<Condition Property="Text" Value="" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultTextBox}" TargetType="{x:Type TextBox}" />
	<ControlTemplate x:Key="WD.ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
		<Border x:Name="PART_Border" Padding="6,1.2" BorderThickness="0" SnapsToDevicePixels="true">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="30" />
				</Grid.ColumnDefinitions>
				<Rectangle Grid.Column="1" Width="30" Height="Auto" Margin="0,1" Fill="{TemplateBinding Background}" />
				<Path x:Name="PART_Arrow" Grid.Column="1" Width="10" Height="6" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource WD.ChevronDownGeometry}" RenderTransformOrigin=".5,.5" Stretch="Fill">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource WD.PlaceholderTextColor}" />
					</Path.Fill>
					<Path.RenderTransform>
						<RotateTransform Angle="0" />
					</Path.RenderTransform>
				</Path>
			</Grid>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Pressed" />
					<VisualState x:Name="Disabled" />
				</VisualStateGroup>
				<VisualStateGroup x:Name="CheckStates">
					<VisualState x:Name="Checked">
						<Storyboard>
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-180" Duration="00:00:.3" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Unchecked">
						<Storyboard>
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_Arrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.3" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Indeterminate" />
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</Border>
	</ControlTemplate>
	<Style x:Key="WD.DefaultComboBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ComboBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<controls:SmallPanel>
							<ContentPresenter x:Name="ContentSite" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" IsHitTestVisible="False" />
							<TextBox x:Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="1" Background="Transparent" Focusable="True" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" IsReadOnly="{TemplateBinding IsReadOnly}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxTextBox}" Visibility="Hidden" />
							<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent" FontSize="{StaticResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" Visibility="Collapsed" />
							<ToggleButton x:Name="PART_ToggleButton" Background="{TemplateBinding Background}" ClickMode="Press" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxToggleButton}" />
							<Popup x:Name="PART_Popup" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" AllowsTransparency="True" Focusable="False" HorizontalOffset="-1" IsOpen="{TemplateBinding IsDropDownOpen}" Placement="Bottom" StaysOpen="False">
								<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}" Margin="24,2,24,24" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
									<controls:SmallPanel.RenderTransform>
										<ScaleTransform ScaleY="0" />
									</controls:SmallPanel.RenderTransform>
									<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
									<ScrollViewer Margin="0,8" ClipToBounds="False" ScrollViewer.VerticalScrollBarVisibility="Auto">
										<ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</controls:SmallPanel>
							</Popup>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_Border" Storyboard.TargetProperty="(Border.BorderBrush).(SolidColorBrush.Color)" To="{DynamicResource WD.PrimaryNormalColor}" Duration="00:00:.1" />
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable" />
									<VisualState x:Name="Uneditable" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="PART_DropDownBorder" Property="MinHeight" Value="95" />
						</Trigger>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
							<Setter TargetName="PART_DropDownBorder" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
						<Trigger Property="ComboBox.IsEditable" Value="True">
							<Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
							<Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible" />
							<Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition SourceName="PART_EditableTextBox" Property="Text" Value="" />
								<Condition Property="ComboBox.IsEditable" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="SelectionBoxItem" Value="" />
								<Condition Property="ComboBox.IsEditable" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="SelectionBoxItem" Value="{x:Null}" />
								<Condition Property="ComboBox.IsEditable" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultComboBoxItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Margin" Value="1,0" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="FontSize" Value="{Binding FontSize, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<controls:SmallPanel>
							<Rectangle x:Name="PART_RectangleMouseOver" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
							<Rectangle x:Name="PART_RectangleSelected" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Fill="{DynamicResource WD.BaseSolidColorBrush}" SnapsToDevicePixels="True" UseLayoutRounding="True" Visibility="Collapsed" />
							<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}" />
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_RectangleSelected" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.FontWeight" Value="Bold" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="PART_RectangleSelected" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.FontWeight" Value="Bold" />
						</MultiTrigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter TargetName="PART_RectangleMouseOver" Property="Fill" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultComboBoxItem}" TargetType="{x:Type ComboBoxItem}" />
	<Style BasedOn="{StaticResource WD.DefaultComboBox}" TargetType="{x:Type ComboBox}" />
	<Style x:Key="WD.DefaultToggleButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Padding" Value="4,0" />
		<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<BulletDecorator Background="Transparent">
						<BulletDecorator.Bullet>
							<Border x:Name="PART_Border" Width="40" Height="20" Background="{TemplateBinding Background}" CornerRadius="10">
								<Ellipse x:Name="PART_Ellipse" Width="16" Height="16" Margin="2,0" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{DynamicResource WD.WindowForegroundColorBrush}">
									<Ellipse.RenderTransform>
										<TranslateTransform />
									</Ellipse.RenderTransform>
								</Ellipse>
							</Border>
						</BulletDecorator.Bullet>
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource WD.CubicEaseInOut}" Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" To="20" Duration="00:00:.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation EasingFunction="{StaticResource WD.CubicEaseInOut}" Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(Ellipse.RenderTransform).(TranslateTransform.X)" To="0" Duration="00:00:.3" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</BulletDecorator>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultToggleButton}" TargetType="{x:Type ToggleButton}" />
	<Style x:Key="WD.CalendarDayButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type CalendarDayButton}">
		<Setter Property="Width" Value="32" />
		<Setter Property="Height" Value="32" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Margin" Value="0,1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarDayButton">
					<controls:SmallPanel Margin="{TemplateBinding Margin}">
						<Border x:Name="SelectedBackground" Background="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" Opacity="0" />
						<Border x:Name="SelectionBackground" Background="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" Opacity="0" />
						<Border x:Name="HighlightBackground" Background="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" Visibility="Collapsed" />
						<Ellipse x:Name="DayButtonFocusVisual" Width="5" Height="5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" IsHitTestVisible="False" Visibility="Collapsed" />
						<ContentPresenter x:Name="NormalText" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" />
						<Line x:Name="Blackout" Margin="8,3,8,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Opacity=".4" Stroke="{DynamicResource WD.PrimaryTextSolidColorBrush}" StrokeThickness="1.5" Visibility="Collapsed" X1="0" X2="{TemplateBinding Width}" Y1="0" Y2="0" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsToday" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.FontWeight" Value="Bold" />
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="DayButtonFocusVisual" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsBlackedOut" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
							<Setter TargetName="SelectionBackground" Property="Opacity" Value=".3" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
							<Setter TargetName="SelectedBackground" Property="Opacity" Value="0" />
							<Setter TargetName="SelectionBackground" Property="Opacity" Value=".3" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="SelectedBackground" Property="Opacity" Value="1" />
							<Setter TargetName="SelectionBackground" Property="Opacity" Value="0" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="True" />
								<Condition Property="IsInactive" Value="True" />
								<Condition Property="IsBlackedOut" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="False" />
								<Condition Property="IsInactive" Value="True" />
								<Condition Property="IsBlackedOut" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</MultiTrigger>
						<Trigger Property="IsBlackedOut" Value="True">
							<Setter TargetName="Blackout" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="helpers:DatePickerHelper.IsHighlight" Value="True">
							<Setter TargetName="SelectedBackground" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="SelectionBackground" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
							<Setter TargetName="HighlightBackground" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="helpers:DatePickerHelper.IsHighlight" Value="True" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter TargetName="SelectedBackground" Property="Opacity" Value="0" />
							<Setter TargetName="SelectionBackground" Property="Opacity" Value=".3" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.CalendarButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type CalendarButton}">
		<Setter Property="MinWidth" Value="48" />
		<Setter Property="MinHeight" Value="32" />
		<Setter Property="FontSize" Value="12" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="4,10" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="CalendarButton">
					<controls:SmallPanel>
						<Border x:Name="SelectionBackground" Margin="{TemplateBinding Padding}" Background="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" Opacity="0" />
						<ContentPresenter x:Name="NormalText" Margin="3,20" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" TextElement.Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" />
						<Ellipse x:Name="ButtonFocusVisual" Width="5" Height="5" HorizontalAlignment="Center" VerticalAlignment="Bottom" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" IsHitTestVisible="False">
							<Ellipse.Visibility>
								<MultiBinding Converter="{StaticResource WD.DatePickerToCurrentConverter}">
									<Binding ElementName="NormalText" Path="Content" />
									<Binding RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type CalendarButton}, AncestorLevel=1}" />
									<Binding Path="DataContext" RelativeSource="{RelativeSource FindAncestor, AncestorType={x:Type CalendarButton}, AncestorLevel=1}" />
								</MultiBinding>
							</Ellipse.Visibility>
						</Ellipse>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsInactive" Value="True">
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="SelectionBackground" Property="Opacity" Value=".3" />
							<Setter TargetName="NormalText" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="WD.PreviousButtonTemplate" TargetType="{x:Type Button}">
		<controls:SmallPanel>
			<controls:SmallPanel Background="Transparent">
				<Path x:Name="PART_Path" Width="6" Height="10" Margin="14,-6,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" Data="{StaticResource WD.PreviousGeometry}" Stretch="Fill">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource WD.RegularTextColor}" />
					</Path.Fill>
				</Path>
			</controls:SmallPanel>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{DynamicResource WD.PrimaryMouseOverColor}" Duration="0" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" To=".5" Duration="0" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</controls:SmallPanel>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.NextButtonTemplate" TargetType="{x:Type Button}">
		<controls:SmallPanel>
			<controls:SmallPanel Background="Transparent">
				<Path x:Name="PART_Path" Width="6" Height="10" Margin="0,-6,14,0" HorizontalAlignment="Right" VerticalAlignment="Center" Data="{StaticResource WD.NextGeometry}" Stretch="Fill">
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource WD.RegularTextColor}" />
					</Path.Fill>
				</Path>
			</controls:SmallPanel>
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver">
						<Storyboard>
							<ColorAnimation Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Shape.Fill).(SolidColorBrush.Color)" To="{StaticResource WD.PrimaryMouseOverColor}" Duration="0" />
						</Storyboard>
					</VisualState>
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="PART_Path" Storyboard.TargetProperty="(Shape.Fill).(Brush.Opacity)" To=".5" Duration="0" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</controls:SmallPanel>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.HeaderButtonTemplate" TargetType="{x:Type Button}">
		<controls:SmallPanel>
			<ContentPresenter x:Name="PART_ButtonContent" Margin="1,4,1,9" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}" TextElement.Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" />
			<VisualStateManager.VisualStateGroups>
				<VisualStateGroup x:Name="CommonStates">
					<VisualState x:Name="Normal" />
					<VisualState x:Name="MouseOver" />
					<VisualState x:Name="Disabled">
						<Storyboard>
							<DoubleAnimation Storyboard.TargetName="PART_ButtonContent" Storyboard.TargetProperty="Opacity" To=".5" Duration="0" />
						</Storyboard>
					</VisualState>
				</VisualStateGroup>
			</VisualStateManager.VisualStateGroups>
		</controls:SmallPanel>
	</ControlTemplate>
	<Style x:Key="WD.CalendarItemStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type CalendarItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<StackPanel>
								<TextBlock Margin="0,6" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" Text="{Binding}" />
								<Rectangle Height="1" VerticalAlignment="Bottom" Fill="{DynamicResource WD.BaseSolidColorBrush}" />
							</StackPanel>
						</DataTemplate>
					</ControlTemplate.Resources>
					<controls:SmallPanel x:Name="PART_Root" Margin="{TemplateBinding Margin}">
						<Border Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=Calendar}}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Calendar}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True">
							<Grid Margin="0,20,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Button x:Name="PART_PreviousButton" Grid.Row="0" Grid.Column="0" Width="28" Height="20" HorizontalAlignment="Left" Focusable="False" Template="{StaticResource WD.PreviousButtonTemplate}" />
								<Button x:Name="PART_HeaderButton" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" FontSize="14" Template="{StaticResource WD.HeaderButtonTemplate}" />
								<Button x:Name="PART_NextButton" Grid.Row="0" Grid.Column="2" Width="28" Height="20" HorizontalAlignment="Right" Focusable="False" Template="{StaticResource WD.NextButtonTemplate}" />
								<Grid x:Name="PART_MonthView" Grid.Row="1" Grid.ColumnSpan="3" Margin="6,10" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
								<Grid x:Name="PART_YearView" Grid.Row="1" Grid.ColumnSpan="3" Margin="6,-3,7,6" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
							</Grid>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultCalendar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Calendar}">
		<Setter Property="CalendarButtonStyle" Value="{StaticResource WD.CalendarButtonStyle}" />
		<Setter Property="CalendarDayButtonStyle" Value="{StaticResource WD.CalendarDayButtonStyle}" />
		<Setter Property="CalendarItemStyle" Value="{StaticResource WD.CalendarItemStyle}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Calendar}">
					<StackPanel x:Name="PART_Root" HorizontalAlignment="{TemplateBinding HorizontalAlignment}">
						<CalendarItem x:Name="PART_CalendarItem" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Style="{TemplateBinding CalendarItemStyle}" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DropDownButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="Button">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="30" />
							<ColumnDefinition />
						</Grid.ColumnDefinitions>
						<Border x:Name="Border" Grid.ColumnSpan="2" Background="{DynamicResource WD.BackgroundSolidColorBrush}" />
						<Grid Width="19" Height="18" HorizontalAlignment="Center" VerticalAlignment="Center" FlowDirection="LeftToRight">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
								<ColumnDefinition Width="20*" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="23*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
								<RowDefinition Height="19*" />
							</Grid.RowDefinitions>
							<Border x:Name="Highlight" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="4" Margin="-1" BorderBrush="{DynamicResource WD.RegularTextSolidColorBrush}" BorderThickness="1" CornerRadius="0,0,1,1" Opacity="1" />
							<Border x:Name="Background" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" Margin="0,-1,0,0" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.RegularTextSolidColorBrush}" BorderThickness="1" CornerRadius=".5" Opacity="1" />
							<Border x:Name="BackgroundGradient" Grid.Row="1" Grid.RowSpan="3" Grid.ColumnSpan="4" Margin="0,-1,0,0" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.RegularTextSolidColorBrush}" BorderThickness="1" CornerRadius=".5" Opacity="1" />
							<Rectangle Grid.RowSpan="1" Grid.ColumnSpan="4" Fill="{DynamicResource WD.RegularTextSolidColorBrush}" Stroke="{DynamicResource WD.RegularTextSolidColorBrush}" StrokeThickness="1" />
							<Path Grid.Row="1" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="4" Margin="4,3,4,3" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource WD.DatePickerGeometry}" Fill="{DynamicResource WD.RegularTextSolidColorBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" />
							<Ellipse Grid.ColumnSpan="4" Width="3" Height="3" HorizontalAlignment="Center" VerticalAlignment="Center" Fill="{DynamicResource WD.BackgroundSolidColorBrush}" StrokeThickness="0" />
							<Border x:Name="DisabledVisual" Grid.Row="0" Grid.RowSpan="4" Grid.ColumnSpan="4" BorderBrush="{DynamicResource WD.BackgroundSolidColorBrush}" BorderThickness="1" CornerRadius="0,0,.5,.5" Opacity="0" />
						</Grid>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDatePickerTextBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DatePickerTextBox}">
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="DatePickerTextBox">
					<controls:SmallPanel>
						<Border x:Name="Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<controls:SmallPanel x:Name="WatermarkContent">
								<ContentControl x:Name="PART_Watermark" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" helpers:DatePickerHelper.TextTrimming="WordEllipsis" Background="Transparent" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" IsHitTestVisible="False" Opacity="0" />
								<ScrollViewer x:Name="PART_ContentHost" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" />
							</controls:SmallPanel>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup Name="WatermarkStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" />
								</VisualStateGroup.Transitions>
								<VisualState Name="Unwatermarked" />
								<VisualState Name="Watermarked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Watermark" Storyboard.TargetProperty="Opacity" To="1" Duration="0" />
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultCalendar}" TargetType="{x:Type Calendar}" />
	<Style BasedOn="{StaticResource WD.DefaultDatePickerTextBox}" TargetType="{x:Type DatePickerTextBox}" />
	<Style x:Key="WD.DefaultDataGridSelectAllButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Button}">
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Polygon x:Name="Arrow" Margin="0,2,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Points="0,10 10,10 10,0" Stretch="Uniform">
							<Polygon.Fill>
								<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
							</Polygon.Fill>
						</Polygon>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Arrow" Property="Fill" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDataGrid" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DataGrid}">
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="HorizontalGridLinesBrush" Value="{x:Null}" />
		<Setter Property="VerticalGridLinesBrush" Value="{x:Null}" />
		<Setter Property="CanUserAddRows" Value="False" />
		<Setter Property="AutoGenerateColumns" Value="False" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="RowHeaderWidth" Value="0" />
		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
		<Setter Property="ScrollViewer.PanningMode" Value="VerticalOnly" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGrid}">
					<controls:WDBorder x:Name="DGR_Border" Padding="0,0,0,.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<ScrollViewer x:Name="DG_ScrollViewer" Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" Focusable="False">
							<ScrollViewer.Template>
								<ControlTemplate TargetType="{x:Type ScrollViewer}">
									<Grid>
										<Grid.ColumnDefinitions>
											<ColumnDefinition Width="Auto" />
											<ColumnDefinition Width="*" />
											<ColumnDefinition Width="Auto" />
										</Grid.ColumnDefinitions>
										<Grid.RowDefinitions>
											<RowDefinition Height="Auto" />
											<RowDefinition Height="*" />
											<RowDefinition Height="Auto" />
										</Grid.RowDefinitions>
										<Button x:Name="PART_DataGridSelectAllButton" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType=DataGrid}, Converter={StaticResource WD.DoubleMinConverter}}" Command="{x:Static DataGrid.SelectAllCommand}" Focusable="False" Style="{StaticResource WD.DefaultDataGridSelectAllButtonStyle}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" Grid.Row="1" Grid.ColumnSpan="2" CanContentScroll="{TemplateBinding CanContentScroll}" />
										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
										<Grid Grid.Row="2" Grid.Column="1">
											<Grid.ColumnDefinitions>
												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
												<ColumnDefinition Width="*" />
											</Grid.ColumnDefinitions>
											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
										</Grid>
									</Grid>
								</ControlTemplate>
							</ScrollViewer.Template>
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</controls:WDBorder>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsGrouping" Value="True">
				<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.DefaultDataGridCell" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DataGridCell}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridCell}">
					<Border x:Name="PART_Border" Margin="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="FocusStates">
								<VisualState x:Name="Unfocused" />
								<VisualState x:Name="Focused" />
							</VisualStateGroup>
							<VisualStateGroup x:Name="CurrentStates">
								<VisualState x:Name="Regular" />
								<VisualState x:Name="Current" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDataGridRow" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DataGridRow}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="ValidationErrorTemplate">
			<Setter.Value>
				<ControlTemplate>
					<TextBlock Margin="2,0,0,0" VerticalAlignment="Center" Foreground="{DynamicResource WD.DangerPressedSolidColorBrush}" Text="!" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRow}">
					<Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<SelectiveScrollingGrid>
							<SelectiveScrollingGrid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
							</SelectiveScrollingGrid.ColumnDefinitions>
							<SelectiveScrollingGrid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</SelectiveScrollingGrid.RowDefinitions>
							<DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							<DataGridDetailsPresenter Grid.Row="1" Grid.Column="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}" />
							<DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" />
						</SelectiveScrollingGrid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Normal_AlternatingRow" />
								<VisualState x:Name="Normal_Selected" />
								<VisualState x:Name="Unfocused_Selected" />
								<VisualState x:Name="Normal_Editing" />
								<VisualState x:Name="MouseOver_Editing">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource WD.DefaultBackgroundColor}" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Editing" />
								<VisualState x:Name="Unfocused_Editing" />
								<VisualState x:Name="MouseOver">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource WD.BaseMoveColor}" Duration="0:0:0.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Selected">
									<Storyboard>
										<ColorAnimation Storyboard.TargetName="DGR_Border" Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)" To="{DynamicResource WD.BaseMoveColor}" Duration="0:0:0.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="MouseOver_Unfocused_Selected" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.RowHeaderGripperStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="Height" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeNS" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDataGridRowHeader" TargetType="{x:Type DataGridRowHeader}">
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridRowHeader}">
					<controls:SmallPanel HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<Border x:Name="DGR_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
							<StackPanel Orientation="Horizontal">
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontWeight="{TemplateBinding FontWeight}" />
								<Control SnapsToDevicePixels="false" Template="{Binding ValidationErrorTemplate, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" Visibility="{Binding (Validation.HasError), Converter={StaticResource WD.Bool2VisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGridRow}}}" />
							</StackPanel>
						</Border>
						<Thumb x:Name="PART_TopHeaderGripper" VerticalAlignment="Top" Style="{StaticResource WD.RowHeaderGripperStyle}" />
						<Thumb x:Name="PART_BottomHeaderGripper" VerticalAlignment="Bottom" Style="{StaticResource WD.RowHeaderGripperStyle}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ColumnHeaderGripperStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="8" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Cursor" Value="SizeWE" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Width="{TemplateBinding Width}" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" />
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDataGridColumnHeader" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DataGridColumnHeader}">
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type DataGrid}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="StoryboardAscending">
							<DoubleAnimation Storyboard.TargetName="SortArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="180" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="StoryboardDescending">
							<DoubleAnimation Storyboard.TargetName="SortArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel>
						<Border x:Name="DGR_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
							<Grid Name="HedearGrid">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontWeight="{TemplateBinding FontWeight}" TextElement.Foreground="{TemplateBinding Foreground}" />
								<Path x:Name="SortArrow" Grid.Column="1" Width="10" Height="10" Margin="4,0,0,0" VerticalAlignment="Center" Data="{StaticResource WD.SortArrowGeometry}" Fill="{DynamicResource WD.PrimaryPressedSolidColorBrush}" RenderTransformOrigin="0.5,0.5" Stretch="Fill" Visibility="Collapsed">
									<Path.RenderTransform>
										<RotateTransform />
									</Path.RenderTransform>
								</Path>
							</Grid>
						</Border>
						<Thumb x:Name="PART_LeftHeaderGripper" HorizontalAlignment="Left" Style="{StaticResource WD.ColumnHeaderGripperStyle}" />
						<Thumb x:Name="PART_RightHeaderGripper" HorizontalAlignment="Right" Style="{StaticResource WD.ColumnHeaderGripperStyle}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="SortDirection" Value="Ascending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="StoryboardAscendingBeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="StoryboardAscendingBeginStoryboard" Storyboard="{StaticResource StoryboardAscending}" />
							</Trigger.EnterActions>
						</Trigger>
						<Trigger Property="SortDirection" Value="Descending">
							<Setter TargetName="SortArrow" Property="Visibility" Value="Visible" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="StoryboardDescendingBeginStoryboard" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="StoryboardDescendingBeginStoryboard" Storyboard="{StaticResource StoryboardDescending}" />
							</Trigger.EnterActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultDataGridColumnHeadersPresenter" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DataGridColumnHeadersPresenter}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
					<controls:SmallPanel>
						<DataGridColumnHeader x:Name="PART_FillerColumnHeader" IsHitTestVisible="False" />
						<ItemsPresenter />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultDataGridColumnHeadersPresenter}" TargetType="{x:Type DataGridColumnHeadersPresenter}" />
	<Style BasedOn="{StaticResource WD.DefaultDataGridColumnHeader}" TargetType="{x:Type DataGridColumnHeader}" />
	<Style BasedOn="{StaticResource WD.DefaultDataGridRowHeader}" TargetType="{x:Type DataGridRowHeader}" />
	<Style BasedOn="{StaticResource WD.DefaultDataGridRow}" TargetType="{x:Type DataGridRow}" />
	<Style BasedOn="{StaticResource WD.DefaultDataGridCell}" TargetType="{x:Type DataGridCell}" />
	<Style BasedOn="{StaticResource WD.DefaultDataGrid}" TargetType="{x:Type DataGrid}" />
	<Style x:Key="WD.BaseTAndBTabItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type TabItem}">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="BorderThickness" Value="{StaticResource WD.TabItemBorderThickness}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabItem}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<Border x:Name="PART_Border" BorderThickness="{TemplateBinding BorderThickness}" />
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" VerticalAlignment="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" ContentSource="Header" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.LeftTabItem" BasedOn="{StaticResource WD.BaseTAndBTabItem}" TargetType="{x:Type TabItem}">
		<Setter Property="BorderThickness" Value="0,0,2,0" />
	</Style>
	<Style x:Key="WD.RightTabItem" BasedOn="{StaticResource WD.BaseTAndBTabItem}" TargetType="{x:Type TabItem}">
		<Setter Property="BorderThickness" Value="2,0,0,0" />
	</Style>
	<Style x:Key="WD.TopTabItem" BasedOn="{StaticResource WD.BaseTAndBTabItem}" TargetType="{x:Type TabItem}">
		<Setter Property="BorderThickness" Value="0,0,0,2" />
	</Style>
	<Style x:Key="WD.BottomTabItem" BasedOn="{StaticResource WD.BaseTAndBTabItem}" TargetType="{x:Type TabItem}">
		<Setter Property="BorderThickness" Value="0,2,0,0" />
	</Style>
	<Style x:Key="WD.DefaultTabControl" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type TabControl}">
		<Setter Property="TabStripPlacement" Value="Top" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource WD.TopTabItem}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TabControl}">
					<controls:WDBorder x:Name="PART_Border" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<Grid Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="ColumnDefinition0" />
								<ColumnDefinition x:Name="ColumnDefinition1" Width="0" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition x:Name="RowDefinition0" Height="Auto" />
								<RowDefinition x:Name="RowDefinition1" Height="*" />
							</Grid.RowDefinitions>
							<Border x:Name="HeaderBorder" Grid.Row="0" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0,0,0,1" ClipToBounds="True" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Down}" SnapsToDevicePixels="True">
								<TabPanel Name="HeaderPanel" Panel.ZIndex="1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" />
							</Border>
							<controls:SmallPanel x:Name="ContentPanel" Grid.Row="1" Grid.Column="0" KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
								<ContentPresenter Name="PART_SelectedContentHost" Margin="{TemplateBinding Padding}" Content="{TemplateBinding SelectedContent}" ContentSource="SelectedContent" ContentStringFormat="{TemplateBinding SelectedContentStringFormat}" ContentTemplate="{TemplateBinding SelectedContentTemplate}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
							</controls:SmallPanel>
						</Grid>
					</controls:WDBorder>
					<ControlTemplate.Triggers>
						<Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="Auto" />
							<Setter TargetName="HeaderBorder" Property="Grid.Row" Value="1" />
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0,1,0,0" />
							<Setter TargetName="HeaderBorder" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Up}" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource WD.BottomTabItem}" />
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Left">
							<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="Auto" />
							<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="*" />
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="ContentPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="0,0,1,0" />
							<Setter TargetName="HeaderBorder" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Right}" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource WD.LeftTabItem}" />
						</Trigger>
						<Trigger Property="TabControl.TabStripPlacement" Value="Right">
							<Setter TargetName="ContentPanel" Property="Grid.Row" Value="0" />
							<Setter TargetName="HeaderBorder" Property="Grid.Column" Value="1" />
							<Setter TargetName="ContentPanel" Property="Grid.Column" Value="0" />
							<Setter TargetName="ColumnDefinition0" Property="ColumnDefinition.Width" Value="*" />
							<Setter TargetName="ColumnDefinition1" Property="ColumnDefinition.Width" Value="Auto" />
							<Setter TargetName="RowDefinition0" Property="RowDefinition.Height" Value="*" />
							<Setter TargetName="RowDefinition1" Property="RowDefinition.Height" Value="0" />
							<Setter TargetName="HeaderBorder" Property="BorderThickness" Value="1,0,0,0" />
							<Setter TargetName="HeaderBorder" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Left}" />
							<Setter Property="ItemContainerStyle" Value="{StaticResource WD.RightTabItem}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultTabControl}" TargetType="{x:Type TabControl}" />
	<Style x:Key="WD.DefaultPasswordBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type PasswordBox}">
		<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="PasswordChar" Value="●" />
		<Setter Property="AllowDrop" Value="True" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="helpers:PasswordBoxHelper.IsMonitoring" Value="True" />
		<Setter Property="SelectionBrush" Value="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type PasswordBox}">
					<Border x:Name="PART_Border" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<controls:SmallPanel>
							<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" FontSize="{TemplateBinding FontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" Visibility="Collapsed" />
							<ScrollViewer x:Name="PART_ContentHost" />
							<Button x:Name="PART_CloseButton" Width="20" Height="20" Margin="0,0,4,0" HorizontalAlignment="Right" helpers:ElementHelper.IsClear="{Binding Path=(helpers:ElementHelper.IsClear), RelativeSource={RelativeSource TemplatedParent}}" helpers:ElementHelper.IsRound="True" Style="{StaticResource WD.NormalButton}" ToolTip="{Binding [Clear], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed">
								<controls:PathIcon Width="10" Height="10" Foreground="{DynamicResource WD.SecondaryTextSolidColorBrush}" Kind="WindowClose" />
							</Button>
						</controls:SmallPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="helpers:PasswordBoxHelper.PasswordLength" Value="0">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsClear" Value="True">
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="helpers:ElementHelper.IsClear" Value="True" />
								<Condition Property="helpers:PasswordBoxHelper.PasswordLength" Value="0" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultPasswordBox}" TargetType="{x:Type PasswordBox}" />
	<Style x:Key="WD.DefaultExpander" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Expander}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Expander}">
					<Border x:Name="PART_BorderRoot" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" ClipToBounds="True" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<DockPanel>
							<ToggleButton x:Name="HeaderSite" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1" Content="{TemplateBinding Header}" ContentTemplate="{TemplateBinding HeaderTemplate}" DockPanel.Dock="Top" IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<ToggleButton.Style>
									<Style BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
										<Setter Property="helpers:ElementHelper.CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType={x:Type Expander}}}" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="PART_Border" Background="{DynamicResource WD.LighterSolidColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
														<Grid Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}" Background="Transparent" SnapsToDevicePixels="False">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<Path x:Name="ExpandededArrow" Width="6" Height="10" Data="{StaticResource WD.NextGeometry}" RenderTransformOrigin=".5,.5" Stretch="Uniform">
																<Path.Fill>
																	<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
																</Path.Fill>
																<Path.RenderTransform>
																	<RotateTransform />
																</Path.RenderTransform>
															</Path>
															<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="True" />
														</Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="90" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Down}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</ToggleButton.Style>
							</ToggleButton>
							<Border x:Name="PART_Content" DockPanel.Dock="Bottom" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True" Visibility="Collapsed">
								<Border.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</Border.RenderTransform>
								<ContentPresenter x:Name="ExpandSite" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" Focusable="False" />
							</Border>
						</DockPanel>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="True">
							<Setter TargetName="PART_Content" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_BorderRoot" Property="BorderThickness" Value="1" />
							<Setter TargetName="HeaderSite" Property="BorderThickness" Value="0" />
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Right">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="PART_Content" Property="RenderTransformOrigin" Value="0,.5" />
							<Setter TargetName="PART_Content" Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="HeaderSite" Property="Style">
								<Setter.Value>
									<Style BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
										<Setter Property="helpers:ElementHelper.CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType={x:Type Expander}}}" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="PART_Border" Background="{DynamicResource WD.LighterSolidColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
														<Grid Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}" Background="Transparent" SnapsToDevicePixels="False">
															<Grid.RowDefinitions>
																<RowDefinition Height="19" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<controls:SmallPanel>
																<controls:SmallPanel.LayoutTransform>
																	<TransformGroup>
																		<RotateTransform Angle="90" />
																	</TransformGroup>
																</controls:SmallPanel.LayoutTransform>
																<Path x:Name="ExpandededArrow" Width="6" Height="10" Data="{StaticResource WD.NextGeometry}" RenderTransformOrigin=".5,.5" Stretch="Uniform">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="True" />
														</Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-90" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding (helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Right}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Up">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Top" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Bottom" />
							<Setter TargetName="PART_Content" Property="RenderTransformOrigin" Value=".5,1" />
							<Setter TargetName="HeaderSite" Property="Style">
								<Setter.Value>
									<Style BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
										<Setter Property="helpers:ElementHelper.CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType={x:Type Expander}}}" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="PART_Border" Background="{DynamicResource WD.LighterSolidColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
														<Grid Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}" Background="Transparent" SnapsToDevicePixels="False">
															<Grid.ColumnDefinitions>
																<ColumnDefinition Width="19" />
																<ColumnDefinition Width="*" />
															</Grid.ColumnDefinitions>
															<controls:SmallPanel>
																<Path x:Name="ExpandededArrow" Width="6" Height="10" Data="{StaticResource WD.NextGeometry}" RenderTransformOrigin=".5,.5" Stretch="Uniform">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="True" />
														</Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-90" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Up}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="ExpandDirection" Value="Left">
							<Setter TargetName="ExpandSite" Property="DockPanel.Dock" Value="Left" />
							<Setter TargetName="HeaderSite" Property="DockPanel.Dock" Value="Right" />
							<Setter TargetName="PART_Content" Property="RenderTransformOrigin" Value="1,.5" />
							<Setter TargetName="PART_Content" Property="RenderTransform">
								<Setter.Value>
									<ScaleTransform ScaleX="0" />
								</Setter.Value>
							</Setter>
							<Setter TargetName="HeaderSite" Property="Style">
								<Setter.Value>
									<Style BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
										<Setter Property="helpers:ElementHelper.CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType={x:Type Expander}}}" />
										<Setter Property="Template">
											<Setter.Value>
												<ControlTemplate TargetType="{x:Type ToggleButton}">
													<Border x:Name="PART_Border" Background="{DynamicResource WD.LighterSolidColorBrush}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
														<Grid Margin="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Expander}}}" Background="Transparent" SnapsToDevicePixels="False">
															<Grid.RowDefinitions>
																<RowDefinition Height="19" />
																<RowDefinition Height="*" />
															</Grid.RowDefinitions>
															<controls:SmallPanel>
																<controls:SmallPanel.LayoutTransform>
																	<TransformGroup>
																		<RotateTransform Angle="90" />
																	</TransformGroup>
																</controls:SmallPanel.LayoutTransform>
																<Path x:Name="ExpandededArrow" Width="6" Height="10" Data="{StaticResource WD.NextGeometry}" RenderTransformOrigin=".5,.5" Stretch="Uniform">
																	<Path.Fill>
																		<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
																	</Path.Fill>
																	<Path.RenderTransform>
																		<RotateTransform />
																	</Path.RenderTransform>
																</Path>
															</controls:SmallPanel>
															<ContentPresenter Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Top" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" RecognizesAccessKey="True" SnapsToDevicePixels="True" />
														</Grid>
														<VisualStateManager.VisualStateGroups>
															<VisualStateGroup x:Name="CheckStates">
																<VisualState x:Name="Checked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="90" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Unchecked">
																	<Storyboard>
																		<DoubleAnimation Storyboard.TargetName="ExpandededArrow" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
																	</Storyboard>
																</VisualState>
																<VisualState x:Name="Indeterminate" />
															</VisualStateGroup>
														</VisualStateManager.VisualStateGroups>
													</Border>
													<ControlTemplate.Triggers>
														<Trigger Property="IsChecked" Value="True">
															<Setter TargetName="PART_Border" Property="CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Left}" />
														</Trigger>
													</ControlTemplate.Triggers>
												</ControlTemplate>
											</Setter.Value>
										</Setter>
									</Style>
								</Setter.Value>
							</Setter>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Down" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,0,1,1" />
							<Setter TargetName="HeaderSite" Property="BorderThickness" Value="0,0,0,1" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_DownBeginStoryboard">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_DownBeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Right" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="0,1,1,1" />
							<Setter TargetName="HeaderSite" Property="BorderThickness" Value="0,0,1,0" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_RightBeginStoryboard">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_RightBeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Up" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,1,1,0" />
							<Setter TargetName="HeaderSite" Property="BorderThickness" Value="0,1,0,0" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_UpBeginStoryboard">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_UpBeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsExpanded" Value="True" />
								<Condition Property="ExpandDirection" Value="Left" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Content" Property="BorderThickness" Value="1,1,0,1" />
							<Setter TargetName="HeaderSite" Property="BorderThickness" Value="1,0,0,0" />
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="PART_LeftBeginStoryboard">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_Content" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleX)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</BeginStoryboard>
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_LeftBeginStoryboard" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultExpander}" TargetType="{x:Type Expander}" />
	<Style x:Key="WD.DefaultGroupBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type GroupBox}">
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Background" Value="{DynamicResource WD.LighterSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GroupBox}">
					<Grid Margin="{TemplateBinding Margin}">
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="*" />
						</Grid.RowDefinitions>
						<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Down}" SnapsToDevicePixels="True">
							<ContentPresenter Margin="{TemplateBinding Padding}" VerticalAlignment="Center" ContentSource="Header" RecognizesAccessKey="True" />
						</Border>
						<Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,0,1,1" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.CornerRadiusToSurroundConverter}, ConverterParameter=Up}" SnapsToDevicePixels="True">
							<ContentPresenter Margin="{TemplateBinding Padding}" />
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultGroupBox}" TargetType="{x:Type GroupBox}" />
	<Style x:Key="WD.DefaultListBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<controls:WDBorder x:Name="Border" Margin="{TemplateBinding Margin}" Padding="0,0,0,.1" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<ScrollViewer Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" Focusable="False">
							<VirtualizingStackPanel IsItemsHost="True" />
						</ScrollViewer>
					</controls:WDBorder>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultListBoxItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListBoxItem}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ListBoxItem">
					<controls:SmallPanel>
						<Border x:Name="PART_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="SelectionStates">
								<VisualState x:Name="Unselected" />
								<VisualState x:Name="Selected" />
								<VisualState x:Name="SelectedUnfocused" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.BaseMoveSolidColorBrush}" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultListBox}" TargetType="{x:Type ListBox}" />
	<Style BasedOn="{StaticResource WD.DefaultListBoxItem}" TargetType="{x:Type ListBoxItem}" />
	<Style x:Key="WD.GridViewScrollViewerStyleKey" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ScrollViewer}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ScrollViewer}">
					<controls:SmallPanel>
						<DockPanel Margin="{TemplateBinding Padding}">
							<ScrollViewer DockPanel.Dock="Top" Focusable="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
								<GridViewHeaderRowPresenter AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}" ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}" Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</ScrollViewer>
							<ScrollContentPresenter Name="PART_ScrollContentPresenter" CanContentScroll="True" CanHorizontallyScroll="False" CanVerticallyScroll="False" KeyboardNavigation.DirectionalNavigation="Local" />
						</DockPanel>
						<ScrollBar Name="PART_HorizontalScrollBar" VerticalAlignment="Bottom" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{TemplateBinding HorizontalOffset}" />
						<ScrollBar Name="PART_VerticalScrollBar" HorizontalAlignment="Right" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{TemplateBinding VerticalOffset}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.GridViewColumnHeaderGripper" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Thumb}">
		<Setter Property="Width" Value="18" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Thumb}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Rectangle Width="1" HorizontalAlignment="Center" Fill="{TemplateBinding Background}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultGridViewColumnHeader" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type GridViewColumnHeader}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FontWeight" Value="ExtraBlack" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridViewColumnHeader}">
					<controls:SmallPanel>
						<Border x:Name="HeaderBorder" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
							<ContentPresenter x:Name="HeaderContent" Margin="0,0,0,1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.FontWeight="{TemplateBinding FontWeight}" />
						</Border>
						<Thumb x:Name="PART_HeaderGripper" Margin="0,0,-9,0" HorizontalAlignment="Right" Style="{StaticResource WD.GridViewColumnHeaderGripper}" />
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="MouseOver" />
								<VisualState x:Name="Pressed" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultListView" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListView}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListView}">
					<Border Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<ScrollViewer Style="{StaticResource WD.GridViewScrollViewerStyleKey}">
							<ScrollViewer.Clip>
								<RectangleGeometry>
									<RectangleGeometry.RadiusX>
										<Binding ElementName="Border" Path="CornerRadius.TopLeft" />
									</RectangleGeometry.RadiusX>
									<RectangleGeometry.RadiusY>
										<Binding ElementName="Border" Path="CornerRadius.TopLeft" />
									</RectangleGeometry.RadiusY>
									<RectangleGeometry.Rect>
										<MultiBinding Converter="{StaticResource WD.WidthHeightToRectConverter}">
											<Binding Path="ActualWidth" RelativeSource="{RelativeSource AncestorType=ScrollViewer}" />
											<Binding Path="ActualHeight" RelativeSource="{RelativeSource AncestorType=ScrollViewer}" />
										</MultiBinding>
									</RectangleGeometry.Rect>
								</RectangleGeometry>
							</ScrollViewer.Clip>
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultListViewItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListViewItem}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0,0,0,1" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListViewItem}">
					<Border x:Name="Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<GridViewRowPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="False" />
								<Condition Property="IsMouseOver" Value="True" />
							</MultiTrigger.Conditions>
							<Setter Property="Background" Value="{DynamicResource WD.BaseMoveSolidColorBrush}" />
						</MultiTrigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultListViewItem}" TargetType="{x:Type ListViewItem}" />
	<Style BasedOn="{StaticResource WD.DefaultGridViewColumnHeader}" TargetType="{x:Type GridViewColumnHeader}" />
	<Style BasedOn="{StaticResource WD.DefaultListView}" TargetType="{x:Type ListView}" />
	<Style x:Key="WD.DefaultProgressBar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ProgressBar}">
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Height" Value="{StaticResource WD.RepeatButtonSize}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ProgressBar}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="IsIndeterminate" RepeatBehavior="Forever">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)">
								<EasingDoubleKeyFrame KeyTime="0" Value="0.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.3" />
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.3" />
							</DoubleAnimationUsingKeyFrames>
							<PointAnimationUsingKeyFrames Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
								<EasingPointKeyFrame EasingFunction="{StaticResource WD.SineEaseOut}" KeyTime="0" Value="-0.5,0.5" />
								<EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5" />
								<EasingPointKeyFrame EasingFunction="{StaticResource WD.SineEaseOut}" KeyTime="0:0:2" Value="1.5,0.5" />
							</PointAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:WDBorder x:Name="PART_TemplateRoot" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<controls:SmallPanel ClipToBounds="True" SnapsToDevicePixels="True">
							<Border x:Name="PART_Border" Background="{DynamicResource WD.BaseSolidColorBrush}" Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" />
							<Rectangle x:Name="PART_Track" />
							<Decorator x:Name="PART_Indicator" HorizontalAlignment="Left">
								<Border x:Name="Indicator" Background="{TemplateBinding Foreground}" Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" />
							</Decorator>
							<Rectangle x:Name="PART_Rectangle" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" Visibility="Collapsed">
								<Rectangle.RenderTransform>
									<ScaleTransform />
								</Rectangle.RenderTransform>
							</Rectangle>
						</controls:SmallPanel>
					</controls:WDBorder>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter Property="Height" Value="{x:Static sys:Double.NaN}" />
							<Setter TargetName="PART_TemplateRoot" Property="LayoutTransform">
								<Setter.Value>
									<RotateTransform Angle="-90" />
								</Setter.Value>
							</Setter>
						</Trigger>
						<Trigger Property="IsIndeterminate" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="IndeterminateStoryboard" Storyboard="{StaticResource IsIndeterminate}" />
							</Trigger.EnterActions>
							<Setter TargetName="PART_Indicator" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_Rectangle" Property="Visibility" Value="Visible" />
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="IndeterminateStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="helpers:ElementHelper.IsStripe" Value="True">
							<Setter Property="Foreground">
								<Setter.Value>
									<DrawingBrush Stretch="None" TileMode="Tile" Viewport="0,0,20,6" ViewportUnits="Absolute">
										<DrawingBrush.Transform>
											<TransformGroup>
												<RotateTransform Angle="20" />
												<TranslateTransform X="0" />
											</TransformGroup>
										</DrawingBrush.Transform>
										<DrawingBrush.Drawing>
											<GeometryDrawing>
												<GeometryDrawing.Brush>
													<LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
														<GradientStop Offset="0" Color="{DynamicResource WD.PrimaryNormalColor}" />
														<GradientStop Offset="0.5" Color="{DynamicResource WD.PrimaryNormalColor}" />
														<GradientStop Offset="0.5" Color="Transparent" />
														<GradientStop Offset="1" Color="Transparent" />
													</LinearGradientBrush>
												</GeometryDrawing.Brush>
												<GeometryDrawing.Geometry>
													<RectangleGeometry Rect="0,0,20,6" />
												</GeometryDrawing.Geometry>
											</GeometryDrawing>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</Setter.Value>
							</Setter>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="LoadedBeginStoryboard">
									<Storyboard RepeatBehavior="Forever">
										<DoubleAnimation Storyboard.TargetName="Indicator" Storyboard.TargetProperty="(Border.Background).(Brush.Transform).(TransformGroup.Children)[1].(TranslateTransform.X)" From="0" To="21" Duration="00:00:0.45" />
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="LoadedBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultProgressBar}" TargetType="{x:Type ProgressBar}" />
	<Style x:Key="WD.DefaultTreeView" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type TreeView}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="TreeView">
					<controls:WDBorder Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<ScrollViewer CanContentScroll="False" Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}" Focusable="False">
							<ItemsPresenter />
						</ScrollViewer>
					</controls:WDBorder>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ExpandCollapseToggleStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="ToggleButton">
					<Border x:Name="PART_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<controls:SmallPanel Width="15" Height="13" Background="Transparent">
							<Path x:Name="Expanded" Width="6" Height="10" Data="{StaticResource WD.NextGeometry}" RenderTransformOrigin=".5,.5" Stretch="Uniform">
								<Path.Fill>
									<SolidColorBrush Color="{DynamicResource WD.PrimaryTextColor}" />
								</Path.Fill>
								<Path.RenderTransform>
									<RotateTransform />
								</Path.RenderTransform>
							</Path>
						</controls:SmallPanel>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CheckStates">
								<VisualState x:Name="Checked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="90" Duration="00:00:.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unchecked">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="Expanded" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="00:00:.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Indeterminate" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.BaseMoveSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.TreeViewItemFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="0,0,0,0" Opacity="0" Stroke="{DynamicResource WD.BlackSolidColorBrush}" StrokeDashArray="1 2" StrokeThickness="5" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultTreeViewItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding Path=HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding Path=VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="FocusVisualStyle" Value="{StaticResource WD.TreeViewItemFocusVisual}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="19" />
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="Expander" ClickMode="Press" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource WD.ExpandCollapseToggleStyle}" />
						<Border x:Name="PART_Border" Grid.Column="1" Grid.ColumnSpan="2" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
							<ContentPresenter x:Name="PART_Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" ContentSource="Header" />
						</Border>
						<Border x:Name="PART_ItemsHost" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" RenderTransformOrigin=".5,0">
							<Border.RenderTransform>
								<ScaleTransform ScaleY="0" />
							</Border.RenderTransform>
							<ItemsPresenter x:Name="ItemsHost" />
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ExpansionStates">
								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation Storyboard.TargetName="PART_ItemsHost" Storyboard.TargetProperty="(Border.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_Border" Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.BaseMoveSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsExpanded" Value="False">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="False">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsSelected" Value="True" />
								<Condition Property="IsSelectionActive" Value="False" />
							</MultiTrigger.Conditions>
							<Setter TargetName="PART_Border" Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultTreeView}" TargetType="{x:Type TreeView}" />
	<Style BasedOn="{StaticResource WD.DefaultTreeViewItem}" TargetType="{x:Type TreeViewItem}" />
	<Style x:Key="WD.WDMessageBox" TargetType="{x:Type controls:WDMessageBox}">
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="SizeToContent" Value="WidthAndHeight" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="ShowInTaskbar" Value="False" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="UseLayoutRounding" Value="True" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Display" />
		<Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
		<Setter Property="WindowStyle" Value="ToolWindow" />
		<Setter Property="FontFamily" Value="{StaticResource WD.NormalFontFamily}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WDMessageBox}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition />
								<RowDefinition />
							</Grid.RowDefinitions>
							<controls:SmallPanel Grid.Row="0">
								<DockPanel Margin="20,0,0,0">
									<TextBlock x:Name="PART_Title" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{StaticResource WD.TitleFontSize}" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
									<Button Name="PART_CloseButton" Margin="0,6" HorizontalAlignment="Right" IsTabStop="False" Style="{DynamicResource WD.WindowButtonStyle}" ToolTip="{Binding [Close], Source={x:Static resx:LanguageManager.Instance}}">
										<Path Width="10" Height="10" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource WD.WindowCloseGeometry}" Fill="{DynamicResource WD.PrimaryTextSolidColorBrush}" Stretch="Fill" />
									</Button>
								</DockPanel>
							</controls:SmallPanel>
							<controls:SmallPanel Grid.Row="1" Margin="20">
								<DockPanel>
									<Path x:Name="PART_Path" Width="25" Height="25" Data="{StaticResource WD.InformationGeometry}" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" Stretch="Fill" />
									<TextBox x:Name="PART_Message" Width="Auto" MaxWidth="500" Padding="10,0" VerticalAlignment="Center" BorderThickness="0" FontSize="{DynamicResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" IsReadOnly="True" TextWrapping="Wrap" />
								</DockPanel>
							</controls:SmallPanel>
							<controls:SmallPanel Grid.Row="2" Margin="140,20,10,10" HorizontalAlignment="Right">
								<UniformGrid Height="38" Rows="1">
									<Button x:Name="PART_ButtonYes" Width="60" helpers:ElementHelper.CornerRadius="{Binding Path=(controls:WDMessageBox.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding [Yes], Source={x:Static resx:LanguageManager.Instance}}" Style="{DynamicResource WD.PrimaryButton}" Visibility="Collapsed" />
									<Button x:Name="PART_ButtonNo" Width="60" Margin="6,0,0,0" helpers:ElementHelper.CornerRadius="{Binding Path=(controls:WDMessageBox.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding [No], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed" />
									<Button x:Name="PART_ButtonOK" Width="60" Margin="6,0,0,0" helpers:ElementHelper.CornerRadius="{Binding Path=(controls:WDMessageBox.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding [OK], Source={x:Static resx:LanguageManager.Instance}}" Style="{DynamicResource WD.PrimaryButton}" />
									<Button x:Name="PART_ButtonCancel" Width="60" Margin="6,0,0,0" helpers:ElementHelper.CornerRadius="{Binding Path=(controls:WDMessageBox.ButtonCornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Content="{Binding [Cancel], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed" />
								</UniformGrid>
							</controls:SmallPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.WDMessageBox}" TargetType="{x:Type controls:WDMessageBox}" />
	<Style x:Key="WD.NormalLoading" TargetType="{x:Type controls:NormalLoading}">
		<Setter Property="Width" Value="40" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:NormalLoading}">
					<Viewbox Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<controls:SmallPanel>
							<controls:SmallPanel.Resources>
								<Storyboard x:Key="StarStoryboard" RepeatBehavior="Forever">
									<DoubleAnimation Storyboard.TargetName="PART_Ellipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:1.0" />
								</Storyboard>
							</controls:SmallPanel.Resources>
							<Ellipse Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" Stroke="{DynamicResource WD.BaseSolidColorBrush}" StrokeDashArray="100,100" StrokeThickness="2" />
							<Ellipse x:Name="PART_Ellipse" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" RenderTransformOrigin=".5,.5" Stretch="Uniform" Stroke="{DynamicResource WD.PrimaryPressedSolidColorBrush}" StrokeDashArray="{TemplateBinding StrokeArray}" StrokeThickness="2">
								<Ellipse.RenderTransform>
									<RotateTransform Angle="0" />
								</Ellipse.RenderTransform>
								<Ellipse.Triggers>
									<EventTrigger RoutedEvent="Loaded">
										<BeginStoryboard x:Name="LoadedBeginStoryboard" Storyboard="{StaticResource StarStoryboard}" />
									</EventTrigger>
									<EventTrigger RoutedEvent="Unloaded">
										<StopStoryboard BeginStoryboardName="LoadedBeginStoryboard" />
									</EventTrigger>
								</Ellipse.Triggers>
							</Ellipse>
						</controls:SmallPanel>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DefaultLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:DefaultLoading}">
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Width" Value="40" />
		<Setter Property="ArcThickness" Value="2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DefaultLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="WD.PlayStoryboard" RepeatBehavior="Forever">
							<DoubleAnimation RepeatBehavior="Forever" Storyboard.TargetName="PART_SmallPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="360" Duration="0:0:0.784" />
							<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Arc" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)">
								<SplineDoubleKeyFrame KeyTime="0" Value="0" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:0.666" Value="135" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:1.333" Value="270" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:1.999" Value="405" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:2.666" Value="540" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:3.333" Value="675" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:3.999" Value="810" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:4.666" Value="945" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:5.332" Value="1080" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Arc" Storyboard.TargetProperty="(shapes:Arc.StartAngle)">
								<SplineDoubleKeyFrame KeyTime="0" Value="-5" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:0.666" Value="-130" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:1.333" Value="-5" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetName="PART_Arc" Storyboard.TargetProperty="(shapes:Arc.EndAngle)">
								<SplineDoubleKeyFrame KeyTime="0" Value="5" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:0.666" Value="130" />
								<SplineDoubleKeyFrame KeySpline="0.4,0.0,0.2,1" KeyTime="0:0:1.333" Value="5" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel x:Name="PART_SmallPanel" RenderTransformOrigin=".5,.5">
						<controls:SmallPanel.RenderTransform>
							<RotateTransform />
						</controls:SmallPanel.RenderTransform>
						<shapes:Arc x:Name="PART_Arc" Width="{TemplateBinding ActualWidth}" Height="{TemplateBinding ActualHeight}" ArcThickness="{TemplateBinding ArcThickness}" EndAngle="5" Fill="{TemplateBinding BorderBrush}" RenderTransformOrigin=".5,.5" StartAngle="-5" Stretch="None" StrokeThickness="0">
							<shapes:Arc.RenderTransform>
								<RotateTransform />
							</shapes:Arc.RenderTransform>
						</shapes:Arc>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<EventTrigger RoutedEvent="Loaded">
							<BeginStoryboard Storyboard="{StaticResource WD.PlayStoryboard}" />
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.NormalLoading}" TargetType="{x:Type controls:NormalLoading}" />
	<Style BasedOn="{StaticResource WD.DefaultLoading}" TargetType="{x:Type controls:DefaultLoading}" />
	<Style x:Key="WD.Theme" TargetType="{x:Type controls:Theme}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Theme}">
					<ItemsControl ItemsSource="{Binding ItemsSource, RelativeSource={RelativeSource AncestorType=controls:Theme}}">
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<RadioButton Width="40" Height="40" Cursor="Hand" IsChecked="{Binding IsChecked}">
									<RadioButton.Style>
										<Style TargetType="{x:Type RadioButton}">
											<Setter Property="Template">
												<Setter.Value>
													<ControlTemplate TargetType="{x:Type RadioButton}">
														<Border x:Name="PART_Border" Padding="2" BorderBrush="{Binding Color}" BorderThickness="0">
															<controls:SmallPanel Background="{x:Null}">
																<Rectangle x:Name="PART_Rectangle" Fill="{Binding Color}" />
																<Path Width="12" Height="10" Margin="0,0,4,4" HorizontalAlignment="Right" VerticalAlignment="Bottom" Data="{StaticResource WD.CheckMarkGeometry}" Fill="{DynamicResource WD.BackgroundSolidColorBrush}" Stretch="Fill" Visibility="{Binding IsChecked, Converter={StaticResource WD.Bool2VisibilityConverter}}" />
															</controls:SmallPanel>
														</Border>
														<ControlTemplate.Triggers>
															<Trigger Property="IsMouseOver" Value="True">
																<Setter TargetName="PART_Rectangle" Property="Opacity" Value=".8" />
																<Setter TargetName="PART_Border" Property="BorderThickness" Value="1" />
															</Trigger>
															<Trigger Property="IsChecked" Value="True">
																<Setter TargetName="PART_Border" Property="BorderThickness" Value="1" />
															</Trigger>
														</ControlTemplate.Triggers>
													</ControlTemplate>
												</Setter.Value>
											</Setter>
										</Style>
									</RadioButton.Style>
								</RadioButton>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<WrapPanel helpers:PanelHelper.Spacing="4" />
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
					</ItemsControl>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.Theme}" TargetType="{x:Type controls:Theme}" />
	<Style x:Key="WD.GridSplitterPreviewStyle">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle Fill="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" Opacity=".6" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="DefaultGridSplitter" TargetType="{x:Type GridSplitter}">
		<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="PreviewStyle" Value="{StaticResource WD.GridSplitterPreviewStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type GridSplitter}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource DefaultGridSplitter}" TargetType="{x:Type GridSplitter}" />
	<Style x:Key="WD.DefaultLabel" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type Label}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Label}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultLabel}" TargetType="{x:Type Label}" />
	<Style x:Key="WD.DefaultRepeatButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type RepeatButton}">
		<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RepeatButton}">
					<controls:SmallPanel>
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" />
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseCaptured" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultRepeatButton}" TargetType="{x:Type RepeatButton}" />
	<Style TargetType="{x:Type ec:PathListBox}" x:Key="{x:Type ec:PathListBox}">
		<Setter Property="IsTabStop" Value="False" />
		<Setter Property="FrameworkElement.UseLayoutRounding" Value="False" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<ec:PathPanel />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ec:PathListBox}">
					<Grid>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ValidationStates">
								<VisualState x:Name="Valid" />
								<VisualState x:Name="InvalidUnfocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="InvalidFocused">
									<Storyboard>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="ValidationErrorElement">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<Visibility>Visible</Visibility>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
										<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsOpen" Storyboard.TargetName="validationTooltip">
											<DiscreteObjectKeyFrame KeyTime="0">
												<ObjectKeyFrame.Value>
													<sys:Boolean>True</sys:Boolean>
												</ObjectKeyFrame.Value>
											</DiscreteObjectKeyFrame>
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
						<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" CornerRadius="2">
							<ItemsPresenter />
						</Border>
						<Border Name="ValidationErrorElement" BorderBrush="#FFDB000C" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="2" Visibility="Collapsed">
							<ToolTipService.ToolTip>
								<ToolTip Name="validationTooltip" Placement="Right" Template="{StaticResource ValidationToolTipTemplate}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" PlacementTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}">
									<FrameworkElement.Triggers>
										<EventTrigger RoutedEvent="Canvas.Loaded">
											<BeginStoryboard>
												<Storyboard>
													<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="IsHitTestVisible" Storyboard.TargetName="validationTooltip">
														<DiscreteObjectKeyFrame KeyTime="0">
															<ObjectKeyFrame.Value>
																<sys:Boolean>true</sys:Boolean>
															</ObjectKeyFrame.Value>
														</DiscreteObjectKeyFrame>
													</ObjectAnimationUsingKeyFrames>
												</Storyboard>
											</BeginStoryboard>
										</EventTrigger>
									</FrameworkElement.Triggers>
								</ToolTip>
							</ToolTipService.ToolTip>
							<Grid Background="#00FFFFFF" HorizontalAlignment="Right" Height="10" Margin="0,-4,-4,0" VerticalAlignment="Top" Width="10">
								<Path Data="M1,0 L6,0 A2,2 0 0 1 8,2L8,7" Fill="#FFDC000C" Margin="-1,3,0,0" />
								<Path Data="M0,0 L2,0 L8,6 L8,8" Fill="#ffffff" Margin="-1,3,0,0" />
							</Grid>
						</Border>
					</Grid>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.AnimationAudio" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:AnimationAudio}">
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="35" />
		<Setter Property="Foreground" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="helpers:ElementHelper.CornerRadius" Value="3" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationAudio}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PlayStoryboard" RepeatBehavior="Forever">
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Path2" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Path3" Storyboard.TargetProperty="(Path.Visibility)">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Hidden}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="0:0:.3" Storyboard.TargetName="PART_Path2" Storyboard.TargetProperty="(Path.Visibility)" Duration="0:0:.4">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
							</ObjectAnimationUsingKeyFrames>
							<ObjectAnimationUsingKeyFrames BeginTime="0:0:.7" Storyboard.TargetName="PART_Path3" Storyboard.TargetProperty="(Path.Visibility)" Duration="0:0:.4">
								<DiscreteObjectKeyFrame KeyTime="0:0:0" Value="{x:Static Visibility.Visible}" />
							</ObjectAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border x:Name="PART_Border" Background="{TemplateBinding Background}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" UseLayoutRounding="True">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<StackPanel x:Name="PART_StackPanel" Width="20" Height="30" Margin="10,0" HorizontalAlignment="Left" Orientation="Horizontal" RenderTransformOrigin=".5,.5">
								<Path Width="4" Height="6" Data="{StaticResource WD.AudioOneGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Fill" />
								<Path x:Name="PART_Path2" Width="6" Margin="0,7" Data="{StaticResource WD.AudioTwoGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="Transparent" StrokeThickness="1.5" />
								<Path x:Name="PART_Path3" Width="8" Margin="-3,4" Data="{StaticResource WD.AudioThreeGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Fill" Stroke="Transparent" StrokeThickness="2" />
							</StackPanel>
							<TextBlock x:Name="PART_TextBlock" Grid.Column="1" VerticalAlignment="Center" FontSize="{DynamicResource WD.TitleFontSize}" Foreground="{TemplateBinding Foreground}">
								<Run x:Name="PART_RunTimeLength" />
							</TextBlock>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsPlay" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PlayBeginStoryboard" Storyboard="{StaticResource PlayStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PlayBeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsRight" Value="True">
							<Setter TargetName="PART_TextBlock" Property="Grid.Column" Value="0" />
							<Setter TargetName="PART_TextBlock" Property="HorizontalAlignment" Value="Right" />
							<Setter TargetName="PART_StackPanel" Property="Grid.Column" Value="1" />
							<Setter TargetName="PART_StackPanel" Property="HorizontalAlignment" Value="Right" />
							<Setter TargetName="PART_StackPanel" Property="RenderTransform">
								<Setter.Value>
									<TransformGroup>
										<RotateTransform Angle="180" />
									</TransformGroup>
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.AnimationAudio}" TargetType="{x:Type controls:AnimationAudio}" />
	<Style x:Key="WD.AnimationNavigationBar3DItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:AnimationNavigationBar3DItem}">
		<Setter Property="Width" Value="80" />
		<Setter Property="Height" Value="80" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationNavigationBar3DItem}">
					<Viewport3D Width="{TemplateBinding Height}" Height="{TemplateBinding Width}">
						<Viewport3D.Triggers>
							<EventTrigger RoutedEvent="MouseEnter">
								<BeginStoryboard>
									<Storyboard Storyboard.TargetName="axis3d" Storyboard.TargetProperty="Angle">
										<DoubleAnimation EasingFunction="{StaticResource WD.CubicEaseInOut}" To="90" Duration="00:00:1" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
							<EventTrigger RoutedEvent="MouseLeave">
								<BeginStoryboard>
									<Storyboard Storyboard.TargetName="axis3d" Storyboard.TargetProperty="Angle">
										<DoubleAnimation EasingFunction="{StaticResource WD.CubicEaseInOut}" To="0" Duration="00:00:1" />
									</Storyboard>
								</BeginStoryboard>
							</EventTrigger>
						</Viewport3D.Triggers>
						<Viewport3D.Camera>
							<OrthographicCamera LookDirection="0,0,-100" Position="0,0,100" UpDirection="0,1,0" />
						</Viewport3D.Camera>
						<Viewport3D.Children>
							<ModelVisual3D>
								<ModelVisual3D.Content>
									<AmbientLight Color="{DynamicResource WD.BackgroundColor}" />
								</ModelVisual3D.Content>
							</ModelVisual3D>
							<ContainerUIElement3D>
								<ContainerUIElement3D.Transform>
									<RotateTransform3D>
										<RotateTransform3D.Rotation>
											<AxisAngleRotation3D x:Name="axis3d" Angle="0" Axis="1 0 0" />
										</RotateTransform3D.Rotation>
									</RotateTransform3D>
								</ContainerUIElement3D.Transform>
								<Viewport2DVisual3D>
									<Viewport2DVisual3D.Material>
										<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
									</Viewport2DVisual3D.Material>
									<Viewport2DVisual3D.Geometry>
										<MeshGeometry3D Positions="-1,1,1    -1,-1,1   1,-1,1    1,1,1" TextureCoordinates="0,0   0,1     1,1  1,0" TriangleIndices="0 1 2 0 2 3" />
									</Viewport2DVisual3D.Geometry>
									<Border Width="110" Height="110" Background="{TemplateBinding Background}" CornerRadius="0,0,0,0">
										<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}" />
									</Border>
								</Viewport2DVisual3D>
								<Viewport2DVisual3D>
									<Viewport2DVisual3D.Material>
										<DiffuseMaterial Viewport2DVisual3D.IsVisualHostMaterial="True" />
									</Viewport2DVisual3D.Material>
									<Viewport2DVisual3D.Geometry>
										<MeshGeometry3D Positions="-1,1,1  1,1,1   1,1,-1   -1,1,-1" TextureCoordinates="0,0   0,1   1,1  1,0" TriangleIndices="0 1 2 0 2 3" />
									</Viewport2DVisual3D.Geometry>
									<Border Width="110" Height="110" Background="{TemplateBinding Fill}" CornerRadius="0,0,0,0" RenderTransformOrigin="0.5,0.5">
										<Border.RenderTransform>
											<TransformGroup>
												<RotateTransform Angle="90" />
											</TransformGroup>
										</Border.RenderTransform>
										<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Content="{Binding ContentBack, RelativeSource={RelativeSource AncestorType={x:Type controls:AnimationNavigationBar3DItem}}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}" />
									</Border>
								</Viewport2DVisual3D>
							</ContainerUIElement3D>
						</Viewport3D.Children>
					</Viewport3D>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.AnimationNavigationBar3D" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:AnimationNavigationBar3D}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:AnimationNavigationBar3D}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ScrollViewer VerticalScrollBarVisibility="Auto">
							<ItemsPresenter />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Columns="{Binding Items.Count, RelativeSource={RelativeSource AncestorType={x:Type controls:AnimationNavigationBar3D}}}" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.AnimationNavigationBar3DItem}" TargetType="{x:Type controls:AnimationNavigationBar3DItem}" />
	<Style BasedOn="{StaticResource WD.AnimationNavigationBar3D}" TargetType="{x:Type controls:AnimationNavigationBar3D}" />
	<Style x:Key="WD.BallLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:BallLoading}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BallLoading}">
					<Viewbox>
						<controls:SmallPanel x:Name="Part_BackGrid" Width="400" Height="140">
							<controls:SmallPanel.Effect>
								<DropShadowEffect BlurRadius="10" Opacity="0.8" ShadowDepth="5" Color="#ff6a27" />
							</controls:SmallPanel.Effect>
							<Canvas>
								<Ellipse x:Name="Part_Eillipse" Canvas.Left="20" Canvas.Top="50" Width="40" Height="40">
									<Ellipse.Fill>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<GradientStop Offset="0" Color="#ff9303" />
											<GradientStop Offset="1" Color="#ff8c09" />
										</LinearGradientBrush>
									</Ellipse.Fill>
								</Ellipse>
							</Canvas>
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<controls:SmallPanel x:Name="Part_EillpseDock1" Grid.Column="1" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse1" Width="40" Height="40" HorizontalAlignment="Center">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Offset="0" Color="#ff781a" />
												<GradientStop Offset="1" Color="#ff6a27" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock2" Grid.Column="2" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse2" Width="40" Height="40" HorizontalAlignment="Center">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Offset="0" Color="#ff5539" />
												<GradientStop Offset="1" Color="#ff4845" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock3" Grid.Column="3" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse3" Width="40" Height="40" HorizontalAlignment="Center">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Offset="0" Color="#ff3357" />
												<GradientStop Offset="1" Color="#ff2465" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_EillpseDock4" Grid.Column="4" RenderTransformOrigin="0,0.5">
									<Ellipse x:Name="Part_Eillipse4" Width="40" Height="40" HorizontalAlignment="Center">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
												<GradientStop Offset="0" Color="#ff097c" />
												<GradientStop Offset="1" Color="#ff0382" />
											</LinearGradientBrush>
										</Ellipse.Fill>
									</Ellipse>
								</controls:SmallPanel>
							</Grid>
						</controls:SmallPanel>
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.BallLoading}" TargetType="{x:Type controls:BallLoading}" />
	<ControlTemplate x:Key="WD.LampEffectEclipse" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampEclipse" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" CornerRadius="{TemplateBinding CornerRadius}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<ScaleTransform CenterX="0" CenterY="0" ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Setter TargetName="PART_LampEclipse" Property="Effect">
					<Setter.Value>
						<DropShadowEffect BlurRadius="25" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EffectColor}" />
					</Setter.Value>
				</Setter>
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard AutoReverse="True" RepeatBehavior="Forever">
							<DoubleAnimation BeginTime="0" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampEclipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0.8" To="1.1" Duration="0:0:1" />
							<DoubleAnimation BeginTime="0" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampEclipse" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0.8" To="1.1" Duration="0:0:1" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.LampEffectRipple" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampRipple_1" Background="Transparent" BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<ScaleTransform CenterX="0" CenterY="0" ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
					<Border x:Name="PART_LampRipple_2" Background="Transparent" BorderBrush="{TemplateBinding Background}" BorderThickness="1" CornerRadius="{TemplateBinding CornerRadius}" RenderTransformOrigin="0.5,0.5">
						<Border.RenderTransform>
							<ScaleTransform ScaleX="0.8" ScaleY="0.8" />
						</Border.RenderTransform>
					</Border>
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard AutoReverse="True" RepeatBehavior="Forever">
							<DoubleAnimation BeginTime="0" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampRipple_1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0.8" To="1.3" Duration="0:0:1" />
							<DoubleAnimation BeginTime="0" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampRipple_1" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0.8" To="1.3" Duration="0:0:1" />
							<DoubleAnimation BeginTime="0:0:0.4" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampRipple_2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="0.8" To="1.3" Duration="0:0:1" />
							<DoubleAnimation BeginTime="0:0:0.4" EasingFunction="{StaticResource WD.SineEaseOut}" Storyboard.TargetName="PART_LampRipple_2" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0.8" To="1.3" Duration="0:0:1" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="WD.LampEffectOuterGlow" TargetType="{x:Type controls:BreathLamp}">
		<controls:SmallPanel>
			<Viewbox>
				<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
					<Border x:Name="PART_LampOuterGlow" Margin="1" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" CornerRadius="{TemplateBinding CornerRadius}" RenderTransformOrigin="0.5,0.5">
						<Border.Effect>
							<DropShadowEffect x:Name="PART_LampOuterGlow_Effect" BlurRadius="0" ShadowDepth="0" Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=EffectColor}" />
						</Border.Effect>
					</Border>
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" />
				</controls:SmallPanel>
			</Viewbox>
			<ContentPresenter />
		</controls:SmallPanel>
		<ControlTemplate.Triggers>
			<Trigger Property="IsLampStart" Value="True">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard RepeatBehavior="Forever">
							<DoubleAnimation AutoReverse="True" BeginTime="0" EasingFunction="{StaticResource WD.SineEaseInOut}" Storyboard.TargetName="PART_LampOuterGlow_Effect" Storyboard.TargetProperty="BlurRadius" From="0" To="40" Duration="0:0:0.6" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="WD.BreathLamp" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:BreathLamp}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Height" Value="60" />
		<Setter Property="Width" Value="60" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="EffectColor" Value="{StaticResource WD.PrimaryNormalColor}" />
		<Style.Triggers>
			<Trigger Property="LampEffect" Value="Eclipse">
				<Setter Property="Template" Value="{StaticResource WD.LampEffectEclipse}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="Ripple">
				<Setter Property="Template" Value="{StaticResource WD.LampEffectRipple}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="OuterGlow">
				<Setter Property="Template" Value="{StaticResource WD.LampEffectOuterGlow}" />
			</Trigger>
			<Trigger Property="LampEffect" Value="Streamer">
				<Setter Property="Template" Value="{StaticResource WD.LampEffectStreamer}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.BreathLamp}" TargetType="{x:Type controls:BreathLamp}" />
	<Style x:Key="WD.MasterCarousel" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MasterCarousel}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MasterCarousel}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<Viewbox>
							<Canvas x:Name="PART_ContentDock" Width="900" Height="400" />
						</Viewbox>
						<StackPanel x:Name="PART_ButtonDock" Margin="0,210,0,0" HorizontalAlignment="Center" VerticalAlignment="Center" Orientation="Horizontal" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.EmphasizerCarousel" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:EmphasizerCarousel}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:EmphasizerCarousel}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<Canvas x:Name="PART_BackCanvas" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.EmphasizerCarousel}" TargetType="{x:Type controls:EmphasizerCarousel}" />
	<Style BasedOn="{StaticResource WD.MasterCarousel}" TargetType="{x:Type controls:MasterCarousel}" />
	<Style x:Key="WD.VerifyCode" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:VerifyCode}">
		<Setter Property="Background" Value="{x:Null}" />
		<Setter Property="Width" Value="100" />
		<Setter Property="Height" Value="40" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:VerifyCode}">
					<Image x:Name="PART_Image" Source="{TemplateBinding ImageSource}" Stretch="Fill" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.VerifyCode}" TargetType="{x:Type controls:VerifyCode}" />
	<Style x:Key="WD.CircularMenuItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:CircularMenuItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularMenuItem}">
					<controls:SmallPanel VerticalAlignment="Top">
						<controls:SmallPanel.RenderTransform>
							<RotateTransform x:Name="PART_RotateTransform" Angle="{TemplateBinding Angle}" CenterX="200" CenterY="200" />
						</controls:SmallPanel.RenderTransform>
						<Path x:Name="PART_Path" VerticalAlignment="Center" Data="{StaticResource WD.CircularGeometry}" Fill="{TemplateBinding BackgroundColor}" />
						<Image Width="40" Height="40" Margin="60,100,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" RenderTransformOrigin="0.5,0.5" Source="{TemplateBinding IconImage}">
							<Image.RenderTransform>
								<RotateTransform Angle="-70" />
							</Image.RenderTransform>
						</Image>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Path" Property="Fill" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.CircularMenu" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:CircularMenu}">
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="400" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularMenu}">
					<controls:SmallPanel>
						<ItemsControl x:Name="PART_ItemsControl" Width="{TemplateBinding Width}" Height="{TemplateBinding Height}" AlternationCount="{TemplateBinding AlternationCount}" ItemsSource="{TemplateBinding ItemsSource}">
							<ItemsControl.Clip>
								<EllipseGeometry x:Name="PART_EllipseGeometry" Center="200,200" RadiusX="0" RadiusY="0" />
							</ItemsControl.Clip>
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<controls:CircularMenuItem Angle="{Binding Angle}" BackgroundColor="{Binding Path=(ItemsControl.AlternationIndex), RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.IndexToColor}}" IconImage="{Binding IconImage}" MenuTxt="{Binding MenuTxt}" />
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<controls:SmallPanel />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
						<ToggleButton x:Name="PART_ToggleButton" Cursor="Hand">
							<ToggleButton.Template>
								<ControlTemplate TargetType="ToggleButton">
									<controls:SmallPanel>
										<Ellipse x:Name="PART_Ellipse" Width="100" Height="100" Fill="{StaticResource WD.PrimaryNormalSolidColorBrush}" />
										<controls:PathIcon x:Name="PART_Path" Width="20" Height="20" Foreground="{StaticResource WD.BackgroundSolidColorBrush}" Kind="Add" RenderTransformOrigin="0.5,0.5" />
									</controls:SmallPanel>
									<ControlTemplate.Triggers>
										<Trigger Property="IsChecked" Value="True">
											<Setter TargetName="PART_Path" Property="RenderTransform">
												<Setter.Value>
													<RotateTransform Angle="45" />
												</Setter.Value>
											</Setter>
										</Trigger>
									</ControlTemplate.Triggers>
								</ControlTemplate>
							</ToggleButton.Template>
						</ToggleButton>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.CircularMenuItem}" TargetType="{x:Type controls:CircularMenuItem}" />
	<Style BasedOn="{StaticResource WD.CircularMenu}" TargetType="{x:Type controls:CircularMenu}" />
	<Style x:Key="WD.CircularProgressBar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:CircularProgressBar}">
		<Setter Property="Maximum" Value="100" />
		<Setter Property="StrokeThickness" Value="10" />
		<Setter Property="Foreground" Value="{DynamicResource WD.InfoSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CircularProgressBar}">
					<controls:SmallPanel Width="{Binding ElementName=PART_Path, Path=ActualWidth}" Height="{Binding ElementName=PART_Path, Path=ActualHeight}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}">
						<Canvas>
							<Path x:Name="PART_Path" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BrushStrokeThickness}">
								<Path.Data>
									<PathGeometry>
										<PathFigure x:Name="PART_PathFigure">
											<ArcSegment x:Name="PART_ArcSegment" IsLargeArc="True" SweepDirection="Clockwise" />
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
							<Path Stroke="{TemplateBinding Background}" StrokeThickness="{TemplateBinding StrokeThickness}">
								<Path.Data>
									<PathGeometry>
										<PathFigure x:Name="PART_PathFigureAngle">
											<ArcSegment x:Name="PART_ArcSegmentAngle" IsLargeArc="{Binding Path=Angle, Converter={StaticResource WD.IsLargeConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType=ProgressBar}}" SweepDirection="Clockwise">
												<ArcSegment.Point>
													<MultiBinding Converter="{StaticResource WD.PrConverter}">
														<Binding Path="Angle" RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
														<Binding Path="Size" RelativeSource="{RelativeSource FindAncestor, AncestorType=ProgressBar}" />
													</MultiBinding>
												</ArcSegment.Point>
											</ArcSegment>
										</PathFigure>
									</PathGeometry>
								</Path.Data>
							</Path>
						</Canvas>
						<TextBlock x:Name="PART_TextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{Binding Path=Value, StringFormat={}{0}%, RelativeSource={RelativeSource TemplatedParent}}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.CircularProgressBar}" TargetType="{x:Type controls:CircularProgressBar}" />
	<Style x:Key="WD.EdgeLight" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:EdgeLight}">
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="Padding" Value="20" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:EdgeLight}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="EdgeLightStoryboard">
							<DoubleAnimation Storyboard.TargetName="PART_Top" Storyboard.TargetProperty="ScaleX" To="1" Duration="00:00:0.5" />
							<DoubleAnimation BeginTime="00:00:0.5" Storyboard.TargetName="PART_Right" Storyboard.TargetProperty="ScaleY" To="1" Duration="00:00:0.5" />
							<DoubleAnimation BeginTime="00:00:01" Storyboard.TargetName="PART_Bottom" Storyboard.TargetProperty="ScaleX" To="1" Duration="00:00:.5" />
							<DoubleAnimation BeginTime="00:00:01.5" Storyboard.TargetName="PART_Left" Storyboard.TargetProperty="ScaleY" To="1" Duration="00:00:.5" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel>
						<DockPanel LastChildFill="False">
							<Rectangle Height="{TemplateBinding LineSize}" DockPanel.Dock="Top" Fill="{TemplateBinding BorderBrush}">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Top" ScaleX="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle Width="{TemplateBinding LineSize}" DockPanel.Dock="Right" Fill="{TemplateBinding BorderBrush}">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Right" ScaleY="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle Height="{TemplateBinding LineSize}" DockPanel.Dock="Bottom" Fill="{TemplateBinding BorderBrush}" RenderTransformOrigin="1,1">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Bottom" ScaleX="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
							<Rectangle Width="{TemplateBinding LineSize}" DockPanel.Dock="Left" Fill="{TemplateBinding BorderBrush}" RenderTransformOrigin="1,1">
								<Rectangle.RenderTransform>
									<ScaleTransform x:Name="PART_Left" ScaleY="0" />
								</Rectangle.RenderTransform>
							</Rectangle>
						</DockPanel>
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsAnimation" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="beginAnimation" Storyboard="{StaticResource EdgeLightStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="beginAnimation" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.EdgeLight}" TargetType="{x:Type controls:EdgeLight}" />
	<Style x:Key="WD.WaitLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:WaitLoading}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:WaitLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PART_Storyboard" DesiredFrameRate="30" RepeatBehavior="Forever">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_RedEllipase" Storyboard.TargetProperty="(Canvas.Left)">
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:0.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:1" Value="100" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:1.5" Value="50" />
								<EasingDoubleKeyFrame KeyTime="0:0:2" Value="50" />
								<EasingDoubleKeyFrame KeyTime="0:0:2.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:3" Value="0" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_GreenEllipase" Storyboard.TargetProperty="(Canvas.Left)">
								<EasingDoubleKeyFrame KeyTime="0:0:0.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:1" Value="0" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:1.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:2" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:2.5" Value="50" />
								<EasingDoubleKeyFrame KeyTime="0:0:3" Value="50" />
							</DoubleAnimationUsingKeyFrames>
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="PART_OrangeEllipase" Storyboard.TargetProperty="(Canvas.Left)">
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:0.5" Value="50" />
								<EasingDoubleKeyFrame KeyTime="0:0:1" Value="50" />
								<EasingDoubleKeyFrame KeyTime="0:0:1.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:2" Value="0" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:2.5" Value="50" />
								<EasingDoubleKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:3" Value="100" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Canvas Width="100" Height="20" CacheMode="BitmapCache">
						<Ellipse x:Name="PART_RedEllipase" Canvas.Left="0" Width="20" Height="20" Fill="{StaticResource WD.DangerSolidColorBrush}" />
						<Ellipse x:Name="PART_GreenEllipase" Canvas.Left="50" Width="20" Height="20" Fill="{StaticResource WD.SuccessSolidColorBrush}" />
						<Ellipse x:Name="PART_OrangeEllipase" Canvas.Left="100" Width="20" Height="20" Fill="{StaticResource WD.WarningSolidColorBrush}" />
					</Canvas>
					<ControlTemplate.Triggers>
						<Trigger Property="IsLoading" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboard" Storyboard="{StaticResource PART_Storyboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_BeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.CycleLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:CycleLoading}">
		<Setter Property="Foreground" Value="White" />
		<Setter Property="FontSize" Value="30" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CycleLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard_LoadRunning" DesiredFrameRate="30" RepeatBehavior="Forever" SpeedRatio="2">
							<DoubleAnimation BeginTime="0" Storyboard.TargetName="Part_Cycle_Rotate" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" Storyboard.TargetName="Part_Cycle_Rotate1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel CacheMode="BitmapCache">
						<Viewbox>
							<controls:SmallPanel Width="400" Height="400">
								<controls:SmallPanel x:Name="Part_Cycle_Rotate1" RenderTransformOrigin="0.5,0.5">
									<controls:SmallPanel.RenderTransform>
										<RotateTransform />
									</controls:SmallPanel.RenderTransform>
									<Ellipse Margin="0,50,0,50">
										<Ellipse.Fill>
											<LinearGradientBrush>
												<GradientStop Offset="0" Color="White" />
												<GradientStop Offset="1" Color="White" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="40" />
										</Ellipse.Effect>
									</Ellipse>
									<Ellipse Margin="50,0,50,0">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Offset="0.4" Color="White" />
												<GradientStop Offset="1" Color="White" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="40" />
										</Ellipse.Effect>
									</Ellipse>
								</controls:SmallPanel>
								<controls:SmallPanel x:Name="Part_Cycle_Rotate" RenderTransformOrigin="0.5,0.5">
									<controls:SmallPanel.RenderTransform>
										<RotateTransform />
									</controls:SmallPanel.RenderTransform>
									<Ellipse Margin="0,50,0,50">
										<Ellipse.Fill>
											<LinearGradientBrush>
												<GradientStop Offset="0" Color="#d495f1" />
												<GradientStop Offset="1" Color="#87d3f7" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="15" />
										</Ellipse.Effect>
									</Ellipse>
									<Ellipse Margin="50,0,50,0">
										<Ellipse.Fill>
											<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
												<GradientStop Offset="0" Color="#f173ac" />
												<GradientStop Offset="1" Color="#33a3dc" />
											</LinearGradientBrush>
										</Ellipse.Fill>
										<Ellipse.Effect>
											<BlurEffect Radius="15" />
										</Ellipse.Effect>
									</Ellipse>
								</controls:SmallPanel>
								<Ellipse Margin="33" Fill="Black">
									<Ellipse.Effect>
										<DropShadowEffect BlurRadius="20" ShadowDepth="0" Color="White" />
									</Ellipse.Effect>
								</Ellipse>
							</controls:SmallPanel>
						</Viewbox>
						<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<TextBlock Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="20" Text="{TemplateBinding LoadTitle}" />
							<ContentPresenter Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}" />
							<TextBlock Grid.Row="2" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="15" Text="{TemplateBinding ValueDescription}" />
						</Grid>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsLoading" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Storyboard_LoadRunning" Storyboard="{StaticResource Storyboard_LoadRunning}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Storyboard_LoadRunning" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.RollLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:RollLoading}">
		<Setter Property="ForegroundColor" Value="{StaticResource WD.DangerColor}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:RollLoading}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PART_Storyboard" DesiredFrameRate="30" RepeatBehavior="Forever">
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="2" Storyboard.TargetName="PART_Border1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="4" Storyboard.TargetName="PART_Border2" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="6" Storyboard.TargetName="PART_Border3" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="8" Storyboard.TargetName="PART_Border4" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="10" Storyboard.TargetName="PART_Border5" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="12" Storyboard.TargetName="PART_Border6" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="14" Storyboard.TargetName="PART_Border7" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<DoubleAnimation BeginTime="0" RepeatBehavior="Forever" SpeedRatio="16" Storyboard.TargetName="PART_Border8" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="0:0:5" />
							<ColorAnimationUsingKeyFrames RepeatBehavior="Forever" Storyboard.TargetProperty="ForegroundColor" Duration="0:0:5">
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:0" Value="Red" />
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:1" Value="Blue" />
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:2" Value="Yellow" />
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:3" Value="Green" />
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:4" Value="Aqua" />
								<EasingColorKeyFrame EasingFunction="{StaticResource WD.PowerEaseInOut}" KeyTime="0:0:5" Value="Red" />
							</ColorAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid CacheMode="BitmapCache">
						<Grid.RowDefinitions>
							<RowDefinition />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Viewbox>
							<controls:SmallPanel>
								<Border x:Name="PART_Border1" Width="160" Height="160" BorderThickness="0,5,0,0" CornerRadius="80" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border2" Width="140" Height="140" BorderThickness="0,5,0,0" CornerRadius="70" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border3" Width="120" Height="120" BorderThickness="0,5,0,0" CornerRadius="60" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border4" Width="100" Height="100" BorderThickness="0,5,0,0" CornerRadius="50" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border5" Width="80" Height="80" BorderThickness="0,5,0,0" CornerRadius="40" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border6" Width="60" Height="60" BorderThickness="0,5,0,0" CornerRadius="30" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border7" Width="40" Height="40" BorderThickness="0,5,0,0" CornerRadius="20" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
								<Border x:Name="PART_Border8" Width="20" Height="20" BorderThickness="0,5,0,0" CornerRadius="10" RenderTransformOrigin="0.5,0.5">
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
											<LinearGradientBrush.GradientStops>
												<GradientStop Offset="0.5" Color="{Binding RelativeSource={RelativeSource Mode=TemplatedParent}, Path=ForegroundColor}" />
												<GradientStop Offset="0.5" Color="Transparent" />
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
									<Border.RenderTransform>
										<RotateTransform />
									</Border.RenderTransform>
								</Border>
							</controls:SmallPanel>
						</Viewbox>
						<ContentPresenter Grid.Row="1" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsLoading" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Roll_Storyboard" Storyboard="{StaticResource PART_Storyboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="Roll_Storyboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.RingLoading" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="controls:RingLoading">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:RingLoading">
					<ControlTemplate.Resources>
						<Storyboard x:Key="PART_Storyboard" DesiredFrameRate="30" RepeatBehavior="Forever">
							<DoubleAnimation Storyboard.TargetName="PART_Ring1" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="-495" Duration="0:0:1.5" />
							<DoubleAnimation Storyboard.TargetName="PART_Ring2" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="585" Duration="0:0:1.5" />
							<DoubleAnimation Storyboard.TargetName="PART_Ring3" Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)" To="-315" Duration="0:0:1.5" />
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid CacheMode="BitmapCache">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<Viewbox HorizontalAlignment="Center" VerticalAlignment="Center">
							<Border Width="100" Height="100" Padding="10">
								<controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring1" Width="60" Height="60" HorizontalAlignment="Center" VerticalAlignment="Top" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<RotateTransform Angle="-135" />
										</controls:SmallPanel.RenderTransform>
										<Ellipse RenderTransformOrigin="0.5,0.5" Stroke="Red" StrokeDashArray="23 100" StrokeThickness="2" />
										<Border Width="10" Height="10" Margin="0,0,-4,0" HorizontalAlignment="Right" Background="Red" CornerRadius="10">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Red" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring2" Width="60" Height="60" HorizontalAlignment="Left" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<RotateTransform Angle="225" />
										</controls:SmallPanel.RenderTransform>
										<Ellipse Stroke="Purple" StrokeDashArray="23 100" StrokeThickness="2" />
										<Border Width="10" Height="10" Margin="0,0,0,-4" HorizontalAlignment="Center" VerticalAlignment="Bottom" Background="Purple" CornerRadius="10">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="Purple" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
									<controls:SmallPanel x:Name="PART_Ring3" Width="60" Height="60" HorizontalAlignment="Right" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,0.5">
										<controls:SmallPanel.RenderTransform>
											<RotateTransform Angle="45" />
										</controls:SmallPanel.RenderTransform>
										<Ellipse Stroke="#0fb8b2" StrokeDashArray="23 100" StrokeThickness="2" />
										<Border Width="10" Height="10" Margin="0,0,-4,0" HorizontalAlignment="Right" Background="#0fb8b2" CornerRadius="10">
											<Border.Effect>
												<DropShadowEffect BlurRadius="10" ShadowDepth="0" Color="#0fb8b2" />
											</Border.Effect>
										</Border>
									</controls:SmallPanel>
								</controls:SmallPanel>
							</Border>
						</Viewbox>
						<StackPanel Grid.Row="1" Grid.ColumnSpan="2" Margin="10">
							<TextBlock Margin="0,0,0,15" HorizontalAlignment="Center" Text="Loading..." />
							<TextBlock Margin="0,0,0,15" HorizontalAlignment="Center" Text="{TemplateBinding Description}" />
							<TextBlock HorizontalAlignment="Center" FontSize="{StaticResource WD.TitleFontSize}" FontWeight="Bold" Text="{TemplateBinding Progress}" />
						</StackPanel>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsLoading" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="PART_BeginStoryboard" Storyboard="{StaticResource PART_Storyboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="PART_BeginStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.WaitLoading}" TargetType="{x:Type controls:WaitLoading}" />
	<Style BasedOn="{StaticResource WD.CycleLoading}" TargetType="{x:Type controls:CycleLoading}" />
	<Style BasedOn="{StaticResource WD.RollLoading}" TargetType="{x:Type controls:RollLoading}" />
	<Style BasedOn="{StaticResource WD.RingLoading}" TargetType="{x:Type controls:RingLoading}" />
	<Style x:Key="WD.PageListBoxStyleKey" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Padding" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
						<ScrollViewer Padding="{TemplateBinding Padding}" Focusable="False">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsGrouping" Value="True">
							<Setter Property="ScrollViewer.CanContentScroll" Value="False" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.PageListBoxItemStyleKey" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type ListBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Padding" Value="5,0" />
		<Setter Property="MinWidth" Value="32" />
		<Setter Property="Margin" Value="3,0" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBoxItem}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" RecognizesAccessKey="True" TextElement.Foreground="{TemplateBinding Foreground}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<DataTrigger Binding="{Binding .}" Value="···">
				<Setter Property="IsEnabled" Value="False" />
				<Setter Property="FontWeight" Value="Bold" />
			</DataTrigger>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBorderBrushSolidColorBrush}" />
				<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
				<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsSelected" Value="True">
				<Setter Property="Background" Value="{DynamicResource WD.PrimaryPressedSolidColorBrush}" />
				<Setter Property="TextElement.Foreground" Value="{DynamicResource WD.WindowForegroundColorBrush}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<ControlTemplate x:Key="WD.PART_DrawArrow" TargetType="{x:Type Control}">
		<Grid>
			<Grid.ColumnDefinitions>
				<ColumnDefinition Width="*" />
				<ColumnDefinition Width="15" />
			</Grid.ColumnDefinitions>
			<Path Height="8" Margin="0,0,-7,0" HorizontalAlignment="Left" VerticalAlignment="Center" Data="{StaticResource WD.ArrowBranchesGeometry}" Fill="{TemplateBinding Background}" Stretch="Fill" />
			<Path Grid.Column="1" Width="15" Height="15" Data="{StaticResource WD.ArrowGeometry}" Fill="{TemplateBinding Background}" Stretch="Fill" />
		</Grid>
	</ControlTemplate>
	<Style x:Key="WD.ScreenCutRectangleStyle" TargetType="{x:Type Rectangle}">
		<Setter Property="Fill" Value="{DynamicResource WD.BlackSolidColorBrush}" />
		<Setter Property="Opacity" Value=".3" />
	</Style>
	<Style x:Key="WD.ScreenCutEllipseStyle" TargetType="{x:Type Ellipse}">
		<Setter Property="Width" Value="15" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Fill" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Stroke" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="StrokeThickness" Value="2" />
	</Style>
	<Style x:Key="WD.ScreenCut" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:ScreenCut}">
		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="ResizeMode" Value="NoResize" />
		<Setter Property="Topmost" Value="True" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ScreenCut}">
					<AdornerDecorator>
						<Canvas x:Name="PART_Canvas" Width="{Binding Source={x:Static SystemParameters.PrimaryScreenWidth}}" Height="{Binding Source={x:Static SystemParameters.PrimaryScreenHeight}}">
							<Rectangle x:Name="PART_RectangleLeft" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleTop" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleRight" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
							<Rectangle x:Name="PART_RectangleBottom" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
							<Border x:Name="PART_Border" Background="Transparent" BorderBrush="{DynamicResource WD.PrimaryNormalSolidColorBrush}" BorderThickness="2" Cursor="SizeAll" />
							<Border x:Name="PART_EditBar" Panel.ZIndex="99" Background="{DynamicResource WD.BackgroundSolidColorBrush}" Effect="{StaticResource WD.PopupShadowDepth}" Visibility="Hidden">
								<WrapPanel Margin="10,5" VerticalAlignment="Center">
									<RadioButton x:Name="PART_RadioButtonRectangle" Margin="4,0" Style="{DynamicResource WD.PathRadioButton}" ToolTip="{Binding [Rectangle], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="18" Height="18" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Kind="Rectangle" />
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonEllipse" Margin="4,0" Style="{DynamicResource WD.PathRadioButton}" ToolTip="{Binding [Ellipse], Source={x:Static resx:LanguageManager.Instance}}">
										<Ellipse Width="19" Height="19" SnapsToDevicePixels="True" Stroke="{DynamicResource WD.RegularTextSolidColorBrush}" StrokeThickness="1.5" UseLayoutRounding="True" />
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonArrow" Margin="4,0" Style="{DynamicResource WD.PathRadioButton}" ToolTip="{Binding [Arrow], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="18" Height="18" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Kind="ArrowRightTop" />
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonInk" Margin="4,0" Style="{DynamicResource WD.PathRadioButton}" ToolTip="{Binding [Ink], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="18" Height="18" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Kind="Ink" />
									</RadioButton>
									<RadioButton x:Name="PART_RadioButtonText" Margin="4,0" Style="{DynamicResource WD.PathRadioButton}" ToolTip="{Binding [Text], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="18" Height="18" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Kind="Text" />
									</RadioButton>
									<Rectangle Width="1" Height="18" Margin="4,0" Stroke="{DynamicResource WD.SecondaryTextSolidColorBrush}" />
									<Button x:Name="PART_ButtonSave" Margin="4,0" Style="{DynamicResource WD.PathButton}" ToolTip="{Binding [Save], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="18" Height="18" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" Kind="Save" />
									</Button>
									<Button x:Name="PART_ButtonCancel" Margin="4,0" Style="{DynamicResource WD.PathButton}" ToolTip="{Binding [Cancel], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="14" Height="14" Foreground="{StaticResource WD.DangerSolidColorBrush}" Kind="Cancel" />
									</Button>
									<Button x:Name="PART_ButtonComplete" Margin="4,0" Style="{DynamicResource WD.PathButton}" ToolTip="{Binding [Complete], Source={x:Static resx:LanguageManager.Instance}}">
										<controls:PathIcon Width="20" Height="15" Foreground="{StaticResource WD.SuccessSolidColorBrush}" Kind="Complete" />
									</Button>
								</WrapPanel>
							</Border>
							<Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" VerticalOffset="13">
								<Border x:Name="PART_PopupBorder" Margin="10,30,10,10" Background="{DynamicResource WD.BackgroundSolidColorBrush}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}">
									<controls:SmallPanel>
										<Path Width="10" Margin="0,-8,0,0" VerticalAlignment="Top" Data="{StaticResource WD.UpperTriangleGeometry}" Fill="{DynamicResource WD.BackgroundSolidColorBrush}" SnapsToDevicePixels="True" Stretch="Uniform" UseLayoutRounding="True" />
										<WrapPanel x:Name="PART_WrapPanelColor" Margin="10" VerticalAlignment="Center">
											<RadioButton Margin="4,0" Background="Red" IsChecked="True" Style="{DynamicResource WD.ColorRadioButton}" />
											<RadioButton Margin="4,0" Background="DodgerBlue" Style="{DynamicResource WD.ColorRadioButton}" />
											<RadioButton Margin="4,0" Background="LimeGreen" Style="{DynamicResource WD.ColorRadioButton}" />
											<RadioButton Margin="4,0" Background="Yellow" Style="{DynamicResource WD.ColorRadioButton}" />
										</WrapPanel>
									</controls:SmallPanel>
								</Border>
							</Popup>
						</Canvas>
					</AdornerDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.ScreenCut}" TargetType="{x:Type controls:ScreenCut}" />
	<Style x:Key="WD.SpotLight" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:SpotLight}">
		<Setter Property="Background" Value="#222222" />
		<Setter Property="FontSize" Value="60" />
		<Setter Property="FontFamily" Value="Arial Black" />
		<Setter Property="FontWeight" Value="Bold" />
		<Setter Property="Foreground" Value="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:SpotLight}">
					<controls:SmallPanel x:Name="PART_Canvas" Background="{TemplateBinding Background}">
						<TextBlock x:Name="PART_TextBlockBottom" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding DefaultForeground}" Text="{TemplateBinding Text}" />
						<TextBlock x:Name="PART_TextBlockTop" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" FontWeight="{TemplateBinding FontWeight}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}">
							<TextBlock.Clip>
								<EllipseGeometry x:Name="PART_EllipseGeometry">
									<EllipseGeometry.Transform>
										<TranslateTransform />
									</EllipseGeometry.Transform>
								</EllipseGeometry>
							</TextBlock.Clip>
						</TextBlock>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.SpotLight}" TargetType="{x:Type controls:SpotLight}" />
	<Style x:Key="WD.DrawerMenuToggleButton" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="ToggleButton">
		<Setter Property="IsChecked" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="Opacity" Value="0.8" />
				<Setter Property="Template">
					<Setter.Value>
						<ControlTemplate TargetType="{x:Type ToggleButton}">
							<Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource WD.BlackSolidColorBrush}" BorderThickness="1">
								<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
							</Border>
						</ControlTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="ButtonFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Border>
						<Rectangle Margin="2" Stroke="{StaticResource WD.ButtonFocusVisualColor}" StrokeDashArray="1 2" StrokeThickness="1" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DrawerMenuItemButtonStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="Button">
		<Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
		<Setter Property="MinHeight" Value="23" />
		<Setter Property="Height" Value="44" />
		<Setter Property="MinWidth" Value="75" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" CornerRadius="0">
						<ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RecognizesAccessKey="True" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="Transparent " />
						</Trigger>
						<Trigger Property="IsDefaulted" Value="True">
							<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="Border" Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter TargetName="Border" Property="Background" Value="Transparent" />
							<Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
							<Setter Property="Foreground" Value="Transparent" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DrawerMenuItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="controls:DrawerMenuItem">
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Foreground" Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerMenu}}, Path=MenuItemForeground}" />
		<Setter Property="SelectionIndicatorColor" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:DrawerMenuItem">
					<Button x:Name="PART_Button" HorizontalContentAlignment="Stretch" VerticalContentAlignment="Stretch" Command="{TemplateBinding SelectionCommand}" Style="{StaticResource WD.DrawerMenuItemButtonStyle}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="3" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<Grid Grid.ColumnSpan="2">
								<Grid Width="300">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="45" />
										<ColumnDefinition />
									</Grid.ColumnDefinitions>
									<ContentPresenter Grid.Column="0" Margin="10,5,5,5" ContentSource="Icon" />
									<TextBlock Grid.Column="1" Margin="10,0,0,0" HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{StaticResource WD.TitleFontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Text}" TextWrapping="Wrap" />
								</Grid>
							</Grid>
							<Rectangle x:Name="PART_ItemSelectedIndicator" Grid.Column="0" Fill="{TemplateBinding SelectionIndicatorColor}" Visibility="Collapsed" />
						</Grid>
					</Button>
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter TargetName="PART_Button" Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_ItemSelectedIndicator" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
						<Trigger SourceName="PART_Button" Property="IsPressed" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<BooleanAnimationUsingKeyFrames Storyboard.TargetProperty="IsSelected">
											<DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
										</BooleanAnimationUsingKeyFrames>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DrawerMenu" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="controls:DrawerMenu">
		<Setter Property="Width" Value="50" />
		<Setter Property="IsOpen" Value="True" />
		<Setter Property="MenuIconColor" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
		<Setter Property="SelectionIndicatorColor" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="MenuItemForeground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="SelectedIndex" Value="0" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:DrawerMenu">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition />
						</Grid.RowDefinitions>
						<ToggleButton x:Name="PART_ToggleButton" Width="50" Height="40" HorizontalAlignment="Left" VerticalAlignment="Top" Background="#333" IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:DrawerMenu}}, Path=IsOpen}" Style="{StaticResource WD.DrawerMenuToggleButton}">
							<Path x:Name="PART_Path" Width="20" HorizontalAlignment="Center" VerticalAlignment="Center" Data="{StaticResource WD.MenuGeometry}" Fill="{TemplateBinding MenuIconColor}" Stretch="Uniform" />
						</ToggleButton>
						<ItemsPresenter x:Name="ItemsPresenter" Grid.Row="1" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsOpen" Value="False">
							<Setter TargetName="PART_Path" Property="Data" Value="{StaticResource WD.ReturnGeometry}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsOpen" Value="False">
				<Trigger.EnterActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Width" To="180" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.EnterActions>
				<Trigger.ExitActions>
					<BeginStoryboard>
						<Storyboard>
							<DoubleAnimation Storyboard.TargetProperty="Width" To="50" Duration="0:0:0.2" />
						</Storyboard>
					</BeginStoryboard>
				</Trigger.ExitActions>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.DrawerMenuItem}" TargetType="{x:Type controls:DrawerMenuItem}" />
	<Style BasedOn="{StaticResource WD.DrawerMenu}" TargetType="{x:Type controls:DrawerMenu}" />
	<Style x:Key="WD.CropAvatar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="controls:CropAvatar">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CropAvatar}">
					<Canvas x:Name="PART_Canvas" ClipToBounds="True">
						<Image x:Name="PART_Image" Cursor="SizeAll" />
						<Path x:Name="PART_Layout" Width="200" Height="200" Fill="{DynamicResource WD.BlackSolidColorBrush}" Opacity=".5">
							<Path.Data>
								<CombinedGeometry GeometryCombineMode="Xor">
									<CombinedGeometry.Geometry1>
										<RectangleGeometry Rect="0,0,200,200" />
									</CombinedGeometry.Geometry1>
									<CombinedGeometry.Geometry2>
										<EllipseGeometry Center="100,100" RadiusX="100" RadiusY="100" />
									</CombinedGeometry.Geometry2>
								</CombinedGeometry>
							</Path.Data>
						</Path>
						<controls:SmallPanel x:Name="PART_Grid" Width="200" Height="200">
							<Button x:Name="PART_ReplaceButton" Width="40" Height="40" HorizontalAlignment="Right" VerticalAlignment="Top" Style="{StaticResource WD.PathButton}" ToolTip="{Binding [Replace], Source={x:Static resx:LanguageManager.Instance}}" Visibility="Collapsed">
								<controls:PathIcon Width="15" Height="15" Foreground="{StaticResource WD.PrimaryNormalSolidColorBrush}" Kind="Replace" />
							</Button>
							<Button x:Name="PART_AddButton" Width="40" Height="40" Style="{StaticResource WD.PathButton}" ToolTip="{Binding [Select], Source={x:Static resx:LanguageManager.Instance}}">
								<controls:PathIcon Width="20" Height="20" Foreground="{StaticResource WD.PrimaryNormalSolidColorBrush}" Kind="Add" />
							</Button>
						</controls:SmallPanel>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.CropAvatar}" TargetType="{x:Type controls:CropAvatar}" />
	<Style x:Key="WD.StarrySky" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:StarrySky}">
		<Setter Property="Background" Value="{StaticResource WD.StarrySkyRadialGradientBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:StarrySky}">
					<controls:SmallPanel Background="{TemplateBinding Background}">
						<controls:SmallPanel x:Name="PART_GridLineContainer" />
						<Canvas x:Name="PART_CanvasStarContainer" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.StarrySky}" TargetType="{x:Type controls:StarrySky}" />
	<Style x:Key="WD.BubblleControl" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="controls:BubblleControl">
		<Setter Property="Width" Value="400" />
		<Setter Property="Height" Value="400" />
		<Setter Property="Background" Value="{StaticResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{StaticResource WD.SecondaryTextSolidColorBrush}" />
		<Setter Property="BorderBackground" Value="{StaticResource WD.BaseSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="controls:BubblleControl">
					<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<Border x:Name="PART_Border" Margin="45" Background="{TemplateBinding BorderBackground}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="400">
							<Ellipse Margin="20" Fill="{TemplateBinding Background}" />
						</Border>
						<Ellipse x:Name="PART_Ellipse" Width="26" Height="26" Margin="0,35,0,0" VerticalAlignment="Top" Fill="{TemplateBinding EarthBackground}" RenderTransformOrigin=".5,.5">
							<Ellipse.RenderTransform>
								<RotateTransform x:Name="PART_EllipseRotateTransform" />
							</Ellipse.RenderTransform>
							<Ellipse.Triggers>
								<EventTrigger RoutedEvent="Loaded">
									<BeginStoryboard>
										<Storyboard>
											<DoubleAnimation RepeatBehavior="Forever" Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)" From="0" To="360" Duration="00:00:13" />
										</Storyboard>
									</BeginStoryboard>
								</EventTrigger>
							</Ellipse.Triggers>
						</Ellipse>
						<ItemsControl x:Name="PART_ListBox" ItemsSource="{TemplateBinding ItemsSource}">
							<ItemsControl.ItemTemplate>
								<DataTemplate>
									<controls:SmallPanel>
										<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
											<Ellipse Fill="{Binding Bg}" Opacity=".4" />
											<Ellipse Stroke="{Binding Bg}" StrokeThickness=".8" />
										</controls:SmallPanel>
										<TextBlock Padding="10,0" HorizontalAlignment="Center" VerticalAlignment="Center">
											<Hyperlink Command="{x:Static controls:BubblleControl.ClickCommand}" CommandParameter="{Binding Text}" FontWeight="Normal" Foreground="{Binding Bg}">
												<TextBlock Text="{Binding Text}" TextAlignment="Center" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text}" />
											</Hyperlink>
										</TextBlock>
									</controls:SmallPanel>
								</DataTemplate>
							</ItemsControl.ItemTemplate>
							<ItemsControl.ItemsPanel>
								<ItemsPanelTemplate>
									<controls:BubblleCanvas />
								</ItemsPanelTemplate>
							</ItemsControl.ItemsPanel>
						</ItemsControl>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.BubblleControl}" TargetType="{x:Type controls:BubblleControl}" />
	<Style x:Key="WD.Magnifier" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:Magnifier}">
		<Setter Property="HorizontalAlignment" Value="Left" />
		<Setter Property="VerticalAlignment" Value="Top" />
		<Setter Property="IsHitTestVisible" Value="False" />
		<Setter Property="Width" Value="200" />
		<Setter Property="Height" Value="200" />
		<Setter Property="BorderThickness" Value="8" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Magnifier}">
					<Canvas Name="PART_Canvas">
						<Border x:Name="PART_Border" Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}">
							<Ellipse>
								<Ellipse.Fill>
									<VisualBrush x:Name="PART_VisualBrush" ViewboxUnits="Absolute" Visual="{Binding ParentTarget, RelativeSource={RelativeSource TemplatedParent}}" />
								</Ellipse.Fill>
							</Ellipse>
						</Border>
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.MagnifierDesktop" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MagnifierDesktop}">
		<Setter Property="WindowState" Value="Maximized" />
		<Setter Property="WindowStyle" Value="None" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MagnifierDesktop}">
					<AdornerDecorator>
						<Border x:Name="PART_Border" controls:Magnifier.Add="{x:Static controls:Magnifier.Default}" />
					</AdornerDecorator>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.Magnifier}" TargetType="{x:Type controls:Magnifier}" />
	<Style BasedOn="{StaticResource WD.MagnifierDesktop}" TargetType="{x:Type controls:MagnifierDesktop}" />
	<Style x:Key="WD.StepItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:StepItem}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="0,6,0,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:StepItem}">
					<StackPanel Orientation="{Binding Orientation, RelativeSource={RelativeSource AncestorType=controls:Step}, Converter={StaticResource WD.OrientationConverter}}">
						<controls:SmallPanel>
							<Ellipse Name="PART_Ellipse" Width="45" Height="30" HorizontalAlignment="Center" Fill="{DynamicResource WD.BackgroundSolidColorBrush}" />
							<Border Width="30" Height="30" HorizontalAlignment="Center" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="15">
								<controls:SmallPanel>
									<TextBlock Name="PART_Index" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type controls:StepItem}}, Converter={StaticResource WD.StepIndexConverter}}" />
									<Path Name="PART_PathComplete" Width="12" Height="12" Data="{StaticResource WD.CompleteGeometry}" Fill="{TemplateBinding Foreground}" Stretch="Uniform" Visibility="Collapsed" />
								</controls:SmallPanel>
							</Border>
						</controls:SmallPanel>
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" ContentTemplate="{Binding ItemTemplate, RelativeSource={RelativeSource AncestorType=controls:Step}}" TextElement.FontWeight="Black" TextElement.Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding Orientation, RelativeSource={RelativeSource AncestorType=controls:Step}}" Value="Vertical">
							<Setter Property="VerticalContentAlignment" Value="Center" />
							<Setter TargetName="PART_Ellipse" Property="Width" Value="30" />
							<Setter TargetName="PART_Ellipse" Property="Height" Value="45" />
							<Setter Property="Padding" Value="6,0,0,0" />
						</DataTrigger>
						<Trigger Property="Status" Value="Waiting">
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
							<Setter TargetName="PART_PathComplete" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_Index" Property="Visibility" Value="Visible" />
							<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
						<Trigger Property="Status" Value="InProgress">
							<Setter Property="Foreground" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_PathComplete" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_Index" Property="Visibility" Value="Visible" />
							<Setter Property="Background" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="Status" Value="Complete">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
							<Setter TargetName="PART_PathComplete" Property="Visibility" Value="Visible" />
							<Setter TargetName="PART_Index" Property="Visibility" Value="Collapsed" />
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.Step" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:Step}">
		<Setter Property="ItemContainerStyle" Value="{StaticResource WD.StepItem}" />
		<Setter Property="VerticalContentAlignment" Value="Top" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Step}">
					<controls:SmallPanel>
						<ProgressBar x:Name="PART_ProgressBar" Height="1" Margin="0,18" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Value="{Binding StepIndex, RelativeSource={RelativeSource AncestorType=controls:Step}}" />
						<ItemsPresenter />
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="Orientation" Value="Vertical">
							<Setter TargetName="PART_ProgressBar" Property="Width" Value="1" />
							<Setter TargetName="PART_ProgressBar" Property="Orientation" Value="Vertical" />
							<Setter TargetName="PART_ProgressBar" Property="Margin" Value="16,0" />
							<Setter Property="HorizontalContentAlignment" Value="Left" />
							<Setter Property="VerticalContentAlignment" Value="Stretch" />
							<Setter TargetName="PART_ProgressBar" Property="RenderTransformOrigin" Value=".5,.5" />
							<Setter TargetName="PART_ProgressBar" Property="RenderTransform">
								<Setter.Value>
									<RotateTransform Angle="180" />
								</Setter.Value>
							</Setter>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<UniformGrid Rows="1" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="Orientation" Value="Vertical">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<UniformGrid Columns="1" />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.StepItem}" TargetType="{x:Type controls:StepItem}" />
	<Style BasedOn="{StaticResource WD.Step}" TargetType="{x:Type controls:Step}" />
	<Style x:Key="WD.DefaultMultiSelectComboBoxItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MultiSelectComboBoxItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Margin" Value="1,0" />
		<Setter Property="helpers:ElementHelper.CornerRadius" Value="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Padding" Value="{Binding Padding, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MultiSelectComboBoxItem}">
					<Border x:Name="PART_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="true">
						<CheckBox MinHeight="{TemplateBinding MinHeight}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" helpers:ElementHelper.CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Foreground="{TemplateBinding Foreground}" IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}">
							<ContentPresenter x:Name="PART_ContentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}" />
						</CheckBox>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.DefaultBackgroundSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.MultiSelectComboBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MultiSelectComboBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="SelectionMode" Value="Multiple" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource WD.DefaultMultiSelectComboBoxItem}" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MultiSelectComboBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel SnapsToDevicePixels="True">
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" />
						<TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="1" Background="Transparent" Focusable="True" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" IsReadOnly="True" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxTextBox}" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
						<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent" FontSize="{StaticResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" IsHitTestVisible="False" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" TextTrimming="CharacterEllipsis" Visibility="Collapsed" />
						<ToggleButton x:Name="PART_ToggleButton" Background="{TemplateBinding Background}" ClickMode="Release" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxToggleButton}" />
						<Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_ToggleButton}" StaysOpen="False">
							<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="24,2,24,24" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
								<controls:SmallPanel.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</controls:SmallPanel.RenderTransform>
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
								<Grid Margin="0,8" ClipToBounds="False">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<controls:MultiSelectComboBoxItem x:Name="PART_CheckBoxAll" Content="{TemplateBinding SelectAllContent}" Style="{TemplateBinding ItemContainerStyle}" Visibility="{TemplateBinding IsSelectAllActive,&#xD;&#xA;                                                                     Converter={StaticResource WD.Bool2VisibilityConverter}}" />
									<ScrollViewer x:Name="DropDownScrollViewer" Grid.Row="1" ScrollViewer.VerticalScrollBarVisibility="Auto">
										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
									</ScrollViewer>
								</Grid>
							</controls:SmallPanel>
						</Popup>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
							<Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
						<Trigger Property="Text" Value="">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="Text" Value="{x:Null}">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.MultiSelectComboBox}" TargetType="{x:Type controls:MultiSelectComboBox}" />
	<Style x:Key="WD.MaskControl" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MaskControl}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Background" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MaskControl}">
					<controls:SmallPanel>
						<Border x:Name="PART_Border" Width="{TemplateBinding Height}" Height="{TemplateBinding Height}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{TemplateBinding CornerRadius}" Opacity=".7" />
						<ContentPresenter Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.MaskControl}" TargetType="{x:Type controls:MaskControl}" />
	<Style x:Key="WD.MultiSelectionSearchComboBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MultiSelectionSearchComboBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.CanContentScroll" Value="True" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MultiSelectionSearchComboBox}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel SnapsToDevicePixels="True">
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" />
						<TextBox Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="1" Background="Transparent" Focusable="True" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" IsReadOnly="True" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxTextBox}" Text="{Binding Text, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
						<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent" FontSize="{StaticResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" IsHitTestVisible="False" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" Visibility="Collapsed" />
						<ToggleButton x:Name="PART_ToggleButton" Background="{TemplateBinding Background}" ClickMode="Release" Focusable="False" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxToggleButton}" />
						<Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_ToggleButton}" StaysOpen="False">
							<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="24,2,24,24" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
								<controls:SmallPanel.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</controls:SmallPanel.RenderTransform>
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
								<Grid Margin="0,8" ClipToBounds="False">
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<TextBox x:Name="PART_TextBox" Margin="6,0" helpers:ElementHelper.CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" helpers:ElementHelper.IsClear="True" helpers:ElementHelper.Watermark="{Binding SearchWatermark, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" />
									<CheckBox x:Name="PART_SelectAll" Grid.Row="1" Margin="4" helpers:ElementHelper.CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Content="{TemplateBinding SelectAllContent}" Visibility="{TemplateBinding IsSelectAllActive,&#xD;&#xA;                                                                     Converter={StaticResource WD.Bool2VisibilityConverter}}" />
									<controls:MultiSelectListBox x:Name="PART_Selector" Grid.Row="2" Margin="1,0" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" helpers:ElementHelper.CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" ItemContainerStyle="{StaticResource WD.DefaultMultiSelectComboBoxItem}" ItemsSource="{TemplateBinding ItemsSource}" ScrollViewer.CanContentScroll="{Binding ScrollViewer.CanContentScroll, RelativeSource={RelativeSource TemplatedParent}}" ScrollViewer.HorizontalScrollBarVisibility="{Binding ScrollViewer.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" SelectedValuePath="{TemplateBinding SelectedValuePath}" SelectionMode="Multiple" Style="{StaticResource WD.DefaultListBox}" />
									<controls:MultiSelectListBox x:Name="PART_SearchSelector" Grid.Row="2" Margin="1,0" Padding="{TemplateBinding Padding}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" helpers:ElementHelper.CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" DisplayMemberPath="{TemplateBinding DisplayMemberPath}" ItemContainerStyle="{StaticResource WD.DefaultMultiSelectComboBoxItem}" ItemsSource="{TemplateBinding ItemsSourceSearch}" ScrollViewer.CanContentScroll="{Binding ScrollViewer.CanContentScroll, RelativeSource={RelativeSource TemplatedParent}}" ScrollViewer.HorizontalScrollBarVisibility="{Binding ScrollViewer.HorizontalScrollBarVisibility, RelativeSource={RelativeSource TemplatedParent}}" SelectedValuePath="{TemplateBinding SelectedValuePath}" SelectionMode="Multiple" Style="{StaticResource WD.DefaultListBox}" Visibility="Collapsed" />
								</Grid>
							</controls:SmallPanel>
						</Popup>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
							<Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
						<Trigger Property="Text" Value="">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="Text" Value="{x:Null}">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</Trigger>
						<Trigger Property="IsSelectAllActive" Value="False">
							<Setter TargetName="PART_TextBox" Property="Margin" Value="6,2" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.MultiSelectionSearchComboBox}" TargetType="{x:Type controls:MultiSelectionSearchComboBox}" />
	<Style x:Key="WD.BreadCrumbBarItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:BreadCrumbBarItem}">
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="6,0" />
		<Setter Property="FontSize" Value="{StaticResource WD.MediumFontSize}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BreadCrumbBarItem}">
					<StackPanel Orientation="Horizontal">
						<Path Name="PART_PathSymbol" Width="9" Height="9" Data="{StaticResource WD.ChevronRightGeometry}" Fill="{DynamicResource WD.PlaceholderTextSolidColorBrush}" IsHitTestVisible="False" Stretch="Uniform">
							<Path.Visibility>
								<MultiBinding Converter="{StaticResource WD.BreadCrumbBarConvertr}">
									<Binding RelativeSource="{RelativeSource AncestorType=ListBoxItem}" />
									<Binding Path="SelectedIndex" RelativeSource="{RelativeSource AncestorType=ListBox}" />
								</MultiBinding>
							</Path.Visibility>
						</Path>
						<ContentPresenter x:Name="PART_ContentPresenter" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" TextElement.Foreground="{TemplateBinding Foreground}" />
					</StackPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryMouseOverSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.BreadCrumbBar" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:BreadCrumbBar}">
		<Setter Property="Height" Value="40" />
		<Setter Property="Margin" Value="5" />
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<VirtualizingStackPanel Orientation="Horizontal" />
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="ItemContainerStyle" Value="{StaticResource WD.BreadCrumbBarItem}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:BreadCrumbBar}">
					<Border Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<ScrollViewer Grid.Column="1" HorizontalScrollBarVisibility="Auto">
							<ItemsPresenter x:Name="ItemsHost" />
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.BreadCrumbBar}" TargetType="{x:Type controls:BreadCrumbBar}" />
	<Style x:Key="WD.CropImage" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:CropImage}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:CropImage}">
					<Canvas x:Name="PART_Canvas">
						<Rectangle x:Name="PART_RectangleLeft" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
						<Rectangle x:Name="PART_RectangleTop" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
						<Rectangle x:Name="PART_RectangleRight" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
						<Rectangle x:Name="PART_RectangleBottom" Style="{DynamicResource WD.ScreenCutRectangleStyle}" />
						<Border x:Name="PART_Border" Background="Transparent" BorderBrush="{DynamicResource WD.PrimaryNormalSolidColorBrush}" BorderThickness="2" Cursor="SizeAll" Visibility="Collapsed" />
					</Canvas>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.CropImage}" TargetType="{x:Type controls:CropImage}" />
	<Style x:Key="WD.MessageListBoxItem" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:MessageListBoxItem}">
		<Setter Property="FontSize" Value="{DynamicResource WD.NormalFontSize}" />
		<Setter Property="Foreground" Value="{DynamicResource WD.RegularTextSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="helpers:ListBoxItemExtensions.AutoRemoveOnOpacityZero" Value="True" />
		<Setter Property="Width" Value="300" />
		<Setter Property="Height" Value="Auto" />
		<Setter Property="Padding" Value="10" />
		<Setter Property="Margin" Value="4,2" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:MessageListBoxItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard_Close" DesiredFrameRate="30">
							<DoubleAnimation Storyboard.TargetName="PART_SmallPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.2" />
							<DoubleAnimation BeginTime="0:0:0.2" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0" />
						</Storyboard>
						<Storyboard x:Key="Storyboard_Loaded" DesiredFrameRate="30">
							<DoubleAnimation Storyboard.TargetName="PART_SmallPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="0" To="1" Duration="0:0:0.2" />
							<DoubleAnimation Storyboard.TargetName="PART_SmallPanel" Storyboard.TargetProperty="Opacity" From=".1" To="1" Duration="0:0:0.2" />
							<DoubleAnimation BeginTime="0:0:10" Storyboard.TargetName="PART_SmallPanel" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleY)" From="1" To="0" Duration="0:0:0.2" />
							<DoubleAnimation BeginTime="0:0:10" Storyboard.TargetProperty="Opacity" From="1" To="0" Duration="0:0:0.2" />
							<DoubleAnimation Storyboard.TargetName="PART_Rectangle" Storyboard.TargetProperty="(UIElement.RenderTransform).(ScaleTransform.ScaleX)" From="1" To="0" Duration="0:0:10" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel x:Name="PART_SmallPanel" Margin="{TemplateBinding Margin}" CacheMode="BitmapCache" RenderTransformOrigin=".5,0">
						<controls:SmallPanel.RenderTransform>
							<ScaleTransform />
						</controls:SmallPanel.RenderTransform>
						<Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.NormalShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
						<Border Padding="{TemplateBinding Padding}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="*" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<DockPanel x:Name="PART_DockPanel" Grid.Column="0">
									<Path x:Name="PART_Path" Width="15" Height="15" Data="{StaticResource WD.InformationGeometry}" Fill="{DynamicResource WD.PrimaryNormalSolidColorBrush}" Stretch="Fill" />
									<TextBlock Grid.Column="1" Margin="5,0,0,0" VerticalAlignment="Center" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" Text="{TemplateBinding Content}" TextWrapping="Wrap" />
								</DockPanel>
								<Button x:Name="PART_CloseButton" Grid.Column="2" Width="25" Height="25" Margin="0,2,4,0" HorizontalAlignment="Right" helpers:ElementHelper.IsRound="True" Style="{StaticResource WD.NormalButton}" ToolTip="{Binding [Close], Source={x:Static resx:LanguageManager.Instance}}">
									<controls:PathIcon Width="10" Height="10" Foreground="{DynamicResource WD.SecondaryTextSolidColorBrush}" Kind="WindowClose" />
								</Button>
							</Grid>
						</Border>
						<Rectangle x:Name="PART_Rectangle" Height="2" VerticalAlignment="Bottom" Fill="{Binding ElementName=PART_Path, Path=Fill}" RenderTransformOrigin="0,0">
							<Rectangle.RenderTransform>
								<ScaleTransform ScaleX="1" />
							</Rectangle.RenderTransform>
						</Rectangle>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="MessageType" Value="Warning">
							<Setter TargetName="PART_Path" Property="Data" Value="{StaticResource WD.WarningGeometry}" />
							<Setter TargetName="PART_Path" Property="Fill" Value="{StaticResource WD.WarningSolidColorBrush}" />
							<Setter Property="Foreground" Value="{StaticResource WD.WarningSolidColorBrush}" />
						</Trigger>
						<Trigger Property="MessageType" Value="Error">
							<Setter TargetName="PART_Path" Property="Data" Value="{StaticResource WD.ErrorGeometry}" />
							<Setter TargetName="PART_Path" Property="Fill" Value="{StaticResource WD.DangerSolidColorBrush}" />
							<Setter Property="Foreground" Value="{StaticResource WD.DangerSolidColorBrush}" />
						</Trigger>
						<Trigger Property="MessageType" Value="Information">
							<Setter TargetName="PART_Path" Property="Data" Value="{StaticResource WD.InformationGeometry}" />
							<Setter TargetName="PART_Path" Property="Fill" Value="{StaticResource WD.SuccessSolidColorBrush}" />
							<Setter Property="Foreground" Value="{StaticResource WD.SuccessSolidColorBrush}" />
						</Trigger>
						<Trigger Property="MessageType" Value="Question">
							<Setter TargetName="PART_Path" Property="Data" Value="{StaticResource WD.QuestionGeometry}" />
							<Setter TargetName="PART_Path" Property="Fill" Value="{StaticResource WD.NormalSolidColorBrush}" />
							<Setter Property="Foreground" Value="{StaticResource WD.NormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsCenter" Value="True">
							<Setter TargetName="PART_DockPanel" Property="HorizontalAlignment" Value="Center" />
						</Trigger>
						<EventTrigger RoutedEvent="Button.Click" SourceName="PART_CloseButton">
							<BeginStoryboard x:Name="BeginStoryboardClose" Storyboard="{StaticResource Storyboard_Close}" />
						</EventTrigger>
						<EventTrigger RoutedEvent="Loaded">
							<BeginStoryboard x:Name="BeginStoryboardLoaded" Storyboard="{StaticResource Storyboard_Loaded}" />
						</EventTrigger>
						<EventTrigger RoutedEvent="Unloaded">
							<StopStoryboard BeginStoryboardName="BeginStoryboardLoaded" />
							<StopStoryboard BeginStoryboardName="BeginStoryboardClose" />
						</EventTrigger>
						<Trigger Property="Opacity" Value="0">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.MessageListBoxItem}" TargetType="{x:Type controls:MessageListBoxItem}" />
	<Style BasedOn="{StaticResource WD.MessageListBox}" TargetType="{x:Type controls:MessageListBox}" />
	<Style x:Key="WD.PathIcon" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:PathIcon}">
		<Setter Property="Padding" Value="0" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Height" Value="16" />
		<Setter Property="VerticalAlignment" Value="Center" />
		<Setter Property="HorizontalAlignment" Value="Center" />
		<Setter Property="Foreground">
			<Setter.Value>
				<Binding Path="Foreground" RelativeSource="{RelativeSource Mode=FindAncestor, AncestorType={x:Type Control}}" />
			</Setter.Value>
		</Setter>
		<Setter Property="Width" Value="16" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:PathIcon}">
					<Viewbox Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalAlignment}" VerticalAlignment="{TemplateBinding VerticalAlignment}" UseLayoutRounding="True">
						<Path x:Name="PART_Path" Data="{TemplateBinding Data}" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Stretch="Uniform" UseLayoutRounding="False" />
					</Viewbox>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.MiniPathIcon" BasedOn="{StaticResource WD.PathIcon}" TargetType="{x:Type controls:PathIcon}">
		<Setter Property="Height" Value="10" />
		<Setter Property="Width" Value="7" />
	</Style>
	<Style BasedOn="{StaticResource WD.PathIcon}" TargetType="{x:Type controls:PathIcon}" />
	<Style x:Key="WD.NumericBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:NumericBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Disabled" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="FocusVisualStyle" Value="{x:Null}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:NumericBox}">
					<controls:SmallPanel Width="{TemplateBinding Width}" Height="{TemplateBinding Height}">
						<Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<TextBox x:Name="PART_TextBox" MinHeight="{TemplateBinding MinHeight}" Padding="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="Center" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}" helpers:TextBoxHelper.IsEnterUpdateEnabled="True" Background="{x:Null}" BorderThickness="0" FocusVisualStyle="{x:Null}" Focusable="{TemplateBinding Focusable}" FontFamily="{TemplateBinding FontFamily}" FontSize="{TemplateBinding FontSize}" Foreground="{TemplateBinding Foreground}" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" InputMethod.IsInputMethodEnabled="False" IsReadOnly="{TemplateBinding IsReadOnly}" IsTabStop="{TemplateBinding IsTabStop}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Style="{x:Null}" TabIndex="{TemplateBinding TabIndex}" TextAlignment="{TemplateBinding TextAlignment}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}" />
								<Grid Grid.Column="1" Width="{TemplateBinding UpDownButtonsWidth}">
									<Grid.RowDefinitions>
										<RowDefinition />
										<RowDefinition Height="1" />
										<RowDefinition />
									</Grid.RowDefinitions>
									<RepeatButton x:Name="PART_NumericUp" Grid.Row="0" Margin="0,1,1,0" Padding="0" Command="{x:Static controls:NumericBox.IncreaseCommand}" Delay="{TemplateBinding Delay}" IsTabStop="False" Style="{StaticResource WD.DefaultRepeatButton}">
										<controls:PathIcon Kind="ChevronUp" Style="{StaticResource WD.MiniPathIcon}" />
									</RepeatButton>
									<RepeatButton x:Name="PART_NumericDown" Grid.Row="2" Margin="0,0,1,1" Padding="0" Command="{x:Static controls:NumericBox.DecreaseCommand}" Delay="{TemplateBinding Delay}" IsTabStop="False" Style="{StaticResource WD.DefaultRepeatButton}">
										<controls:PathIcon Kind="ChevronDown" Style="{StaticResource WD.MiniPathIcon}" />
									</RepeatButton>
								</Grid>
							</Grid>
						</Border>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger Property="UpDownButtonsWidth" Value="0">
							<Setter TargetName="PART_NumericDown" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_NumericUp" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="IsReadOnly" Value="True">
							<Setter Property="Focusable" Value="False" />
							<Setter TargetName="PART_NumericDown" Property="IsEnabled" Value="False" />
							<Setter TargetName="PART_NumericUp" Property="IsEnabled" Value="False" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.NumericBox}" TargetType="{x:Type controls:NumericBox}" />
	<Style x:Key="WD.ColorPickerSlider" TargetType="{x:Type Slider}">
		<Setter Property="Background" Value="{StaticResource WD.ColorPickerRainbowBrush}" />
		<Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
		<Setter Property="Orientation" Value="Horizontal" />
		<Setter Property="Height" Value="15" />
		<Setter Property="Margin" Value="4,0" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Slider}">
					<controls:SmallPanel>
						<Border MaxWidth="{TemplateBinding MaxWidth}" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" CornerRadius="2" />
						<Track x:Name="PART_Track" Orientation="{TemplateBinding Orientation}">
							<Track.DecreaseRepeatButton>
								<RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource WD.ColorPickerSliderRepeatButtonBaseStyle}" />
							</Track.DecreaseRepeatButton>
							<Track.IncreaseRepeatButton>
								<RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource WD.ColorPickerSliderRepeatButtonBaseStyle}" />
							</Track.IncreaseRepeatButton>
							<Track.Thumb>
								<Thumb x:Name="Thumb" Width="15" Height="15" Focusable="False" OverridesDefaultStyle="True" Template="{StaticResource WD.ColorPickerSliderThumbTemplate}">
									<Thumb.Effect>
										<DropShadowEffect Opacity=".6" ShadowDepth="0" />
									</Thumb.Effect>
								</Thumb>
							</Track.Thumb>
						</Track>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.ColorPicker" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:ColorPicker}">
		<Setter Property="Width" Value="260" />
		<Setter Property="Height" Value="200" />
		<Setter Property="Margin" Value="2" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:ColorPicker}">
					<Border Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.RowDefinitions>
								<RowDefinition />
								<RowDefinition Height="Auto" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>
							<Canvas x:Name="PART_Canvas" Margin="1,1,1,0" ClipToBounds="True">
								<Canvas.Background>
									<DrawingBrush>
										<DrawingBrush.Drawing>
											<DrawingGroup>
												<GeometryDrawing>
													<GeometryDrawing.Brush>
														<LinearGradientBrush EndPoint="1,0">
															<GradientStop Offset="0" Color="White" />
															<GradientStop Offset="1" Color="{Binding HueColor, RelativeSource={RelativeSource TemplatedParent}}" />
														</LinearGradientBrush>
													</GeometryDrawing.Brush>
													<GeometryDrawing.Geometry>
														<RectangleGeometry Rect="0,0,5,5" />
													</GeometryDrawing.Geometry>
												</GeometryDrawing>
												<GeometryDrawing>
													<GeometryDrawing.Brush>
														<LinearGradientBrush EndPoint="0,1">
															<GradientStop Offset="0" Color="#00000000" />
															<GradientStop Offset="1" Color="{StaticResource WD.BlackColor}" />
														</LinearGradientBrush>
													</GeometryDrawing.Brush>
													<GeometryDrawing.Geometry>
														<RectangleGeometry Rect="0,0,5,5" />
													</GeometryDrawing.Geometry>
												</GeometryDrawing>
											</DrawingGroup>
										</DrawingBrush.Drawing>
									</DrawingBrush>
								</Canvas.Background>
								<Thumb x:Name="PART_Thumb" Width="15" Height="15" Background="Transparent" BorderBrush="White" BorderThickness="3">
									<Thumb.Template>
										<ControlTemplate TargetType="{x:Type Thumb}">
											<controls:SmallPanel>
												<Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource WD.HalfValueConverter}}" SnapsToDevicePixels="True">
													<Border.Effect>
														<DropShadowEffect Opacity=".6" ShadowDepth="0" />
													</Border.Effect>
												</Border>
											</controls:SmallPanel>
										</ControlTemplate>
									</Thumb.Template>
								</Thumb>
							</Canvas>
							<Grid Grid.Row="1" Margin="6,5,6,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Ellipse Width="25" Height="25" Margin="0,0,4,0" Fill="{TemplateBinding SelectedColor,&#xD;&#xA;                                                           Converter={StaticResource WD.ColorToBrushConverter}}">
									<Ellipse.Effect>
										<DropShadowEffect Opacity=".6" ShadowDepth="0" />
									</Ellipse.Effect>
								</Ellipse>
								<Slider Name="PART_HueSlider" Grid.Column="1" Width="Auto" IsMoveToPointEnabled="True" LargeChange="0.01" Maximum="1" SmallChange="0.01" Style="{StaticResource WD.ColorPickerSlider}" Value="1" />
							</Grid>
							<Grid Grid.Row="2" Margin="4" VerticalAlignment="Center">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<Grid.Resources>
									<Style TargetType="{x:Type StackPanel}">
										<Setter Property="Margin" Value="4,0" />
									</Style>
									<Style x:Key="WD.TextBoxColorPicker" BasedOn="{StaticResource WD.DefaultTextBox}" TargetType="{x:Type TextBox}">
										<Setter Property="VerticalContentAlignment" Value="Center" />
										<Setter Property="TextAlignment" Value="Center" />
										<Setter Property="Width" Value="50" />
									</Style>
									<Style BasedOn="{StaticResource WD.NumericBox}" TargetType="{x:Type controls:NumericBox}">
										<Setter Property="VerticalContentAlignment" Value="Center" />
										<Setter Property="TextAlignment" Value="Center" />
										<Setter Property="Width" Value="50" />
										<Setter Property="UpDownButtonsWidth" Value="0" />
										<Setter Property="Maximum" Value="255" />
										<Setter Property="Minimum" Value="0" />
									</Style>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="HorizontalAlignment" Value="Center" />
										<Setter Property="Foreground" Value="{DynamicResource WD.PrimaryTextSolidColorBrush}" />
										<Setter Property="FontSize" Value="10" />
									</Style>
								</Grid.Resources>
								<Button Name="PART_Button" Grid.Column="0" Width="30" Height="30" Margin="0,0,4,0" helpers:ElementHelper.IsRound="True" Style="{StaticResource WD.NormalButton}">
									<controls:PathIcon Kind="UnfoldMore" />
								</Button>
								<UniformGrid Grid.Column="1" Rows="1" Visibility="{Binding ColorType, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorTypeToVisibilityConverter}, ConverterParameter={x:Static controls:ColorTypeEnum.RGB}}">
									<StackPanel>
										<controls:NumericBox Value="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorToRedConverter}}" />
										<TextBlock Text="R" />
									</StackPanel>
									<StackPanel>
										<controls:NumericBox Value="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorToGreenConverter}}" />
										<TextBlock Text="G" />
									</StackPanel>
									<StackPanel>
										<controls:NumericBox Value="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorToBlueConverter}}" />
										<TextBlock Text="B" />
									</StackPanel>
								</UniformGrid>
								<UniformGrid Grid.Column="1" Rows="1" Visibility="{Binding ColorType, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorTypeToVisibilityConverter}, ConverterParameter={x:Static controls:ColorTypeEnum.HSL}}">
									<StackPanel>
										<TextBox helpers:TextBoxHelper.AllowOnlyNumericInput="True" helpers:TextBoxHelper.IsEnterUpdateEnabled="True" helpers:TextBoxHelper.MaxValue="360" helpers:TextBoxHelper.MinValue="0" helpers:TextBoxHelper.SelectAllOnClick="True" Style="{StaticResource WD.TextBoxColorPicker}" Text="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.HToColorConverter}}" />
										<TextBlock Text="H" />
									</StackPanel>
									<StackPanel Grid.Column="1">
										<TextBox helpers:TextBoxHelper.IsEnterUpdateEnabled="True" helpers:TextBoxHelper.SelectAllOnClick="True" Style="{StaticResource WD.TextBoxColorPicker}" Text="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.SToColorConverter}}" />
										<TextBlock Text="S" />
									</StackPanel>
									<StackPanel Grid.Column="2">
										<TextBox helpers:TextBoxHelper.IsEnterUpdateEnabled="True" helpers:TextBoxHelper.SelectAllOnClick="True" Style="{StaticResource WD.TextBoxColorPicker}" Text="{Binding SelectedColor, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.LToColorConverter}}" />
										<TextBlock Text="L" />
									</StackPanel>
								</UniformGrid>
								<StackPanel Grid.Column="1" Margin="12,0" Visibility="{Binding ColorType, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorTypeToVisibilityConverter}, ConverterParameter={x:Static controls:ColorTypeEnum.HEX}}">
									<TextBox helpers:TextBoxHelper.IsEnterUpdateEnabled="True" helpers:TextBoxHelper.SelectAllOnClick="True" MaxLength="9" Text="{Binding SelectedColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource WD.ColorToStringConverter}}" TextAlignment="Center" />
									<TextBlock Text="HEX" />
								</StackPanel>
							</Grid>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.ColorPicker}" TargetType="{x:Type controls:ColorPicker}" />
	<Style x:Key="WD.IPEditBox" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:IPEditBox}">
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:IPEditBox}">
					<ControlTemplate.Resources>
						<Style BasedOn="{StaticResource WD.DefaultTextBox}" TargetType="{x:Type TextBox}">
							<Setter Property="BorderThickness" Value="0" />
							<Setter Property="helpers:TextBoxHelper.AllowOnlyNumericInput" Value="True" />
							<Setter Property="helpers:TextBoxHelper.MaxValue" Value="255" />
							<Setter Property="helpers:TextBoxHelper.MinValue" Value="0" />
							<Setter Property="VerticalContentAlignment" Value="Center" />
							<Setter Property="HorizontalContentAlignment" Value="Center" />
						</Style>
						<Style TargetType="TextBlock">
							<Setter Property="Text" Value="." />
							<Setter Property="VerticalAlignment" Value="Center" />
						</Style>
					</ControlTemplate.Resources>
					<Border x:Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<ScrollViewer HorizontalScrollBarVisibility="Auto">
							<Grid>
								<Grid.ColumnDefinitions>
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition />
								</Grid.ColumnDefinitions>
								<TextBox x:Name="PART_TextBox1" />
								<TextBlock Grid.Column="1" />
								<TextBox x:Name="PART_TextBox2" Grid.Column="2" />
								<TextBlock Grid.Column="3" />
								<TextBox x:Name="PART_TextBox3" Grid.Column="4" />
								<TextBlock Grid.Column="5" />
								<TextBox x:Name="PART_TextBox4" Grid.Column="6" />
							</Grid>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsKeyboardFocused" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsKeyboardFocused" Value="True" />
								<Condition Property="IsMouseOver" Value="False" />
							</MultiTrigger.Conditions>
							<Setter Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</MultiTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.IPEditBox}" TargetType="{x:Type controls:IPEditBox}" />
	<ControlTemplate x:Key="WD.TimePickerToggleButton" TargetType="{x:Type ToggleButton}">
		<Border x:Name="PART_Border" Padding="6,0" BorderThickness="0" SnapsToDevicePixels="true">
			<Grid Background="Transparent">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="30" />
				</Grid.ColumnDefinitions>
				<Rectangle Grid.Column="1" Width="30" Height="Auto" Margin="0,1" Fill="{TemplateBinding Background}" />
				<controls:PathIcon x:Name="PART_PathIcon" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{DynamicResource WD.PlaceholderTextSolidColorBrush}" IsHitTestVisible="False" Kind="Time" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter TargetName="PART_PathIcon" Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
			</Trigger>
			<Trigger Property="IsChecked" Value="True">
				<Setter TargetName="PART_PathIcon" Property="Foreground" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="WD.TimeSelectorItem" BasedOn="{StaticResource WD.DefaultListBoxItem}" TargetType="{x:Type controls:TimeSelectorItem}">
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TimeSelectorItem}">
					<ControlTemplate.Triggers>
						<Trigger Property="IsSelected" Value="True">
							<Setter Property="FontWeight" Value="Bold" />
							<Setter Property="Background" Value="Transparent" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{DynamicResource WD.BaseSolidColorBrush}" />
						</Trigger>
						<DataTrigger Binding="{Binding}" Value="">
							<Setter Property="IsEnabled" Value="False" />
						</DataTrigger>
					</ControlTemplate.Triggers>
					<controls:SmallPanel>
						<Border Name="PART_Border" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True">
							<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
						</Border>
					</controls:SmallPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.TimeListStyle" BasedOn="{StaticResource WD.DefaultListBox}" TargetType="{x:Type controls:TimeSelectorListBox}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="VirtualizingStackPanel.IsVirtualizing" Value="False" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource WD.TimeSelectorItem}" />
		<Style.Triggers>
			<Trigger Property="IsMouseOver" Value="True">
				<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
				<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="WD.TimeSelector" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:TimeSelector}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TimeSelector}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
						<controls:SmallPanel SnapsToDevicePixels="True">
							<UniformGrid Rows="1">
								<controls:TimeSelectorListBox x:Name="PART_ListBoxHour" Style="{StaticResource WD.TimeListStyle}" />
								<controls:TimeSelectorListBox x:Name="PART_ListBoxMinute" Style="{StaticResource WD.TimeListStyle}" />
								<controls:TimeSelectorListBox x:Name="PART_ListBoxSecond" Style="{StaticResource WD.TimeListStyle}" />
							</UniformGrid>
							<Line />
							<Path />
							<Border Height="{TemplateBinding ItemHeight}" Margin="{TemplateBinding SelectorMargin}" VerticalAlignment="Top" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="0,1" IsHitTestVisible="False" />
						</controls:SmallPanel>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.TimePicker" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:TimePicker}">
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:TimePicker}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel SnapsToDevicePixels="True">
						<Border Name="PART_Border" Grid.ColumnSpan="2" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" />
						<TextBox x:Name="PART_EditableTextBox" Margin="{TemplateBinding Padding}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Panel.ZIndex="1" Background="Transparent" Focusable="True" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" Style="{x:Null}" Template="{StaticResource WD.ComboBoxTextBox}" />
						<TextBlock x:Name="PART_Watermark" Margin="{TemplateBinding Padding}" Padding="1,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent" FontSize="{StaticResource WD.NormalFontSize}" Foreground="{DynamicResource WD.RegularTextSolidColorBrush}" IsHitTestVisible="False" Text="{Binding Path=(helpers:ElementHelper.Watermark), RelativeSource={RelativeSource TemplatedParent}}" TextTrimming="CharacterEllipsis" Visibility="Collapsed" />
						<ToggleButton x:Name="PART_ToggleButton" Grid.Column="1" Background="{TemplateBinding Background}" ClickMode="Release" Focusable="False" Style="{x:Null}" Template="{StaticResource WD.TimePickerToggleButton}" />
						<Popup x:Name="PART_Popup" AllowsTransparency="True" IsOpen="{Binding Path=IsChecked, ElementName=PART_ToggleButton}" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_Border}" StaysOpen="False">
							<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="24,2,24,24" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
								<controls:SmallPanel.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</controls:SmallPanel.RenderTransform>
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
								<controls:TimeSelector x:Name="PART_TimeSelector" />
							</controls:SmallPanel>
						</Popup>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_ToggleButton" Property="IsChecked" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="AllowsTransparency" Value="True">
							<Setter TargetName="PART_DropDownBorder" Property="Margin" Value="0,2,0,0" />
						</Trigger>
						<DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=Text}" Value="{x:Null}">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding ElementName=PART_EditableTextBox, Path=Text}" Value="">
							<Setter TargetName="PART_Watermark" Property="Visibility" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.TimeSelector}" TargetType="{x:Type controls:TimeSelector}" />
	<Style BasedOn="{StaticResource WD.TimePicker}" TargetType="{x:Type controls:TimePicker}" />
	<Style x:Key="WD.Drawer" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:Drawer}">
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Drawer}">
					<controls:WDBorder x:Name="Border" Margin="{TemplateBinding Margin}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True">
						<controls:SmallPanel Clip="{Binding RelativeSource={RelativeSource AncestorType=controls:WDBorder}, Path=ContentClip}">
							<Border x:Name="PART_Content">
								<ContentPresenter Content="{TemplateBinding Content}" />
							</Border>
							<Border x:Name="PART_Mark" Background="{DynamicResource WD.PrimaryTextSolidColorBrush}" Opacity=".5" />
							<Border x:Name="PART_Header" HorizontalAlignment="Left" Background="{TemplateBinding Background}" Effect="{StaticResource WD.NormalShadowDepth}">
								<ContentPresenter Content="{TemplateBinding Header}" />
							</Border>
						</controls:SmallPanel>
					</controls:WDBorder>
					<ControlTemplate.Triggers>
						<Trigger Property="Position" Value="Top">
							<Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Stretch" />
							<Setter TargetName="PART_Header" Property="VerticalAlignment" Value="Top" />
						</Trigger>
						<Trigger Property="Position" Value="Right">
							<Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Right" />
							<Setter TargetName="PART_Header" Property="VerticalAlignment" Value="Stretch" />
						</Trigger>
						<Trigger Property="Position" Value="Bottom">
							<Setter TargetName="PART_Header" Property="HorizontalAlignment" Value="Stretch" />
							<Setter TargetName="PART_Header" Property="VerticalAlignment" Value="Bottom" />
						</Trigger>
						<Trigger Property="IsOpen" Value="False">
							<Setter TargetName="PART_Mark" Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.Drawer}" TargetType="{x:Type controls:Drawer}" />
	<Style x:Key="WD.NoShadowCalendarItemStyle" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type CalendarItem}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type CalendarItem}">
					<ControlTemplate.Resources>
						<DataTemplate x:Key="{x:Static CalendarItem.DayTitleTemplateResourceKey}">
							<StackPanel>
								<TextBlock Margin="0,6" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="12" Foreground="{DynamicResource WD.PrimaryTextSolidColorBrush}" Text="{Binding}" />
								<Rectangle Height="1" VerticalAlignment="Bottom" Fill="{DynamicResource WD.BaseSolidColorBrush}" />
							</StackPanel>
						</DataTemplate>
					</ControlTemplate.Resources>
					<controls:SmallPanel x:Name="PART_Root" Margin="{TemplateBinding Margin}">
						<Border Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="{Binding BorderThickness, RelativeSource={RelativeSource AncestorType=Calendar}}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource AncestorType=Calendar}}" SnapsToDevicePixels="True" UseLayoutRounding="True">
							<Grid Margin="0,20,0,0">
								<Grid.ColumnDefinitions>
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
									<ColumnDefinition Width="Auto" />
								</Grid.ColumnDefinitions>
								<Grid.RowDefinitions>
									<RowDefinition Height="Auto" />
									<RowDefinition Height="*" />
								</Grid.RowDefinitions>
								<Button x:Name="PART_PreviousButton" Grid.Row="0" Grid.Column="0" Width="28" Height="20" HorizontalAlignment="Left" Focusable="False" Template="{StaticResource WD.PreviousButtonTemplate}" />
								<Button x:Name="PART_HeaderButton" Grid.Row="0" Grid.Column="1" HorizontalAlignment="Center" VerticalAlignment="Center" Focusable="False" FontSize="14" Template="{StaticResource WD.HeaderButtonTemplate}" />
								<Button x:Name="PART_NextButton" Grid.Row="0" Grid.Column="2" Width="28" Height="20" HorizontalAlignment="Right" Focusable="False" Template="{StaticResource WD.NextButtonTemplate}" />
								<Grid x:Name="PART_MonthView" Grid.Row="1" Grid.ColumnSpan="3" Margin="6,10" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Visible">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
								<Grid x:Name="PART_YearView" Grid.Row="1" Grid.ColumnSpan="3" Margin="6,-3,7,6" HorizontalAlignment="Center" VerticalAlignment="Center" Visibility="Hidden">
									<Grid.ColumnDefinitions>
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
										<ColumnDefinition Width="Auto" />
									</Grid.ColumnDefinitions>
									<Grid.RowDefinitions>
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
										<RowDefinition Height="Auto" />
									</Grid.RowDefinitions>
								</Grid>
							</Grid>
						</Border>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="CommonStates">
								<VisualState x:Name="Normal" />
								<VisualState x:Name="Disabled" />
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Year">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
						<DataTrigger Binding="{Binding DisplayMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Calendar}}}" Value="Decade">
							<Setter TargetName="PART_MonthView" Property="Visibility" Value="Collapsed" />
							<Setter TargetName="PART_YearView" Property="Visibility" Value="Visible" />
						</DataTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="WD.DateRangePicker" TargetType="{x:Type controls:DateRangePicker}">
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="BorderBrush" Value="{DynamicResource WD.BaseSolidColorBrush}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Background" Value="{DynamicResource WD.BackgroundSolidColorBrush}" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:DateRangePicker}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="OpenStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="1" Duration="00:00:.2" />
						</Storyboard>
						<Storyboard x:Key="CloseStoryboard">
							<DoubleAnimation EasingFunction="{StaticResource WD.ExponentialEaseOut}" Storyboard.TargetName="PART_DropDown" Storyboard.TargetProperty="(Grid.RenderTransform).(ScaleTransform.ScaleY)" To="0" Duration="00:00:.2" />
						</Storyboard>
					</ControlTemplate.Resources>
					<controls:SmallPanel SnapsToDevicePixels="True">
						<Border Name="PART_Border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" SnapsToDevicePixels="True" />
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>
							<controls:PathIcon Margin="15,0,0,0" HorizontalAlignment="Center" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Kind="Date" />
							<DatePickerTextBox x:Name="PART_TextBoxStart" Grid.Column="1" Width="Auto" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" helpers:DatePickerHelper.Watermark="{Binding StartWatermark, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Background="Transparent" Focusable="True" Foreground="{TemplateBinding Foreground}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
							<controls:PathIcon Grid.Column="2" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Kind="DateRangeRight" />
							<DatePickerTextBox x:Name="PART_TextBoxEnd" Grid.Column="3" Width="Auto" Margin="10,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" helpers:DatePickerHelper.Watermark="{Binding EndWatermark, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}" Background="Transparent" Focusable="True" Foreground="{TemplateBinding Foreground}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
						</Grid>
						<Popup x:Name="PART_Popup" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" AllowsTransparency="True" Focusable="False" Placement="Bottom" StaysOpen="False" VerticalOffset="2">
							<controls:SmallPanel x:Name="PART_DropDown" MinWidth="{TemplateBinding FrameworkElement.ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}" Margin="24,2,24,24" RenderTransformOrigin=".5,0" SnapsToDevicePixels="True">
								<controls:SmallPanel.RenderTransform>
									<ScaleTransform ScaleY="0" />
								</controls:SmallPanel.RenderTransform>
								<Border Name="PART_DropDownBorder" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}" Effect="{StaticResource WD.PopupShadowDepth}" SnapsToDevicePixels="True" UseLayoutRounding="True" />
								<StackPanel Orientation="Horizontal">
									<Calendar x:Name="PART_StartCalendar" Margin="2,0,0,0" BorderThickness="0" CalendarItemStyle="{StaticResource WD.NoShadowCalendarItemStyle}" SelectionMode="MultipleRange" />
									<Calendar x:Name="PART_EndCalendar" Margin="0,0,2,0" BorderThickness="0" CalendarItemStyle="{StaticResource WD.NoShadowCalendarItemStyle}" SelectionMode="MultipleRange" />
								</StackPanel>
							</controls:SmallPanel>
						</Popup>
					</controls:SmallPanel>
					<ControlTemplate.Triggers>
						<Trigger SourceName="PART_Popup" Property="IsOpen" Value="True">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardOpenStoryboard" Storyboard="{StaticResource OpenStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardOpenStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
						<Trigger SourceName="PART_Popup" Property="IsOpen" Value="False">
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="BeginStoryboardCloseStoryboard" Storyboard="{StaticResource CloseStoryboard}" />
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<StopStoryboard BeginStoryboardName="BeginStoryboardCloseStoryboard" />
							</Trigger.ExitActions>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DateRangePicker}" TargetType="{x:Type controls:DateRangePicker}" />
	<Style x:Key="WD.DatePickerCalendarStyle" BasedOn="{StaticResource {x:Type Calendar}}" TargetType="{x:Type Calendar}" />
	<ControlTemplate x:Key="WD.LitePagerControlTemplate" TargetType="{x:Type controls:Pagination}">
		<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="10" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="5" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<WrapPanel VerticalAlignment="Center">
					<TextBlock Text="{Binding [Total], Source={x:Static resx:LanguageManager.Instance}}" />
					<TextBlock Text="{Binding Count, StringFormat=' {0} ', RelativeSource={RelativeSource TemplatedParent}}" />
					<TextBlock Text="{Binding [Items], Source={x:Static resx:LanguageManager.Instance}}" />
				</WrapPanel>
				<controls:NumericBox x:Name="PART_CountPerPageNumericBox" Grid.Column="2" Width="32" VerticalContentAlignment="Center" Maximum="100000" Minimum="1" TextAlignment="Center" UpDownButtonsWidth="0" />
				<WrapPanel Grid.Column="3" Margin="3,0,0,0" VerticalAlignment="Center">
					<TextBlock Text="{Binding [Items], Source={x:Static resx:LanguageManager.Instance}}" />
					<TextBlock Text=" /  " />
					<TextBlock Text="{Binding [Page], Source={x:Static resx:LanguageManager.Instance}}" />
				</WrapPanel>
				<Button Grid.Column="5" Width="32" Command="{x:Static controls:Pagination.PrevCommand}">
					<controls:PathIcon Kind="Previous" Style="{StaticResource WD.MiniPathIcon}" />
				</Button>
				<controls:NumericBox x:Name="PART_JumpPageNumericBox" Grid.Column="7" Width="32" Padding="3,0" FontSize="{TemplateBinding FontSize}" Minimum="1" TextAlignment="Center" UpDownButtonsWidth="0">
					<controls:NumericBox.ToolTip>
						<TextBlock>
							<TextBlock.Text>
								<MultiBinding StringFormat="{}{0}/{1}">
									<Binding Path="Current" RelativeSource="{RelativeSource TemplatedParent}" />
									<Binding Path="PageCount" RelativeSource="{RelativeSource TemplatedParent}" />
								</MultiBinding>
							</TextBlock.Text>
						</TextBlock>
					</controls:NumericBox.ToolTip>
				</controls:NumericBox>
				<Button Grid.Column="9" Width="32" Command="{x:Static controls:Pagination.NextCommand}">
					<controls:PathIcon Kind="Next" Style="{StaticResource WD.MiniPathIcon}" />
				</Button>
			</Grid>
		</Border>
	</ControlTemplate>
	<Style x:Key="WD.Pagination" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type controls:Pagination}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type controls:Pagination}">
					<Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<WrapPanel Margin="0,0,15,0" VerticalAlignment="Center">
								<TextBlock Text="{Binding [Total], Source={x:Static resx:LanguageManager.Instance}}" />
								<TextBlock Text="{Binding Count, StringFormat=' {0} ', RelativeSource={RelativeSource TemplatedParent}}" />
								<TextBlock Text="{Binding [Items], Source={x:Static resx:LanguageManager.Instance}}" />
							</WrapPanel>
							<StackPanel Grid.Column="1" Margin="0,0,15,0" Orientation="Horizontal">
								<TextBlock Margin="0,0,3,0" VerticalAlignment="Center" Text="{Binding [Page], Source={x:Static resx:LanguageManager.Instance}}" />
								<controls:NumericBox x:Name="PART_CountPerPageNumericBox" Grid.Column="2" Width="32" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" Minimum="1" TextAlignment="Center" UpDownButtonsWidth="0" />
								<TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="{Binding [Items], Source={x:Static resx:LanguageManager.Instance}}" />
							</StackPanel>
							<Button Grid.Column="2" Width="32" Command="{x:Static controls:Pagination.PrevCommand}">
								<controls:PathIcon Kind="Previous" Style="{StaticResource WD.MiniPathIcon}" />
							</Button>
							<ListBox x:Name="PART_ListBox" Grid.Column="3" Margin="5,0" ItemContainerStyle="{StaticResource WD.PageListBoxItemStyleKey}" ItemsSource="{TemplateBinding Pages}" ScrollViewer.HorizontalScrollBarVisibility="Hidden" ScrollViewer.VerticalScrollBarVisibility="Hidden" SelectedIndex="0" Style="{StaticResource WD.PageListBoxStyleKey}">
								<ListBox.ItemsPanel>
									<ItemsPanelTemplate>
										<UniformGrid Rows="1" />
									</ItemsPanelTemplate>
								</ListBox.ItemsPanel>
							</ListBox>
							<Button Grid.Column="4" Width="32" Command="{x:Static controls:Pagination.NextCommand}">
								<controls:PathIcon Kind="Next" Style="{StaticResource WD.MiniPathIcon}" />
							</Button>
							<StackPanel Grid.Column="5" Orientation="Horizontal">
								<TextBlock Margin="3,0" VerticalAlignment="Center" Text="{Binding [Goto], Source={x:Static resx:LanguageManager.Instance}}" />
								<controls:NumericBox x:Name="PART_JumpPageNumericBox" Width="32" VerticalContentAlignment="Center" FontSize="{TemplateBinding FontSize}" Minimum="1" TextAlignment="Center" UpDownButtonsWidth="0" />
								<TextBlock Margin="3,0,0,0" VerticalAlignment="Center" Text="{Binding [Page], Source={x:Static resx:LanguageManager.Instance}}" />
							</StackPanel>
						</Grid>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsLite" Value="True">
				<Setter Property="Template" Value="{StaticResource WD.LitePagerControlTemplate}" />
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style BasedOn="{StaticResource WD.Pagination}" TargetType="{x:Type controls:Pagination}" />
	<Style x:Key="WD.DefaultDatePicker" BasedOn="{StaticResource WD.ControlBasicStyle}" TargetType="{x:Type DatePicker}">
		<Setter Property="IsTodayHighlighted" Value="True" />
		<Setter Property="SelectedDateFormat" Value="Short" />
		<Setter Property="Padding" Value="{StaticResource WD.DefaultPadding}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="HorizontalContentAlignment" Value="Left" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="CalendarStyle" Value="{DynamicResource WD.DatePickerCalendarStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DatePicker}">
					<Border x:Name="PART_Border" Background="{DynamicResource WD.BackgroundSolidColorBrush}" BorderBrush="{DynamicResource WD.BaseSolidColorBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="{Binding Path=(helpers:ElementHelper.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}">
						<Grid x:Name="PART_Root" Margin="{TemplateBinding Padding}" HorizontalAlignment="Stretch" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
							<Button x:Name="PART_Button" Focusable="False" Foreground="{TemplateBinding Foreground}" Style="{StaticResource WD.DropDownButtonStyle}" />
							<DatePickerTextBox x:Name="PART_TextBox" Width="Auto" Margin="28,0,0,0" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Background="Transparent" Focusable="True" Foreground="{TemplateBinding Foreground}" SelectionBrush="{DynamicResource WD.WindowBorderBrushSolidColorBrush}" />
							<Popup x:Name="PART_Popup" AllowsTransparency="True" Placement="Bottom" PlacementTarget="{Binding ElementName=PART_Border}" StaysOpen="False" VerticalOffset="-6" />
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
						<Trigger Property="IsDropDownOpen" Value="True">
							<Setter TargetName="PART_Border" Property="BorderBrush" Value="{DynamicResource WD.PrimaryNormalSolidColorBrush}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource WD.DefaultDatePicker}" TargetType="{x:Type DatePicker}" />
</ResourceDictionary>